<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="updateAnnotations" path="/shared/ASAssets/BestPractices_v81/ManageAnnotations/updateAnnotations" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.
</annotation>
  <parameters>
    <parameter name="performUpdate" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="updatePublishedResourceAnnotation" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inSqlStatement" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="Status">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="ResourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="ResourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ResourceAnnotation">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="PublishedResourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="PublishedResourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ColumnsUpdated">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="ColumnsNotUpdated">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_PROCEDURE_CURSOR" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="cursorNum" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="columnBaseType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dataType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="paramDirection">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDependentResourcesDirectRecurseCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="includeInitialPath" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="inLineageResourceIdList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="annotation" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inColumnAnnotations" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="updateResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	updateAnnotations

	This script is used to update resource annotations.  
	The main objective is to update the resources and columns at the level directly below the published datasource layer in DV.  
	This is the layer in which table columns may be updated.  This is the layer in which Business Directory will read in the column metadata. 
	However, Business Directory gets table and procedure metadata directly from the published (LINK) resource.  Therefore, updateAnnotations
	provides an option to push the resource metadata up to all published resources that are linked to the resource being updated.

	RULES:
		1) If the annotation in the spreadsheet is blank with no spaces, it is considered a null indicating take no action.
			The update of the annotation for that resource is not performed.
		2) If the annotation in the spreadsheet contains 1 or more blanks, it is considered a modification and the update
			of the annotation will be performed and will blank out any existing annotation.
		3) If the annotation in the spreadsheet contains non-space characters, it is considered a modification and the update
			of the annotation will be performed modifying the existing annotation.
		4) If the annotation in the spreadsheet contains multiple lines then all lines will be taken as is and and the 
			resource annotation will retain those lines.
		5) If the PhysicalType = &apos;TABLE&apos; then the table annotation will be modified otherwise it is assumed to be a COLUMN
			annotation.

	INPUT:
		-- Perform Update: 0=do not perform update, 1=perform update
		IN	performUpdate						INTEGER, 
		-- Update Published Resource Annotation
		--  0=do not push annotation to the published resource, 1=perform the update of the published (LINK) resource annotation.
		-- Business Directory gets table and procedure metadata directly from the published (LINK) resource.  Therefore, updateAnnotations
		--  provides an option to push the resource metadata up to all published resources that are linked to the resource being updated.	
		IN  updatePublishedResourceAnnotation	INTEGER, 
		-- The table is provided by the user but the columns must match exactly as shown.
		-- This strategy allows the user to store there annotations in their own datasource [excel or database] in order to manage their annotations.
		--	Default Select if inSqlStatement is left null. 
		--  select PhysicalName, PhysicalType, ResourcePath, ResourceAnnotation from /shared/ASAssets/BestPractices_v81/ManageAnnotations/Formatting/ResourceAnnotations
		IN  inSqlStatement						LONGVARCHAR,	
	OUTPUT:
		rowsProcessed	- The number of rows processed by the update of annotations. 
	EXCEPTION:	
		may be thrown by CIS
	DEPENDENCIES
		requires the latest resource modified on 05/15/2019
				/shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2

	Modified Date:	Modified By:		CIS Version:	Reason:
	11/14/2016		Mike Tinius			7.0.4			Created new.
	05/24/2017		Mike Tinius			7.0.5			Modified to include in Data Abstraction Best Practices.
	01/31/2019		Mike Tinius			7.0.8			Provide the ability to push the resource annotation up to the published (LINK) resource so that
															Business Directory will be able to retrieve table/procedure annotations.
	04/11/2019		Mike Tinius			7.0.8			Added result cursor to provided a status on each table that was updated, a list of columns update and a list of columns not updated.
	05/15/2019		Mike Tinius			7.0.8			Modified to use updateResourceAnnotationsV2 which has no vector input.  Has XML input.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE updateAnnotations(
	-- Perform Update: 0=do not perform update, 1=perform update
	IN	performUpdate						INTEGER, 
	-- Update Published Resource Annotation
	--  0=do not push annotation to published resource, 1=perform the update of the published (LINK) resource annotation.
	-- Business Directory gets table and procedure metadata directly from the published (LINK) resource.  Therefore, updateAnnotations
	--  provides an option to push the resource metadata up to all published resources that are linked to the resource being updated.	
	IN  updatePublishedResourceAnnotation	INTEGER, 
	-- The table is provided by the user but the columns must match exactly as shown.
	-- This strategy allows the user to store there annotations in their own datasource [excel or database] in order to manage their annotations.
	--	Default Select if inSqlStatement is left null. 
	--  select PhysicalName, PhysicalType, ResourcePath, ResourceAnnotation from /shared/ASAssets/BestPractices_v81/ManageAnnotations/Formatting/ResourceAnnotations
	IN  inSqlStatement						LONGVARCHAR,	
	OUT result								PIPE (
		Status						VARCHAR(4000),
		ResourcePath				VARCHAR(4000),
		ResourceType				VARCHAR,
		ResourceAnnotation			LONGVARCHAR,
		PublishedResourcePath		VARCHAR(4000),
		PublishedResourceType		VARCHAR,
		ColumnsUpdated				LONGVARCHAR,
		ColumnsNotUpdated			LONGVARCHAR
	)
)
BEGIN
	DECLARE parentPath				/lib/resource/ResourceDefs.ResourcePath;
	DECLARE prevParentPath			/lib/resource/ResourceDefs.ResourcePath DEFAULT &apos;&apos;;
	DECLARE rowsProcessed			INTEGER;
	DECLARE columnAnnotations 		LONGVARCHAR;
	DECLARE colNum					INTEGER;
	DECLARE success					BIT;
	DECLARE updateResponse			XML;
	DECLARE faultResponse			XML;
	DECLARE TYPE annotationType		ROW (
		PhysicalName				VARCHAR,
		PhysicalType				VARCHAR,
		ResourcePath				/lib/resource/ResourceDefs.ResourcePath,
		ResourceAnnotation			LONGVARCHAR
	);
	DECLARE annotationCursor		CURSOR annotationType;
	DECLARE bestPracticesRootPath 	VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesRootPath;
	DECLARE formattingPath			VARCHAR(4000) DEFAULT bestPracticesRootPath||&apos;/ManageAnnotations/Formatting/ResourceAnnotations&apos;;
	DECLARE defaultSqlStatement		LONGVARCHAR DEFAULT &apos;select PhysicalName, PhysicalType, ResourcePath, ResourceAnnotation from &apos;||formattingPath;
	DECLARE sqlStatement			LONGVARCHAR;
	DECLARE TYPE resultType			ROW (
		Status						VARCHAR(4000),
		ResourcePath				VARCHAR(4000),
		ResourceType				VARCHAR,
		ResourceAnnotation			LONGVARCHAR,
		PublishedResourcePath		VARCHAR(4000),
		PublishedResourceType		VARCHAR,
		ColumnsUpdated				LONGVARCHAR,
		ColumnsNotUpdated			LONGVARCHAR
	);
	DECLARE rec						resultType;
	DECLARE ex						EXCEPTION;

	if (inSqlStatement IS NOT NULL) then
		set sqlStatement = inSqlStatement||CHR(10)||&apos; union select &apos;&apos;END&apos;&apos;, &apos;&apos;END&apos;&apos;, &apos;&apos;/shared/END&apos;&apos;, null from /services/databases/system/DUAL&apos;;
	else
		set sqlStatement = defaultSqlStatement||CHR(10)||&apos; union select &apos;&apos;END&apos;&apos;, &apos;&apos;END&apos;&apos;, &apos;&apos;/shared/END&apos;&apos;, null from /services/databases/system/DUAL&apos;;
	end if;
	set rowsProcessed = 0;

	if (performUpdate is null) then
		raise ex value &apos;The input variable &quot;performUpdate&quot; may not be null.&apos;;
	end if;
	if (updatePublishedResourceAnnotation is null) then
		raise ex value &apos;The input variable &quot;updatePublishedResourceAnnotation&quot; may not be null.&apos;;
	end if;
	call print(&apos;INPUT:&apos;);
	call print(&apos;performUpdate=&apos;||performUpdate);
	call print(&apos;updatePublishedResourceAnnotation=&apos;||updatePublishedResourceAnnotation);
	call print(&apos;sqlStatement=[&apos;||sqlStatement||&apos;]&apos;);
	call print(&apos;&apos;);

	open annotationCursor for sqlStatement;
	for r as annotationCursor do
		set rowsProcessed = rowsProcessed + 1;
		set parentPath = r.ResourcePath;
		call print(&apos;prevParentPath=[&apos;||prevParentPath||&apos;]  parentPath=[&apos;||parentPath||&apos;]&apos;);

		-- When the table resource changes perform the update resource annotations.
		if (length(prevParentPath) &gt; 0 and prevParentPath &lt;&gt; parentPath) then
			if (performUpdate &gt; 0) then
				BEGIN INDEPENDENT TRANSACTION
					-- Update the resource annotations for the resource and columns
					call /shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2(rec.ResourcePath, rec.ResourceType, rec.ResourceAnnotation, columnAnnotations, success, updateResponse, faultResponse);
					if (faultResponse is not null) then
						raise ex value CAST(faultResponse AS LONGVARCHAR);
					end if;
					call print(&apos;Update performed for resourceType=&apos;||rec.ResourceType||&apos;  ResourcePath=&apos;||rec.ResourcePath);

					-- Validate the resource annotations
					if (rec.ResourceType = &apos;TABLE&apos;) then
						for c as 
							select columnName from /shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE(rec.ResourcePath, rec.ResourceType) 
							where columnName is not null
						do
							if (INSTR(rec.ColumnsUpdated, &apos;|&apos;||c.columnName||&apos;|&apos;) = 0) then
								if (rec.ColumnsNotUpdated is null) then
									set rec.ColumnsNotUpdated = &apos;|&apos;;
								end if;
								set rec.ColumnsNotUpdated = rec.ColumnsNotUpdated || c.columnName || &apos;|&apos;;
							end if;
						end for;
					elseif (rec.ResourceType = &apos;PROCEDURE&apos;) then
						for c as 
							select columnName from /shared/ASAssets/Utilities/repository/getBasicResourceCursor_PROCEDURE_CURSOR(rec.ResourcePath, rec.ResourceType, 1) 
							where columnName is not null
						do
							if (INSTR(rec.ColumnsUpdated, &apos;|&apos;||c.columnName||&apos;|&apos;) = 0) then
								if (rec.ColumnsNotUpdated is null) then
									set rec.ColumnsNotUpdated = &apos;|&apos;;
								end if;
								set rec.ColumnsNotUpdated = rec.ColumnsNotUpdated || c.columnName || &apos;|&apos;;
							end if;
						end for;
					end if;

					-- Update the published linke annotation if requested
					if (updatePublishedResourceAnnotation is not null and updatePublishedResourceAnnotation = 1) then
						for d as select * from /shared/ASAssets/Utilities/repository/getDependentResourcesDirectRecurseCursor(rec.ResourcePath, rec.ResourceType, 0, null) do
							if (d.resourceType = &apos;LINK&apos;) then
								set rec.PublishedResourcePath = d.resourcePath;
								set rec.PublishedResourceType = d.resourceType;

									call /shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2(rec.PublishedResourcePath, rec.PublishedResourceType, rec.ResourceAnnotation, null, success, updateResponse, faultResponse);
									if (faultResponse is not null) then
										raise ex value CAST(faultResponse AS LONGVARCHAR);
									end if;
									call print(&apos;Update performed for resourceType=&apos;||rec.PublishedResourceType||&apos;  ResourcePath=&apos;||rec.PublishedResourcePath);
							end if;
						end for;
					end if;
				EXCEPTION
					ELSE
						set rec.Status = CAST(CURRENT_EXCEPTION.MESSAGE AS LONGVARCHAR);
						if (INSTR(lower(rec.Status), &apos;does not exist&apos;) &gt; 0 or INSTR(lower(rec.Status), &apos;unable to locate resource&apos;) &gt; 0) then
							set rec.Status = &apos;EXCEPTION: NOT EXIST: &apos;||rec.Status;
						else
							set rec.Status = &apos;EXCEPTION: &apos;||rec.Status;
						end if;
						call print(rec.Status);
				END;

				-- Insert into the result pipe
				insert into result values(rec);
				set rec = null;
			else
				call print(&apos;NO update performed for resourceType=&apos;||rec.ResourceType||&apos;  ResourcePath=&apos;||rec.ResourcePath);
				set rec = null;
			end if;
		end if;

		-- prepare the table and column annotations.
		set rec.PublishedResourcePath = null;
		set rec.Status = null;
		if (r.PhysicalType = &apos;LINK&apos;) then
			call print(&apos;LINK=&apos;||r.PhysicalName||&apos;  PhysicalType=&apos;||r.PhysicalType||&apos;  ResourcePath=&apos;||r.ResourcePath);
			set rec.ResourcePath = r.ResourcePath;
			set rec.ResourceType = r.PhysicalType;
			set rec.ResourceAnnotation = r.ResourceAnnotation;
		elseif (r.PhysicalType = &apos;TABLE&apos;) then
			call print(&apos;TABLE=&apos;||r.PhysicalName||&apos;  PhysicalType=&apos;||r.PhysicalType||&apos;  ResourcePath=&apos;||r.ResourcePath);
			set rec.ResourcePath = r.ResourcePath;
			set rec.ResourceType = r.PhysicalType;
			set rec.ResourceAnnotation = r.ResourceAnnotation;
		elseif (r.PhysicalType = &apos;PROCEDURE&apos;) then
			call print(&apos;PROCEDURE=&apos;||r.PhysicalName||&apos;  PhysicalType=&apos;||r.PhysicalType||&apos;  ResourcePath=&apos;||r.ResourcePath);
			set rec.ResourcePath = r.ResourcePath;
			set rec.ResourceType = r.PhysicalType;
			set rec.ResourceAnnotation = r.ResourceAnnotation;
		else
			if (r.ResourceAnnotation is not null and length(r.ResourceAnnotation) &gt; 0) then
				call print(&apos;COLUMN=&apos;||r.PhysicalName||&apos;  INCLUDE: PhysicalType=&apos;||r.PhysicalType||&apos;  ResourcePath=&apos;||r.ResourcePath||&apos;  Annotation=[&apos;||r.ResourceAnnotation||&apos;]&apos;);
				if (columnAnnotations is null) then
					set columnAnnotations = &apos;&apos;;
					set colNum = 1;
				else
					set colNum = colNum + 1;
				end if;
				set columnAnnotations = 
					-- Repeat this &lt;resource:column&gt; for multiple columns
					&apos;        &lt;resource:column&gt;&apos;||CHR(10)||
					&apos;            &lt;resource:name&gt;&apos; || CAST(XMLTEXT(r.PhysicalName) AS VARCHAR) || &apos;&lt;/resource:name&gt;&apos;||CHR(10)||
					&apos;            &lt;resource:annotation&gt;&apos; || CAST(XMLTEXT(COALESCE(r.ResourceAnnotation, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:annotation&gt;&apos;||CHR(10)||
					&apos;        &lt;/resource:column&gt;&apos;||CHR(10)||
					&apos;&apos;;
				if (rec.ColumnsUpdated is null) then
					set rec.ColumnsUpdated = &apos;|&apos;;
				end if;
				set rec.ColumnsUpdated = rec.ColumnsUpdated || r.PhysicalName || &apos;|&apos;;
			else
				call print(&apos;COLUMN:    NOT INCLUDE: PhysicalType=&apos;||r.PhysicalType||&apos;  ResourcePath=&apos;||r.ResourcePath||&apos;  Annotation=[null]&apos;);
			end if;
		end if;
		set prevParentPath = parentPath;
	end for;
	call print(&apos;Number of Rows Processed=&apos;||rowsProcessed);
END</attribute>
  <attribute name="creationDate" type="LONG">1479156504672</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564075714164</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/159</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/139</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/232</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/138</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/267</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/140</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/262</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/142</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/141</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/211</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/148</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/243</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/199</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/227</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/237</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/218</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1479156504672</attribute>
</metadata>