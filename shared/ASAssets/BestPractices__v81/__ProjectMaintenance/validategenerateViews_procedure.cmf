<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="validategenerateViews" path="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/validategenerateViews" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="sourceFolderPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="targetFolderPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceNameFilter" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="generateViewsWrapper" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="statusMode" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="compareMode" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="20"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="10"/>
        </element>
        <element name="sourceResourcePath">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="taregetResourcePath">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/validategenerateViews" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="sourceFolderPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="targetFolderPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceNameFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="generateViewsWrapper" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="statusMode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="compareMode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="status">
            <datatype type="STRING" maxLength="20"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="10"/>
          </element>
          <element name="sourceResourcePath">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="taregetResourcePath">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
	validategenerateViews:

	This procedure is used to compare resources between a source folder and a mirror copy target folder.  This is useful when validating if the view generation
	is working correctly across a large number of views in different folders.  

	This works best when performing the following &quot;round trip&quot; scenario:
		1. A spreadsheet of physical to logical mappings has been established
		2. Generate the Formatting layer views					generateFormattingViews(1, 2, 1, 0, null, null, null, null, null, null)
		3. Make a copy of the Formatting layer views			Target=/shared/&lt;project_path&gt;/Physical/Formatting_Copy_1
		4. Generate the Formatting layer to a CSV file			generateDatasourceListCSV(C:\temp\test.csv, 1000, 1, 1, R, null, null, null, null, null, null, null,  FV, null)
		5. Copy test.csv to Common_Model_v3_file1.xlsx			Excel: C:\CompositeSoftware\BestPractices\BestPractices_v80\Common_Model_v3_file1.xlsx
				a. Open Common_Model_v3_file1.xlsx in Excel
				b. Open test.csv in Excel
				c. Select cell A2 and use the keystrokes: Ctrl-Shift-End (this will select Columns A-L and all rows except the header row
				d. Do a Ctrl-C (copy)
				e. Switch to Common_Model_v3_file1.xlsx
				f. Make sure there is no data in columns A-L and all of the rows.  If there is, then either delete it or pick a different spreadsheet: Common_Model_v3_file[1-3].xlsx
				g. Place your cursor in cell A2
				h. Do a Ctrl-V (Paste)
				i. Save the spreadsheet
		6. Refresh the cache of the spreadsheets: Common_Model_v3_file[1-3].xlsx
				a. Switch to Studio, Manager tab
				b. Select &quot;Cached Resources&quot;
				c. Select &quot;common_model&quot;
				d. Click Refresh Cache
		7. Remove the views in the Formatting layer except the &quot;/Transformations&quot; folder which is considered a source folder for transormation procedures.
		8. Generate the Formattin glayer views					generateFormattingViews(1, 2, 1, 0, null, null, null, null, null, null)
		9. Validate the view generation process					validateGenerateViews(	/shared/&lt;project_path&gt;/Physical/Formatting, 
																						/shared/&lt;project_path&gt;/Physical/Formatting_Copy_1, 
																						null, 1, N, C, N)

	The output cursor provides a status as follows:
		EQUAL				source resource path			target resource path		-- the source and target resources are equal
		NOT EQUAL			source resource path			target resource path		-- the source and target resources are not equal
		TARGET NOT FOUND	source resource path			target resource path		-- the target resource was not found when doing a compare

	Input:
			-- The source folder to begin recursing through to discover TABLE or PROCEDURE resources
		sourceFolderPath	LONGVARCHAR,

			-- The target (mirror copy of source) which is used to compare each resource with the source to determine if it is equal or not.
		targetFolderPath	LONGVARCHAR,

			-- Pass in a resource name to filter on from the source folder.  This can be a comma separated list.  
			-- The column name may not contain commas.  Do not place double quotes around the name.
		resourceNameFilter	VARCHAR,
		
			-- 0           - print the output to the cursor result window.  The cursor is bound by Composite Studio &quot;Fetch Row Size&quot; and &quot;Cursor Fetch Limit&quot;
			--               The cursor stops producing output when it hits those limits.  The limits are configured in Composite Studio
			--                  AdministrationConfigurationStudioDataFetch Rows Size and Cursor Fetch Limit.  
			--                  Modify the Cursor Fetch Limit to an arbitrary number such as 500
			-- 1 (default) - print TABLE only information to console window.  Do not print to the cursor result window.  The aforementioned limits do not apply.
		generateViewsWrapper

		statusMode			CHAR(1),		-- status mode: A=output All status, E=output Equal status only, N=output Not equal status only
		compareMode			CHAR(1),		- compare mode: S=compare SqlText, C=compare Columns and types
		debug				CHAR(1),		-- Y=debug is on, N=do not debug, will print out source and target sql script when the resources are not equal.

	Output:
		result				CURSOR
		PUBLIC TYPE	generateViewsValidateType ROW(
			status					VARCHAR(20),	-- &quot;SKIPPED&quot;, &quot;EQUAL&quot;, &quot;NOT EQUAL&quot;, &quot;TARGET NOT FOUND&quot;
			resourceType			VARCHAR(10),	-- TABLE or PROCEDURE
			sourceResourcePath		LONGVARCHAR,
			taregetResourcePath 	LONGVARCHAR
		);

	Exceptions:  none

	Modified Date:	Modified By:		CSW Version:	Reason:
	11/07/2013		Mike Tinius			6.2.0			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE validategenerateViews(
		-- The source folder to begin recursing through to discover TABLE or PROCEDURE resources
		-- 	e.g. /shared/BestPracticesTest/Physical/Formatting
	IN	sourceFolderPath		LONGVARCHAR,

		-- The target (mirror copy of source) which is used to compare each resource with the source to determine if it is equal or not.
		-- 	e.g. /shared/BestPracticesTest/Physical/Formatting_Copy_1
	IN	targetFolderPath		LONGVARCHAR,

		-- Pass in a resource name to filter on from the source folder.  This can be a comma separated list.
		--  The column name may not contain commas.  Do not place double quotes around the name.
		-- 0           - print the output to the cursor.  The cursor is bound by Composite Studio &quot;Fetch Row Size&quot; and &quot;Cursor Fetch Limit&quot;
	IN	resourceNameFilter		VARCHAR,

		--               The cursor stops producing output when it hits those limits.  The limits are configured in Composite Studio
		--                  AdministrationConfigurationStudioDataFetch Rows Size and Cursor Fetch Limit.  
		--                  Modify the Cursor Fetch Limit to an arbitrary number such as 500
		-- 1 (default) - print TABLE only information to console window.  Do not print to the cursor result window.  The aforementioned limits do not apply.
	IN  generateViewsWrapper	INTEGER,

		-- status mode:  A (default)=output All status, E=output Equal status, N=output Not equal status
	IN 	statusMode				CHAR(1),

		-- compare mode: S=compare SqlText, C=compare Columns
	IN  compareMode				CHAR(1),

		-- Y=debug is on, N=do not debug
	IN 	debug					CHAR(1),

	OUT	result					CURSOR /shared/ASAssets/BestPractices_v81/Procedures/validategenerateViews.validategenerateViewsType
)
BEGIN
	open result for 
		select * from /shared/ASAssets/BestPractices_v81/Procedures/validategenerateViews(
			sourceFolderPath, targetFolderPath, resourceNameFilter, generateViewsWrapper, statusMode, compareMode, debug);
END</attribute>
  <attribute name="creationDate" type="LONG">1383393161626</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564601704163</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>