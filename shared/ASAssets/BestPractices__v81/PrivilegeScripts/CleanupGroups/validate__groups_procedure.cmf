<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="validate_groups" path="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/validate_groups" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.
</annotation>
  <parameters>
    <parameter name="indomainName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inExceptionList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="inInclusionList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="GroupName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="DomainName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="Status">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/group_list_curs" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="curs" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="groupName">
            <datatype type="STRING" maxLength="1024"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/user/getDomainGroups" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inDomainName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="domainName">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="explicitRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="effectiveRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="inheritedRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	validate_groups

	This procedure is used to validate the existence of groups from CIS using the free-form list &quot;group_list_string&quot;.

	Modified Date:	Modified By:		CSW Version:	Reason:
	05/16/2017		Mike Tinius			7.0.5			Adapted for Data Abstraction Best Practices.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE validate_groups(
	-- Provide the Composite domain in which to validate the group list
	-- e.g. composite, ldap or ldap_im or whatever the domain name is where the groups reside.
	IN indomainName 	VARCHAR(255),
	-- [OPTINOAL] Add an item to the exclusion list to keep from deleting that group.  
	--	Each item must be appended with a comma including the last one.
	IN inExceptionList	LONGVARCHAR,
	-- [OPTIONAL] Add an item to the inclusion list to test one or more specific groups.  
	--	Each item must be appended with a comma including the last one.
	IN inInclusionList	LONGVARCHAR,
    OUT result 			PIPE  (
        GroupName 	VARCHAR(255), 
        DomainName 	VARCHAR(255),
		Status		VARCHAR(255)
	)
)
BEGIN
	DECLARE domainName			VARCHAR DEFAULT indomainName;
	-- Add an item to the exclusion list to keep from deleting that group.  Each item must be appended with a comma including the last one.
	DECLARE ExceptionList		LONGVARCHAR DEFAULT TRIM(inExceptionList);
	-- Add an item to the inclusion list to test one or more specific groups.  Each item must be appended with a comma including the last one.
	DECLARE InclusionList		LONGVARCHAR DEFAULT TRIM(inInclusionList); 
	DECLARE cnt					INTEGER;
	DECLARE groupName			VARCHAR;
	DECLARE ex					EXCEPTION;

	IF (InclusionList IS NULL) THEN
		set InclusionList = &apos;&apos;;
	END IF;
	IF (ExceptionList IS NULL) THEN
		set ExceptionList = &apos;&apos;;
	END IF;
	-- Add a comma to the end of the list
	IF (LENGTH(InclusionList) &gt; 0) THEN
		set InclusionList = REPLACE(InclusionList||&apos;,&apos;, &apos;,,&apos;, &apos;,&apos;);
	END IF;
	-- Add a comma to the end of the list
	IF (LENGTH(ExceptionList) &gt; 0) THEN
		set ExceptionList = REPLACE(ExceptionList||&apos;,&apos;, &apos;,,&apos;, &apos;,&apos;);
	END IF;

	FOR r as SELECT * FROM /shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/group_list_curs() DO
		set groupName = r.GroupName;

		IF (POSITION(groupName||&apos;,&apos; IN ExceptionList) = 0
			AND 
			(
				LENGTH(InclusionList) = 0 OR 
				(LENGTH(InclusionList) &gt; 0 AND POSITION(groupName||&apos;,&apos; IN InclusionList) &gt; 0)
			) 
		) THEN
				if (groupName is null or LENGTH(groupName) = 0) then
					raise ex value &apos;The &quot;groupName&quot; parameter may not be null or empty.&apos;;
				end if;
				if (domainName is null or LENGTH(domainName) = 0) then
					raise ex value &apos;The &quot;domainName&quot; parameter may not be null or empty.&apos;;
				end if;

				-- when the domain is composite use all lower case for domains and group names
				if (LOWER(domainName) = &apos;composite&apos;) then
					set groupName = LOWER(groupName);
				end if;
				if (LOWER(domainName) = &apos;composite&apos;) then
					set domainName = LOWER(domainName);
				end if;

				select count(*) cnt into cnt from /shared/ASAssets/Utilities/repository/&quot;user&quot;/getDomainGroups(domainName)
					where name = groupName;
				if (cnt = 0) then
					INSERT INTO result VALUES (groupName, domainName, &apos;NOT EXISTS&apos;);
					call print(&apos;Validating...GroupName=&apos;||groupName||&apos;  DomainName=&apos;||domainName||&apos;  status=NOT EXISTS&apos;);
				else
					INSERT INTO result VALUES (groupName, domainName, &apos;EXISTS&apos;);
					call print(&apos;Validating...GroupName=&apos;||groupName||&apos;  DomainName=&apos;||domainName||&apos;  status=EXISTS&apos;);
				end if;
		ELSE
			INSERT INTO result VALUES (groupName, domainName, &apos;EXCLUDED&apos;);
		END IF;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1432047322449</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564075714164</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/96</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/99</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>