<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="upgradeMoveCustomResource" path="/shared/ASAssets/BestPractices_v81/Procedures/projectMaintenance/upgradeProjectProcedures/upgradeMoveCustomResource" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="scriptsPath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="upgradeVectorRow" direction="IN" nullable="true">
      <datatype name="upgradeVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="upgradeType" type="TREE" refId="1">
            <element name="bestPracticesVersionFrom">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="bestPracticesVersionTo">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="resourceAction">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourcePath">
              <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
            </element>
            <element name="resourceType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="srcResource">
              <datatype name="srcResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="resourceType" referenceDefinitionSet="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="resourceType" type="TREE" refId="2">
                    <element name="path">
                      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
                    </element>
                    <element name="type">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
            <element name="dstResource">
              <datatype name="dstResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <reference refId="2"/>
                </itemDatatype>
              </datatype>
            </element>
            <element name="updateStruct">
              <datatype name="updateStruct" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="updateType" type="TREE" refId="3">
                    <element name="updateAction">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="occurrence">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="numLines">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="keyTextVerify">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="searchText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="replaceText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/MoveResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="targetContainerPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="newName" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
      </element>
      <element name="overwrite" direction="IN">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/projectMaintenance/upgradeProjectProcedures/generateValidList" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="validList" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createFolder" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="sourceFolderPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	upgradeCopyResource:

	This procedure is invoked by &quot;upgradeProject&quot; when the resource action=&quot;moveCustom&quot;.  This procedure moves only custom
		resources that found in the destination path and type but are not found in the source path and type.

	Input: 
		debug - &apos;Y&apos;=debug, &apos;N&apos;=do not debug
		scriptsPath	- the full path to the project scripts path.
		upgradeVectorRow - This is a single row from the upgradeVector which is defined below
	Output:
		success - 1=success, 0=fail
	Exceptions: ex - throw an exception upon error

	-----------------------------------------------------------------------------
	The following defines the structures that are used for upgrading a project:
	-----------------------------------------------------------------------------
	DECLARE PUBLIC TYPE upgradeType ROW(
		bestPracticesVersion	DOUBLE,					-- version of the best practices where the change is being applied
		resourceAction			VARCHAR					-- action to take on the resource: 
														--		     copy - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
														--	                if resource type is CONTAINER then copy all resources
														--	                if resource type is not CONTAINER then copy specific resource
														--		copyLeave - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
														--	                Creates a copy of a resource and leaves the original in place. 
														--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
														--	   copyRename - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
														--	                Creates a copy of a resource and renames the original to it.  The original is no longer present.
														--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
														--	 copyChildren - copy the children of srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
														--	                Only copying from CONTAINER to CONTAINER is allowed.
														--		   update - update dstResource using updateStruct.  srcResource is null.
														--  updateTrigger - update all trigger resources found starting at dstResource using updateStruct.  srcResource is null.
														--					 dstResource can be a single trigger or folder of triggers.
														--	   updateCrud - update CRUD resources specified by dstResource using updateStruct.  srcResource is null.
														--		   delete - delete dstResource.  srcResource and updateStruct are null.
														--		     move - move srcResource to dstResource.  updateStruct is null.
														--     moveCustom - move all custom scripts from srcResource folder to the specified dstResource folder. updateStruct is null.
														--                  a custom resource is determined by finding a resource in dstResource that is not in the DataAbstraction_GENERIC_Template.
														--         rebind - rebind srcResource to dstResource using startingFolder.  updateStruct is null.
		resourcePath			VARCHAR(4000),			-- resource path of the resource or starting folder to be used with rebind action otherwise null.
		resourceType			VARCHAR,				-- resource type of the resource to be used with rebind action otherwise null.
		srcResource				VECTOR(resourceType), 	-- source reource is always a vector of 1
		srcResource				VECTOR(resourceType), 	-- source reource is always a vector of 1
		dstResource				VECTOR(resourceType),	-- destination resource may be an unbounded vector
		updateStruct			VECTOR(updateType),		-- this structure is used when the resourceAction=update otherwise null
	);
	DECLARE PUBLIC TYPE resourceType 	ROW(
		&quot;path&quot;		TypeDefinitions.pathType,	-- Path to resource
		&quot;type&quot;		VARCHAR(255)				-- Resoruce type
	);
	DECLARE PUBLIC TYPE updateType ROW(
		updateAction			VARCHAR,			-- update Action: 			replace, replaceBefore, replaceAfter [all actions are performed on a given resource]
													-- updateTrigger Action: 	replacePath, replaceParam, fixParam [All actions are performed on a given trigger resource]
		occurrence				INTEGER,			-- The occurrence of the searchText to act upon.  0=take action on all occurrences
		numLines				INTEGER,			-- If updateAction=replaceBefore or replaceAfter, then then perform that action by searching
													--   for the number of lines CHR(10) either before or after and placing the text at that location.
		keyTextVerify			VARCHAR,			-- This is short unique text from the replaceText variable that allows the code to verify if the replace has already been done.
		searchText				LONGVARCHAR,		-- The text to search for.  
													-- If multiple occurrences are found the action may be taken according to the defined occurrence.
													-- If the searchText is not found then no action is taken.
		replaceText				LONGVARCHAR			-- The text to replace given the update action.
	);

	Modified Date:	Modified By:		CSW Version:	Reason:
	05/14/2010		Mike Tinius			6.0.0			Created new
	03/01/2018		Mike Tinius			7.0.5			Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
	03/02/2018		Mike Tinius			7.0.5			Replaced RegexSplit with extractDelimitedText
	03/14/2019		Mike Tinius			7.0.8			B.P. 2019.102: Added scriptsPath for flexibility of the location of the _scripts folder.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE upgradeMoveCustomResource(
	IN  debug				CHAR(1),	
	IN  scriptsPath			VARCHAR(4000),	-- the full path to the project scripts path.
	-- This is a single row from the upgradeVector
	IN	upgradeVectorRow 	/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.upgradeVector,
	OUT success				INTEGER
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;upgradeMoveResource&apos;;
	DECLARE srcPath				VARCHAR(4000);
	DECLARE srcType				VARCHAR;
	DECLARE dstPath				VARCHAR(4000);
	DECLARE dstType				VARCHAR;
	DECLARE resourcePath		VARCHAR(4000);
	DECLARE resourceType		VARCHAR;
	DECLARE resourcePathList 	LONGVARCHAR;
	DECLARE resourceName		VARCHAR;
	DECLARE i					INTEGER DEFAULT 1;
	DECLARE faultResponse		XML;
	DECLARE Empty				INTEGER DEFAULT 1;
	DECLARE prependMessage		VARCHAR(4000);
	DECLARE resultMessage		VARCHAR(4000);
	DECLARE message				LONGVARCHAR;
	DECLARE ex					EXCEPTION;

	-- Define the scripts root variables which can be used with a project path or template path
	DECLARE customName					VARCHAR DEFAULT &apos;_Custom&apos;;
	DECLARE scripts_CustomPath 			VARCHAR(4000) DEFAULT scriptsPath||&apos;/&apos;||customName;
	DECLARE scriptsConfigurePath 		VARCHAR(4000) DEFAULT scriptsPath||&apos;/Configure&apos;;
	DECLARE scriptsConstantsPath 		VARCHAR(4000) DEFAULT scriptsPath||&apos;/Constants&apos;;
	DECLARE scriptsDisplayPath 			VARCHAR(4000) DEFAULT scriptsPath||&apos;/Display&apos;;
	DECLARE scriptsDocumentationPath 	VARCHAR(4000) DEFAULT scriptsPath||&apos;/Documentation&apos;;
	DECLARE scriptsGeneratePath 		VARCHAR(4000) DEFAULT scriptsPath||&apos;/Generate&apos;;
	DECLARE scriptsRebindPath 			VARCHAR(4000) DEFAULT scriptsPath||&apos;/Rebind&apos;;
	-- Define the project path scripts
	DECLARE projectScriptsPath			VARCHAR(4000) DEFAULT scriptsPath;
	DECLARE projectCustomPath			VARCHAR(4000) DEFAULT scripts_CustomPath;

	DECLARE bestPracticesRootPath		VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesRootPath;
	DECLARE utilitiesRootPath			VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.utilitiesRootPath;
	-- Define the full template path
	DECLARE templatePath				VARCHAR(4000) DEFAULT bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts&apos;;
	DECLARE templateConfigurePath 		VARCHAR(4000) DEFAULT templatePath||&apos;/Configure&apos;;
	DECLARE templateConstantsPath 		VARCHAR(4000) DEFAULT templatePath||&apos;/Constants&apos;;
	DECLARE templateDisplayPath 		VARCHAR(4000) DEFAULT templatePath||&apos;/Display&apos;;
	DECLARE templateDocumentationPath 	VARCHAR(4000) DEFAULT templatePath||&apos;/Documentation&apos;;
	DECLARE templateGeneratePath 		VARCHAR(4000) DEFAULT templatePath||&apos;/Generate&apos;;
	DECLARE templateRebindPath 			VARCHAR(4000) DEFAULT templatePath||&apos;/Rebind&apos;;
	DECLARE allScriptPaths				LONGVARCHAR DEFAULT
		templateConfigurePath||&apos;,&apos;||templateConstantsPath||&apos;,&apos;||templateDisplayPath||&apos;,&apos;||templateDocumentationPath||&apos;,&apos;||templateGeneratePath||&apos;,&apos;||templateRebindPath;
	DECLARE validResourceList			LONGVARCHAR; -- this is generated from DataAbstraction_GENERIC_Template
	DECLARE resourceExists 				BOOLEAN;

	/***************************************************************
	 * Loop through the vector.  The srcResource vector and dstResource 
	 *    vector must have exactly the same number of rows.
	 ***************************************************************/
	WHILE (i &lt;= CARDINALITY(upgradeVectorRow[1].srcResource)) DO

		-- Make sure the srcResource is not null
		if (upgradeVectorRow[1].srcResource is null) then
			raise ex value moduleName||&apos;:  MOVE ACTION: The srcResource[&apos;||i||&apos;] vector may not be null.&apos;;
		end if;
		-- Make sure the dstResource is not null
		if (upgradeVectorRow[1].dstResource is null) then
			raise ex value moduleName||&apos;:  MOVE ACTION: The dstResource[&apos;||i||&apos;] vector may not be null.&apos;;
		end if;

		-- Get the source path information
		set srcPath = upgradeVectorRow[1].srcResource[i].&quot;path&quot;;
		set srcType = upgradeVectorRow[1].srcResource[i].&quot;type&quot;;
		-- Get the destination path information
		set dstPath = upgradeVectorRow[1].dstResource[i].&quot;path&quot;;
		set dstType = upgradeVectorRow[1].dstResource[i].&quot;type&quot;;

		-- Validate that the source information is not empty
		if ( (srcPath IS NULL OR LENGTH(&apos;|&apos;||srcPath||&apos;|&apos;) = 2) or  --Empty
			 (srcType IS NULL OR LENGTH(&apos;|&apos;||srcType||&apos;|&apos;) = 2) ) then  --Empty
			raise ex value moduleName||&apos;:  MOVE ACTION: The following srcResource[&apos;||i||&apos;] vector entries may be null or empty: srcPath, srcType&apos;;
		end if;
		-- Validate that the destination information is not empty
		if ( (dstPath IS NULL OR LENGTH(&apos;|&apos;||dstPath||&apos;|&apos;) = 2) or  --Empty
			 (dstType IS NULL OR LENGTH(&apos;|&apos;||dstType||&apos;|&apos;) = 2) ) then  --Empty
			raise ex value moduleName||&apos;:  MOVE ACTION: The following dstResource[&apos;||i||&apos;] vector entries may be null or empty: dstPath, dstType&apos;;
		end if;

		-- Verify the source path exists.
		call /lib/resource/ResourceExists(srcPath, srcType, null, resourceExists);
		if (NOT resourceExists) then
			raise ex value moduleName||&apos;:  MOVE ACTION:  The srcResource[&apos;||i||&apos;] vector entry path=[&apos;||NVL(srcPath,&apos;null&apos;)|| &apos;]  type=[&apos;||NVL(srcType,&apos;null&apos;)||&apos;]  does not exist.&apos;;
		end if;

		set prependMessage = moduleName||&apos;:  MOVE ACTION: Error with vector entry[&apos;||i||&apos;].  Error=&apos;;

		/***************************************************************
		 * Move any custom scripts that are not part of the 
		 *   DataAbstraction_GENERIC_Template to the _Custom folder
		 ***************************************************************/
		set message = null;
		BEGIN INDEPENDENT TRANSACTION
			-- Iterate through the list of generic template script paths
			for gt as select * from /shared/ASAssets/Utilities/string/extractDelimitedText(allScriptPaths, &apos;,&apos;,0,0,0,1,0) do
				set resourcePath = gt.object;
				set resourceType = &apos;CONTAINER&apos;;
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;:  Upgrade from source path=&apos;||resourcePath);

				-- Get a list of valid resources from the  DataAbstraction_GENERIC_Template/_scripts/&lt;resourcePath&gt;
				call /shared/ASAssets/BestPractices_v81/Procedures/projectMaintenance/upgradeProjectProcedures/generateValidList(resourcePath, resourceType, validResourceList);
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;:       Valid source resource list=&apos;||validResourceList);

				-- Replace the templatePath with the project path
				set resourcePath = REPLACE(resourcePath, templatePath, scriptsPath);
				set resourceType = &apos;CONTAINER&apos;;

				-- Verify that the project path exists
				call /lib/resource/ResourceExists(resourcePath, resourceType, null, resourceExists);
				if (resourceExists) then
					call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;:     Project path exists=&apos;||resourcePath);
					-- Iterate through the list of resources in the project path _scripts folders and them to the _Custom folder
					for pp as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
						if (POSITION(&apos;|&apos;||pp.name||&apos;|&apos; IN validResourceList) = 0) then
							call /lib/resource/ResourceExists(projectCustomPath, &apos;CONTAINER&apos;, null, resourceExists);
							if (NOT resourceExists) then
								call /shared/ASAssets/Utilities/repository/createFolder(projectCustomPath, success, faultResponse);
								if (faultResponse is not null) then
									raise ex value CAST(faultResponse AS LONGVARCHAR);
								end if;
							end if;
							call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;:       Move resource=&apos;||pp.name);
							call /lib/resource/MoveResource(pp.resPath, pp.resType, projectCustomPath, pp.name, true);
						end if;
					end for;
				else
					set resultMessage = &apos;Project path does not exist=&apos;||NVL(resourcePath,&apos;null&apos;);
					call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;:     &apos;||resultMessage);
					if (message is null) then
						set message = resultMessage;
					else
						set message = message || &apos;,  &apos;|| resultMessage;
					end if;
				end if;

			end for;
		EXCEPTION
			ELSE raise ex value cast(CURRENT_EXCEPTION.TRACE as longvarchar);
		END;

		set i = i + 1;
	END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1573161757946</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:1:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
</metadata>