<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="vector_masterUpgradeVector" path="/shared/ASAssets/BestPractices_v81/Procedures/projectMaintenance/vector_masterUpgradeVector" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="projectPathSrc" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="projectPathDst" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="scriptsPathDst" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="bestPracticesVersionFrom" direction="IN" nullable="true">
      <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="bestPracticesVersionTo" direction="IN" nullable="true">
      <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="upgradeVector" direction="OUT" nullable="true">
      <datatype name="upgradeVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="upgradeType" type="TREE" refId="1">
            <element name="bestPracticesVersionFrom">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="bestPracticesVersionTo">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="resourceAction">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourcePath">
              <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
            </element>
            <element name="resourceType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="srcResource">
              <datatype name="srcResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="resourceType" referenceDefinitionSet="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="resourceType" type="TREE" refId="2">
                    <element name="path">
                      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
                    </element>
                    <element name="type">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
            <element name="dstResource">
              <datatype name="dstResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <reference refId="2"/>
                </itemDatatype>
              </datatype>
            </element>
            <element name="updateStruct">
              <datatype name="updateStruct" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="updateType" type="TREE" refId="3">
                    <element name="updateAction">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="occurrence">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="numLines">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="keyTextVerify">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="searchText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="replaceText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	vector_masterUpgradeVector:

	This procedure provides a vector of upgrade versions.   Upgrading is performed sequentially.  For example, if the current
	version is 7.0 and you are upgrading to 7.2, first 7.0 is upgraded to 7.1 and then 7.1 is upgraded to 7.2 and so on.
	The following steps are executed here:
		1. Validate all entries and raise exception if invalid
		2. Return only the section that matches both the bestPracticesVersionFrom and bestPracticesVersionTo
		3. Replace all $PROJECT_PATH_SRC variables with the actual project path that is passed.
		3. Replace all $PROJECT_PATH_DST variables with the actual project path that is passed.

	Each From/To version combination is marked by a section header (for example):
		/ ********************************************************
		 *  Actions to upgrade 7.2 to 7.3:
		 ******************************************************** /
	It is the responsibility of the developer to add additional sections with the appropriate actions when providing a
	new version of the Best Practices.

	Input: 
		IN projectPathSrc					VARCHAR(2048),
			-- the full path to a project including the project name of the source folder (only used when upgrading 1.0 through 6.6)
		IN projectPathDst					VARCHAR(2048),
			-- the full path to a project including the project name of the destination folder (used for all project upgrades)
		IN scriptsPathDst					VARCHAR(2048),
			-- the full path to the project scripts path of the destination folder.
		IN bestPracticesVersionFrom 		DOUBLE,
			-- the version upgrading from
		IN bestPracticesVersionTo 			DOUBLE,
			-- the version upgrading to
	Output:
		OUT	upgradeVector 					/shared/BestPractices/Procedures/TypeDefinitions.upgradeVector
			-- see the structure definition below.

	Exceptions:  ex

	-----------------------------------------------------------------------------
	The following defines the structures that are used for upgrading a project:
	-----------------------------------------------------------------------------
	DECLARE PUBLIC TYPE upgradeType ROW(
		bestPracticesVersionFrom DOUBLE,				-- &quot;From&quot; version of the best practices where the change is coming from
		bestPracticesVersionTo	DOUBLE,					-- &quot;To&quot; version of the best practices where the change is being applied
		resourceAction			VARCHAR					-- action to take on the resource: 
														--		     copy - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
														--	                if resource type is CONTAINER then copy all resources
														--	                if resource type is not CONTAINER then copy specific resource
														--   copyNotExist - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
														--	                if resource type is CONTAINER then copy all resources if they do not exist but do not overwrite existing resources.
														--	                if resource type is not CONTAINER then copy specific resource if it does not exist.
														--		copyLeave - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
														--	                Creates a copy of a resource and leaves the original in place. 
														--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
														--	   copyRename - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
														--	                Creates a copy of a resource and renames the original to it.  The original is no longer present.
														--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
														--	 copyChildren - copy the children of srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
														--	                Only copying from CONTAINER to CONTAINER is allowed.
														--		   update - update dstResource using updateStruct.  srcResource is null. 
														--  updateTrigger - update all trigger resources found starting at dstResource using updateStruct.  srcResource is null.
														--					 dstResource can be a single trigger or folder of triggers.
														--	   updateCrud - update CRUD resources specified by dstResource using updateStruct.  srcResource is null.
														--		   delete - delete dstResource.  srcResource and updateStruct are null.
														--		     move - move srcResource to dstResource.  updateStruct is null.
														--     moveCustom - move all custom scripts from srcResource folder to the specified dstResource folder. updateStruct is null.
														--                  a custom resource is determined by finding a resource in dstResource that is not in the DataAbstraction_GENERIC_Template.
														--         rebind - rebind srcResource to dstResource using startingFolder.  updateStruct is null.
														--  configFolders - configure the starting folders.
														-- restoreDefaultValues - restores the folder layer constants values with the copy of defaultValues made during the upgrade.
														-- restoreDocConstants - restores the documentation constants with the copy of constants made during the upgrade.
		resourcePath			VARCHAR(4000),			-- resource path of the resource or starting folder to be used with rebind action otherwise null.
		resourceType			VARCHAR,				-- resource type of the resource to be used with rebind action otherwise null.
		srcResource				VECTOR(resourceType), 	-- source reource is always a vector of 1
		dstResource				VECTOR(resourceType),	-- destination resource may be an unbounded vector
		updateStruct			VECTOR(updateType),		-- this structure is used when the resourceAction=update otherwise null
	);
	DECLARE PUBLIC TYPE resourceType 	ROW(
		&quot;path&quot;		TypeDefinitions.pathType,	-- Path to resource
		&quot;type&quot;		VARCHAR(255)				-- Resoruce type
	);
	DECLARE PUBLIC TYPE updateType ROW(
		updateAction			VARCHAR,			-- update Action: 			modifyConstant, replace, replaceBefore, replaceAfter [all actions are performed on a given resource]
													-- updateTrigger Action: 	replacePath, replaceParam, fixParam, restoreParam [All actions are performed on a given trigger resource]
		occurrence				INTEGER,			-- The occurrence of the searchText to act upon.  0=take action on all occurrences
		numLines				INTEGER,			-- If updateAction=replaceBefore or replaceAfter, then then perform that action by searching
													--   for the number of lines CHR(10) either before or after and placing the text at that location.
		keyTextVerify			VARCHAR,			-- This is short unique text from the replaceText variable that allows the code to verify if the replace has already been done.
		searchText				LONGVARCHAR,		-- The text to search for.  
													-- If multiple occurrences are found the action may be taken according to the defined occurrence.
													-- If the searchText is not found then no action is taken.
		replaceText				LONGVARCHAR			-- The text to replace given the update action.
	);

	Modified Date:	Modified By:		CIS Version:	Reason:
	05/14/2013		Mike Tinius			6.0.0			Created new for Best Practices 7.1
	08/01/2013		Mike Tinius			6.0.0			Added upgrade path for 1.0, 5.0, 6.0 compatible versions to the latest version.
	11/11/2013		Mike Tinius			6.1.0			B.P. 8.0: Added upgrade for 8.0.  Added updateTrigger capability.
	04/23/2014		Mike Tinius			6.2.0			B.P. 8.1: Added upgrade for 8.1.
	08/08/2014		Mike Tinius			6.2.5			B.P. 8.1.3: Added upgrade from 8.1 to current like 8.13
	08/25/2014		Mike Tinius			6.2.6			B.P. 8.1.4: Added upgrade from 8.13 to 8.14 and resolved issue with replacing $PROJECT_PATH_SRC and $PROJECT_PATH_DST in keyTextVerify.
	10/28/2014		Mike Tinius			6.2.6			B.P. 8.1.5: 1) Added upgrade from 8.14 to 8.15.
																	2) Added replace for defaultValues from &apos;8.1;&apos; and &apos;8.13;&apos; and &apos;8.14;&apos; to bestPracticesVersionCurrent
	05/20/2015		Mike Tinius			6.2.6,7.0.x		B.P. 8.1.6: 1) Added upgrade from 8.15 to 8.16.
	09/21/2015		Mike Tinius			7.0.x			B.P. 8.1.7: Added generateViews=2 for a select * projection.  Requires Utilities_2015Q3
	05/24/2017		Mike Tinius			7.0.x			B.P. 8.1.8: Added Privilege Scripts.
	12/22/2017		Mike Tinius			7.0.x			B.P. 8.1.9: Transitioned to TIBCO Software open source.
	03/20/2018		Mike Tinius			7.0.x			B.P. 2018.1: Upgraded to use Utilities 2018Q1.  Added new capability: Dynamic File Framework.  Various other changes.
	01/24/2019		Mike Tinius			8.0.0			B.P. 2019.1: Added the ability to handle columnCaseRule, resourcePrefix, resourceSuffix and newColumnList for generateMode=&apos;G&apos;. 
	01/29/2019		Mike Tinius			8.0.0			B.P. 2019.101: Fix bug so derivedFilterPath could be used with generateToFolder.
	04/15/2019		Mike Tinius			7.0.8			B.P. 2019.200: Added scriptsPath for flexibility of the location of the _scripts folder.
																	   Changed custom functions to explicit paths.
	06/12/2019		Mike Tinius			7.0.8			B.P. 2019.200: Derived the new generateDatasourceListXML from generateDatasourceList to eliminate vector usage for ConfigParamsVector and inStartingFolderExtendedVector.
	07/26/2019		Mike Tinius			7.0.8			B.P. 2019.300: Added action &quot;restoreDefaultValues&quot;, &quot;restoreDocConstants&quot; and update sub-action &quot;modifyConstant&quot;.

	Example of &quot;move&quot;
		-- Move: scenario 2 folder to folder
		,(	7.2, 7.3, &apos;move&apos;, 
			null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_1&apos;,&apos;CONTAINER&apos;)],
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2&apos;,&apos;CONTAINER&apos;)],
			null
		)
		-- Move: scenario 3 non-folder to non-folder
		,(	7.2, 7.3, &apos;move&apos;, 
			null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind2/rebindAllResources2&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2/rebindAllResources2&apos;,&apos;PROCEDURE&apos;)],
			null
		)
		-- Move: scenario 4 non-folder to folder
		,(	7.2, 7.3, &apos;move&apos;, 
			null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind3/rebindAllResources3&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2&apos;,&apos;CONTAINER&apos;)],
			null
		)

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE vector_masterUpgradeVector(
	IN projectPathSrc				VARCHAR(4096),
	IN projectPathDst				VARCHAR(4096),
	IN scriptsPathDst				VARCHAR(4096),
	IN bestPracticesVersionFrom 	DOUBLE,
	IN bestPracticesVersionTo 		DOUBLE,
	OUT	upgradeVector 				/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.upgradeVector
)
BEGIN
	DECLARE debug						CHAR(1) DEFAULT &apos;Y&apos;;
	DECLARE moduleName					VARCHAR DEFAULT &apos;vector_masterUpgradeVector&apos;;
	DECLARE projectPathDstReserved		VARCHAR(4096);
	DECLARE scriptsPathDstReserved		VARCHAR(4096);
	DECLARE scriptsPathDstDerived		VARCHAR(4096);
	DECLARE projectNameReserved			VARCHAR;
	DECLARE resourcePath				LONGVARCHAR;
	DECLARE masterUpgradeVector 		/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.upgradeVector;
	DECLARE i,j,k						INTEGER;
	DECLARE ex							EXCEPTION;
	DECLARE resourceAction				VARCHAR;
	DECLARE updateAction				VARCHAR;
	DECLARE eol							VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.newline; -- new line character &quot;LF&quot;
	DECLARE utilitiesRootPath			VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.utilitiesRootPath;
	DECLARE bestPracticesRootPath		VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesRootPath;
	DECLARE bestPracticesVersionCurrent DOUBLE DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesVersion;

	-- Apply reserved path to project path destination
	call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(projectPathDst, null, projectPathDstReserved);
	-- Apply reserved path to scripts path desitnation
	call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(scriptsPathDst, null, scriptsPathDstReserved);
	-- Get the derived path
	set scriptsPathDstDerived = REPLACE(scriptsPathDstReserved, projectPathDstReserved, &apos;&apos;);
	-- Get the project name
	call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(projectPathDstReserved, &apos;E&apos;, projectNameReserved, resourcePath);

	if (UPPER(debug) = &apos;Y&apos;) THEN
		call print(&apos;INPUT:&apos;);
		call print(&apos;    projectPathSrc=&apos;||NVL(projectPathSrc,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_SRC&apos;);
		call print(&apos;    projectPathDst=&apos;||NVL(projectPathDst,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_DST&apos;);
		call print(&apos;    scriptsPathDst=&apos;||NVL(scriptsPathDst,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST&apos;);
		call print(&apos;    bestPracticesVersionFrom=&apos;||bestPracticesVersionFrom);
		call print(&apos;    bestPracticesVersionTo=&apos;||bestPracticesVersionTo);
		call print(&apos;DERIVED:&apos;);
		call print(&apos;    projectPathDstReserved=&apos;||NVL(projectPathDstReserved,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_DST_RESERVED&apos;);
		call print(&apos;       projectNameReserved=&apos;||NVL(projectNameReserved,&apos;null&apos;)   ||&apos;   REPLACEMENT KEYWORD=$PROJECT_NAME_RESERVED&apos;);
		call print(&apos;    scriptsPathDstReserved=&apos;||NVL(scriptsPathDstReserved,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST_RESERVED&apos;);
		call print(&apos;     scriptsPathDstDerived=&apos;||NVL(scriptsPathDstDerived,&apos;null&apos;) ||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST_DERIVED&apos;);
	end if;

	if (projectPathDst IS NULL OR LENGTH(&apos;|&apos;||projectPathDst||&apos;|&apos;) = 2) then  --Empty
		raise ex value moduleName||&apos;:  &quot;projectPathDst&quot; may not be null or empty.&apos;;
	end if;
	if (scriptsPathDst IS NULL OR LENGTH(&apos;|&apos;||scriptsPathDst||&apos;|&apos;) = 2) then  --Empty
		raise ex value moduleName||&apos;:  &quot;scriptsPathDst&quot; may not be null or empty.&apos;;
	end if;
	if (bestPracticesVersionFrom is null) then
		raise ex value moduleName||&apos;:  &quot;bestPracticesVersionFrom&quot; may not be null.&apos;;
	end if;
	if (bestPracticesVersionTo is null) then
		raise ex value moduleName||&apos;:  &quot;bestPracticesVersionTo&quot; may not be null.&apos;;
	end if;

/********************************************************************************************************************************
 * masterUpgradeVector:
 *    The &quot;masterUpgradeVector&quot; provides a complete list of all the upgrade actions for each upgrade path starting with 7.0.
 *
 *    It is the responsibility of the developer to add new upgrade entries for each new release of the Best Practices scripts.
 *********************************************************************************************************************************/
	set masterUpgradeVector = VECTOR [
/********************************************************
 * Actions to upgrade 1.0 through 4.0 to latest version:
 ********************************************************/
		-- 1. Copy Physial Metadata (Spelled wrong in 1.0 and 2.0)
		(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physial_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 2. Copy Physical Metadata (Spelled correctly in 3.0 and 4.0)
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 3. Copy Physical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_1_Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 4. Copy Formatting Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/L3_1_Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 5. Copy Logical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_2_Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 6. Copy Federated Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_1_Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 7. Copy Client Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_2_Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 8. Copy Client Services
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_1_Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 9. Copy constants to Definitions used by CRUD
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 10. Copy Test Physical Metadata (Spelled correctly in 1.0 through 4.0)
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_2_Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 11. Copy Test Physical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_1_Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 12. Copy Test Formatting Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/L3_1_Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 13. Copy Test Logical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_2_Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 14. Copy Test Federated Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_1_Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 15. Copy Test Client Views
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_2_Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 16. Copy Test Client Services
		,(	1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_1_Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 17. Rebind Physial Metadata (Spelled wrong in 1.0 and 2.0)
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physial_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 18. Rebind Physical Metadata (Spelled correctly in 3.0 and 4.0)
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 19. Rebind Physical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_1_Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 20. Rebind Formatting Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/L3_1_Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 21. Rebind Logical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_2_Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 22. Rebind Federated Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_1_Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 23. Rebind Client Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_2_Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 24. Rebind Client Services
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_1_Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 25. Rebind Test Physical Metadata (Spelled correctly in 1.0 through 4.0)
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_2_Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 26. Rebind Test Physical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_1_Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 27. Rebind Test Formatting Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/L3_1_Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 28. Rebind Test Logical Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_2_Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 29. Rebind Test Federated Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_1_Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 30. Rebind Test Client Views
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_2_Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 31. Rebind Test Client Services
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_1_Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 32. Rebind /shared/BestPractices
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 33. Rebind constants
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 34. Rebind defaultValues
		,(	1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
		-- 35. Update CRUD procedures within the destination project path
		,(	1.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 5.0 to latest version:
 ********************************************************/

		-- 1. Copy Physical Metadata
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 2. Copy Physical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 3. Copy Formatting Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 4. Copy Logical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 5. Copy Federated Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 6. Copy Business Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
		-- 7. Copy Client Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 8. Copy Client Services
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 9. Copy constants to Definitions used by CRUD
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 10. Copy Test Physical Metadata
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 11. Copy Test Physical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 12. Copy Test Formatting Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 13. Copy Test Logical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 14. Copy Test Federated Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 15. Copy Test Business Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
		-- 16. Copy Test Client Views
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 17. Copy Test Client Services
		,(	5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 18. Rebind Physical Metadata
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 19. Rebind Physical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 20. Rebind Formatting Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 21. Rebind Logical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 22. Rebind Federated Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 23. Rebind Business Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 24. Rebind Client Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 25. Rebind Client Services
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 26. Rebind Test Physical Metadata
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 27. Rebind Test Physical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 28. Rebind Test Formatting Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 29. Rebind Test Logical Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 30. Rebind Test Federated Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 31. Rebind Test Business Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 32. Rebind Test Client Views
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 33. Rebind Test Client Services
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 34. Rebind /shared/BestPractices
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 35. Rebind constants
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 36. Rebind defaultValues
		,(	5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
		-- 37. Update CRUD procedures within the destination project path
		,(	5.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 6.0  thru 6.6 to latest version:
 ********************************************************/
		-- 1. Copy Physical Metadata
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 2. Copy Physical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 3. Copy Formatting Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 4. Copy Logical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 5. Copy Federated Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 6. Copy Business Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
		-- 7. Copy Client Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 8. Copy Client Services
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)
		-- 9. Copy Client Published
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Published&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Published&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Copy constants to Definitions used by CRUD
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 11. Copy Test Physical Metadata
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
		-- 12. Copy Test Physical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
		-- 13. Copy Test Formatting Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
		-- 14. Copy Test Logical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
		-- 15. Copy Test Federated Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
		-- 16. Copy Test Business Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
		-- 17. Copy Test Client Views
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
		-- 18. Copy Test Client Services
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], 	null)
		-- 19. Copy Test Client Published
		,(	6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Published&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Published&apos;,&apos;CONTAINER&apos;)], 	null)

		-- 20. Rebind Physical Metadata
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 21. Rebind Physical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 22. Rebind Formatting Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 23. Rebind Logical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 24. Rebind Federated Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 25. Rebind Business Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 26. Rebind Client Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 27. Rebind Client Services
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 28. Rebind Client Published
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 29. Rebind Test Physical Metadata
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 30. Rebind Test Physical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 31. Rebind Test Formatting Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 32. Rebind Test Logical Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 33. Rebind Test Federated Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 34. Rebind Test Business Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 35. Rebind Test Client Views
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 36. Rebind Test Client Services
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 37. Rebind Test Client Published
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

		-- 38. Rebind /shared/BestPractices
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 39. Rebind constants
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
		-- 40. Rebind defaultValues
		,(	6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
		-- 41. Update CRUD procedures within the destination project path
		,(	6.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.0 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.0 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	7.0, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Delete $SCRIPTS_PATH_DST/Rebind
		,(	7.0, bestPracticesVersionCurrent, &apos;delete&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	7.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 8. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	7.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
					])

		-- 9. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	7.0, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;) -- fix the single quote pairs
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
--					,(&apos;replaceParam&apos;,	0,	0,		&apos;$PROJECT_PATH_DST&apos;,					&apos;$PROJECT_PATH_DST&apos;,													&apos;$PROJECT_PATH_DST&apos;)
					])

		-- 10. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	7.0, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 11. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 12. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 13. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 14. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 15. Update CRUD procedures within the destination project path
		,(	7.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.1 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	7.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	7.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	7.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
					])

		-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	7.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;) -- fix the single quote pairs
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
--					,(&apos;replaceParam&apos;,	0,	0,		&apos;$PROJECT_PATH_DST&apos;,					&apos;$PROJECT_PATH_DST&apos;,													&apos;$PROJECT_PATH_DST&apos;)
					])

		-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	7.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 10. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 11. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 12. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 13. Update CRUD procedures within the destination project path
		,(	7.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.2 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.2 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	7.2, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	7.2, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	7.2, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;/shared/PSAssets/BestPractices_v80&apos;,	&apos;/shared/BestPractices_v72/Procedures/defaultValues&apos;,					bestPracticesRootPath||&apos;/&quot;_ProjectMaintenance&quot;/defaultValues&apos;)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
					])

		-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	7.2, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;) -- fix the single quote pairs
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
--					,(&apos;replaceParam&apos;,	0,	0,		&apos;$PROJECT_PATH_DST&apos;,					&apos;$PROJECT_PATH_DST&apos;,													&apos;$PROJECT_PATH_DST&apos;)
					])

		-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	7.2, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 10. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 11. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 12. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 13. Update CRUD procedures within the destination project path
		,(	7.2, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.3 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.3 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	7.3, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	7.3, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	7.3, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		bestPracticesRootPath,					&apos;/shared/Utilities/BestPractices_v73&apos;,									bestPracticesRootPath) --&apos;/shared/PSAssets/BestPractices_v80&apos;
					,(&apos;replace&apos;,		0,	0,		bestPracticesRootPath,					&apos;/shared/PSAssets/Utilities/BestPractices_v73&apos;,							bestPracticesRootPath)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replace&apos;,		0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
					])

		-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	7.3, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;) -- fix the single quote pairs
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/Utilities&apos;,													utilitiesRootPath)
					,(&apos;replacePath&apos;,	0,	0,		utilitiesRootPath,						&apos;/shared/PSAssets/Utilities&apos;,											utilitiesRootPath)
--					,(&apos;replaceParam&apos;,	0,	0,		&apos;$PROJECT_PATH_DST&apos;,					&apos;$PROJECT_PATH_DST&apos;,													&apos;$PROJECT_PATH_DST&apos;)
					])

		-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	7.3, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 10. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 11. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 12. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 13. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 14. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 15. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
		,(	7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Update CRUD procedures within the destination project path
		,(	7.3, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.0 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.0 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.0, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.0, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.0, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.0, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.0, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.0, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.0, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 8.13 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.13, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.13, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.13, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.13, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.13, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.13, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.13, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.13, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.13, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.13, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.14 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.14, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.14, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.14, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.14, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.14, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.14, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.14, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.14, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.14, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.14, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.15 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.15, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.15, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.15, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.15, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.15, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.15, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.15, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.15, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.15, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.15, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.16 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.16, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.16, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.16, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.16, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.16, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.16, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.16, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.16, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.16, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.16, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.17 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.17, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.17, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.17, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.17, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.17, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.17, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.17, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.17, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.17, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.17, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 8.18 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.18, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.18, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.18, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.18, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.18, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.18, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.18, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.18, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.18, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Update CRUD procedures within the destination project path
		,(	8.18, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.19 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	8.19, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	8.19, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	8.19, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	8.19, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	8.19, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	8.19, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	8.19, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	8.19, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	8.19, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 15. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	8.19, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2018.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2018.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	2018.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	2018.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	2018.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	2018.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	2018.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	2018.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	2018.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	2018.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	2018.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	2018.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2019.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.1 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	2019.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	2019.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	2019.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	2019.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	2019.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	2019.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	2019.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	2019.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	2019.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	2019.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2019.101 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.101 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	2019.101, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	2019.101, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	2019.101, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	2019.101, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	2019.101, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	2019.101, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	2019.101, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	2019.101, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	2019.101, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	2019.101, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 2019.200 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.200 to Current.  It makes one copy of the entire _scripts folder. */
		-- 1. Make a copy of $SCRIPTS_PATH_DST
		,(	2019.200, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

		-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
		,(	2019.200, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

		-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
		,(	2019.200, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

		-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

		-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

		-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

		-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

		-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
		,(	2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
			VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

		-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
		,(	2019.200, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,								searchText,															replaceText
					  (&apos;modifyConstant&apos;,1,	0,		&apos;bestPracticesVersion&apos;,						&apos;bestPracticesVersion&apos;,												CAST(bestPracticesVersionCurrent AS VARCHAR))
					 ,(&apos;replace&apos;,		0,	0,		&apos;VARCHAR(4000)&apos;,							&apos;VARCHAR(1024)&apos;,													&apos;VARCHAR(4000)&apos;) 
					 ,(&apos;replace&apos;,		1,	0,		&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,			&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$PROJECT_PATH_DST_RESERVED&apos;,				bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,			&apos;$PROJECT_PATH_DST_RESERVED&apos;)
					 ,(&apos;replace&apos;,		1,	0,		&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,				&apos;/&quot;_scripts&quot;&apos;,														&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
					])

		-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
		,(	2019.200, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;replace&apos;,		0,	0,		&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,			bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,	&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
					])

		-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
		,(	2019.200, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
			VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
			VECTOR[	--updateAction,	occur,numLines,	keyTextVerify,							searchText,																replaceText
					 (&apos;restoreParam&apos;,	0,	0,		&apos;&apos;,										&apos;$SCRIPTS_PATH_DST&apos;,													&apos;&apos;)
					,(&apos;fixParam&apos;,		0,	0,		&apos;&apos;,										&apos;&apos;,																		&apos;&apos;)
					])

		-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
		,(	2019.200, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
		,(	2019.200, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
		,(	2019.200, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

		-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, 	VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
		,(	2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, 		VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

		-- 20. Update CRUD procedures within the destination project path
		,(	2019.200, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Add more sections over time...
 * Actions to upgrade the previous YYYY.MMM to the most current version: 
 * 	1) Copy the last upgrade section including the comment header for the section.
 *  2) Paste above this comment marker and after the previous release leaving a couple of blank lines in between.
 *  3) Modify the first column in the vector formatted as YYYY.MMM with the previous release.
 *  4) If any new modifications are required then add them into that section preferrably at the end if possible.
 *  5) Add the new section backwards in every section back to and including 8.1.
 *     This is required so that when a particular release is found, it executes the necessary actions to bring that 
 *     release up to par with the current release.  Release upgrades are not sequential.  All of the upgrade actions
 *     are defined within the context of the release version that was found at the time of upgrade.
 ********************************************************/

	];



	/********************************************************
	 * Validate all entries and raise exception if invalid
	 *
	 * Return only the section that matches both the
	 *   bestPracticesVersionFrom and bestPracticesVersionTo
	 *
	 * Replace all $PROJECT_PATH_DST variables with the actual
	 *   project path that is passed.
	 ********************************************************/
	set j = 0;
	set i = 1;
	WHILE (i &lt;= CARDINALITY(masterUpgradeVector)) DO

		-- Validate the resource action and masterUpgradeVector vector
		--		     copy - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
		--	                if resource type is CONTAINER then copy all resources
		--	                if resource type is not CONTAINER then copy specific resource
		--   copyNotExist - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
		--	                if resource type is CONTAINER then copy all resources if they do not exist but do not overwrite existing resources.
		--	                if resource type is not CONTAINER then copy specific resource if it does not exist.
		--		copyLeave - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
		--	                Creates a copy of a resource and leaves the original in place. 
		--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
		--	   copyRename - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
		--	                Creates a copy of a resource and renames the original to it.  The original is no longer present.
		--	                The copy detects other copies an increments the number as needed in the format of _Copy_#
		--	 copyChildren - copy the children of srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
		--	                Only copying from CONTAINER to CONTAINER is allowed.
		--		   update - update dstResource using updateStruct.  srcResource is null.
		--  updateTrigger - update all trigger resources found starting at dstResource using updateStruct.  srcResource is null.
		--					 dstResource can be a single trigger or folder of triggers.
		--	   updateCrud - update CRUD resources specified by dstResource using updateStruct.  srcResource is null.
		--		   delete - delete dstResource.  srcResource and updateStruct are null.
		--		     move - move srcResource to dstResource.  updateStruct is null.
		--     moveCustom - move all custom scripts from srcResource folder to the specified dstResource folder. updateStruct is null.
		--                  a custom resource is determined by finding a resource in dstResource that is not in the DataAbstraction_GENERIC_Template.
		--         rebind - rebind srcResource to dstResource using startingFolder.  updateStruct is null.
		--  configFolders - configure the starting folders.
		-- restoreDefaultValues - restores the folder layer constant values with the copy of defaultValues made during the upgrade.
		-- restoreDocConstants - restores the documentation constants with the copy of constants made during the upgrade.
		set resourceAction = masterUpgradeVector[i].resourceAction;
		CASE UPPER(resourceAction)
			WHEN &apos;COPY&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;COPYNOTEXIST&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;COPYLEAVE&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
			WHEN &apos;COPYRENAME&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
			WHEN &apos;COPYCHILDREN&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
			WHEN &apos;UPDATE&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].updateStruct is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].updateStruct may not be null.&apos;;
				end if;
			WHEN &apos;UPDATETRIGGER&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].updateStruct is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].updateStruct may not be null.&apos;;
				end if;
			WHEN &apos;UPDATECRUD&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;DELETE&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;MOVE&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;MOVECUSTOM&apos; THEN
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;REBIND&apos; THEN
				if (masterUpgradeVector[i].resourcePath is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].resourcePath may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].resourceType is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].resourceType may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].srcResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
				end if;
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;CONFIGFOLDERS&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
				if (masterUpgradeVector[i].dstResource is null) then
					raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
				end if;
			ELSE
				raise ex value moduleName||&apos;:  The resource action=[&apos;||NVL(resourceAction,&apos;null&apos;)||&apos;] is not valid.  Please fix vector entry masterUpgradeVector[&apos;||i||&apos;].resourceAction.&apos;;
		END CASE;

		-- Validate the srcResource vector
		set k = 1;
		WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].srcResource)) DO
			-- Validate the srcResource path and type
			CASE UPPER(resourceAction)
				WHEN &apos;COPY&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYNOTEXIST&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYLEAVE&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYRENAME&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYCHILDREN&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;UPDATE&apos; THEN
				WHEN &apos;UPDATETRIGGER&apos; THEN
				WHEN &apos;UPDATECRUD&apos; THEN
				WHEN &apos;DELETE&apos; THEN
				WHEN &apos;MOVE&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;MOVECUSTOM&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;REBIND&apos; THEN
					if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;CONFIGFOLDERS&apos; THEN
				WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
				WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
				ELSE
			END CASE;

			set k = k + 1;
		END WHILE;

		-- Validate the dstResource vector
		set k = 1;
		WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].dstResource)) DO
			-- Validate the srcResource path and type
			CASE UPPER(resourceAction)
				WHEN &apos;COPY&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYNOTEXIST&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;COPYLEAVE&apos; THEN
				WHEN &apos;COPYRENAME&apos; THEN
				WHEN &apos;COPYCHILDREN&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;UPDATE&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;UPDATETRIGGER&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;UPDATECRUD&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;DELETE&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;MOVE&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;MOVECUSTOM&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;REBIND&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;CONFIGFOLDERS&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
					if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
					end if;
					if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
						raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
					end if;
				ELSE
			END CASE;

			set k = k + 1;
		END WHILE;

		-- Validate the updateStruct vector
		set k = 1;
		WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].updateStruct)) DO
			-- Validate the update action - Update Action: replace, replaceBefore, replaceAfter
			-- updateAction			VARCHAR,		-- Update Action: replace, replaceBefore, replaceAfter
			-- occurrence			INTEGER,		-- The occurrence of the searchText to act upon.  0=take action on all occurrences
			-- numLines				INTEGER,		-- If updateAction=replaceBefore or replaceAfter, then then perform that action by searching
													--   for the number of lines CHR(10) either before or after and placing the text at that location.
			-- searchText			LONGVARCHAR,	-- The text to search for.  
													-- If multiple occurrences are found the action may be taken according to the defined occurrence.
													-- If the searchText is not found then no action is taken.
			-- replaceText			LONGVARCHAR		-- The text to replace given the update action.
			if (masterUpgradeVector[i].updateStruct[k].updateAction IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].updateStruct[k].updateAction||&apos;|&apos;) = 2) then  --Empty
				raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].updateAction may not be null or empty.&apos;;
			end if;
			if (masterUpgradeVector[i].updateStruct[k].occurrence is null) then
				raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].occurrence may not be null.&apos;;
			end if;
			if (masterUpgradeVector[i].updateStruct[k].numLines is null) then
				raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].numLines may not be null.&apos;;
			end if;
			if (masterUpgradeVector[i].updateStruct[k].searchText is null) then
				raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].searchText may not be null or empty.&apos;;
			end if;
			if (masterUpgradeVector[i].updateStruct[k].replaceText is null) then
				raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].replaceText may not be null or empty.&apos;;
			end if;
			set updateAction = masterUpgradeVector[i].updateStruct[k].updateAction;
			CASE UPPER(updateAction)
				WHEN &apos;MODIFYCONSTANT&apos; THEN	-- For update
				WHEN &apos;REPLACE&apos; THEN			-- For update
				WHEN &apos;REPLACEBEFORE&apos; THEN	-- For update
				WHEN &apos;REPLACEAFTER&apos; THEN	-- For update
				WHEN &apos;REPLACEPATH&apos; THEN 	-- For updateTrigger
				WHEN &apos;REPLACEPARAM&apos; THEN	-- For updateTriger
				WHEN &apos;FIXPARAM&apos; THEN		-- For updateTriger
				WHEN &apos;RESTOREPARAM&apos; THEN	-- For updateTrigger
				ELSE
					raise ex value moduleName||&apos;:  The update action=[&apos;||NVL(updateAction,&apos;null&apos;)||&apos;] is not valid.  Please fix vector entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].updateAction.&apos;;
			END CASE;
			set k = k + 1;
		END WHILE;

		-- Get only the master upgrade vector items that match the &quot;From&quot; and &quot;To&quot; versions passed in
		-- Replace $PROJECT_PATH_DST as needed
		IF (bestPracticesVersionFrom = masterUpgradeVector[i].bestPracticesVersionFrom AND bestPracticesVersionTo = masterUpgradeVector[i].bestPracticesVersionTo) THEN
			IF (upgradeVector is null) then
				set upgradeVector = VECTOR[(null)];
			ELSE
				set upgradeVector = EXTEND(upgradeVector,1);
			END IF;	
			set j = j + 1;
			set upgradeVector[j] = masterUpgradeVector[i];

			if (UPPER(debug) = &apos;Y&apos;) THEN
				call print(moduleName||&apos; : ACTION=&apos;||resourceAction||&apos;:&apos;);
				call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].resourcePath=&apos;||NVL(upgradeVector[j].resourcePath,&apos;null&apos;));
			end if;

			-- set the $PROJECT_PATH_SRC for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- set the $PROJECT_PATH_DST_RESERVED for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- set the $PROJECT_NAME_RESERVED for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- set the $PROJECT_PATH_DST for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- set the $SCRIPTS_PATH_DST_DERIVED for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- Set the $SCRIPTS_PATH_DST_RESERVED variable for startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
			-- set the $SCRIPTS_PATH_DST for the startingFolder
			set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);

			if (UPPER(debug) = &apos;Y&apos;) THEN
				call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].resourcePath=&apos;||NVL(upgradeVector[j].resourcePath,&apos;null&apos;));
			end if;

			-- set the $PROJECT_PATH_SRC for the srcResource vector
			set k = 1;
			WHILE (k &lt;= CARDINALITY(upgradeVector[j].srcResource)) DO
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].srcResource[k].&quot;path&quot;,&apos;null&apos;));
				end if;
				-- Set the $PROJECT_PATH_SRC variable for the source path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- set the $PROJECT_PATH_DST_RESERVED for the soure path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- set the $PROJECT_NAME_RESERVED for the soure path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST variable for the source path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the source path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the source path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST variable for the source path
				set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].srcResource[k].&quot;path&quot;,&apos;null&apos;));
				end if;
				set k = k + 1;
			END WHILE;

			-- set the $PROJECT_PATH_DST for the dstResource vector
			set k = 1;
			WHILE (k &lt;= CARDINALITY(upgradeVector[j].dstResource)) DO
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].dstResource[k].&quot;path&quot;,&apos;null&apos;));
				end if;
				-- Set the $PROJECT_PATH_SRC variable for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- set the $PROJECT_PATH_DST_RESERVED for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- set the $PROJECT_NAME_RESERVED for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST variable for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST variable for the destination path
				set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].dstResource[k].&quot;path&quot;,&apos;null&apos;));
				end if;
				set k = k + 1;
			END WHILE;

			-- set the $PROJECT_PATH_DST for the updateStruct vector
			set k = 1;
			WHILE (k &lt;= CARDINALITY(upgradeVector[j].updateStruct)) DO
				set updateAction = upgradeVector[j].updateStruct[k].updateAction;
				if (UPPER(debug) = &apos;Y&apos;) THEN
					if (updateAction IS NOT NULL) THEN
						call print(moduleName||&apos; : ACTION=&apos;||resourceAction||&apos;: UPDATE ACTION=&apos;||updateAction);
					end if;
					call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].keyTextVerify=&apos;||NVL(upgradeVector[j].updateStruct[k].keyTextVerify,&apos;null&apos;));
				end if;
				-- Set the $PROJECT_PATH_SRC variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST_RESERVED variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_NAME_RESERVED variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST variable for the key verify text
				set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].keyTextVerify=&apos;||NVL(upgradeVector[j].updateStruct[k].keyTextVerify,&apos;null&apos;));
				end if;

				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].searchText=&apos;||NVL(upgradeVector[j].updateStruct[k].searchText,&apos;null&apos;));
				end if;
				-- Set the $PROJECT_PATH_SRC variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST_RESERVED variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_NAME_RESERVED variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST variable for the search text
				set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].searchText=&apos;||NVL(upgradeVector[j].updateStruct[k].searchText,&apos;null&apos;));
				end if;

				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].replaceText=&apos;||NVL(upgradeVector[j].updateStruct[k].replaceText,&apos;null&apos;));
				end if;
				-- Set the $PROJECT_PATH_SRC variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST_RESERVED variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_NAME_RESERVED variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $PROJECT_PATH_DST variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				-- Set the $SCRIPTS_PATH_DST variable for the replace text
				set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
				if (UPPER(debug) = &apos;Y&apos;) THEN
					call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].replaceText=&apos;||NVL(upgradeVector[j].updateStruct[k].replaceText,&apos;null&apos;));
				end if;
				set k = k + 1;
			END WHILE;
		END IF;
		set i = i + 1;
	END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1573161757946</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:0:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/2547</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2449</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2526</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2505</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2564</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2466</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2543</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2522</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/199</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/198</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/197</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2423</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2422</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2442</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/192</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/191</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/190</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/196</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/195</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/194</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/193</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/2503</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/189</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2475</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2492</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>