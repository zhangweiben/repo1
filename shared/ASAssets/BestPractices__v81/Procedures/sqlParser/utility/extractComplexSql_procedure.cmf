<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="extractComplexSql" path="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/extractComplexSql" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="sqlScript" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="sqlScript">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/TextUtils/RegexSplit" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="Input Text" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="Regular Expression" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="Limit" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="splitElement">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	extractComplexSql - Extract the complex SQL containing UNION ALL|UNION|EXCEPT ALL|EXCEPT|INTERSECT ALL|INTERSECT

	Examples of variations:
((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
UNION ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
UNION SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
UNION SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
UNION ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION  SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
EXCEPT ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
EXCEPT  SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
EXCEPT SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
EXCEPT ALL  SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
INTERSECT ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
INTERSECT  SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)

(((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
INTERSECT SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION  SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)
EXCEPT SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a )

(((SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a 
INTERSECT ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6b test6b) 
UNION ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6c test6c)
EXCEPT ALL SELECT * FROM      /shared/BestPractices/Procedures/lineageProcedures/test/L1_Mapping_Layer/Client_Views/test6a test6a )

	Modified Date:	Modified By:		CSW Version:	Reason:
	11/11/2011		Mike Tinius			5.2.0			Created new
	03/15/2013		Mike Tinius			5.2.0			Modifications for Best Practices 7.0

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE extractComplexSql(
	IN sqlScript	LONGVARCHAR,
	OUT result PIPE (sqlScript LONGVARCHAR)
)
BEGIN
	DECLARE moduleName		VARCHAR DEFAULT &apos;extractComplexSql&apos;;
	DECLARE debug			CHAR(1) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.debugSqlParser2;
	DECLARE regexString		VARCHAR DEFAULT &apos; UNION ALL | UNION | EXCEPT ALL | EXCEPT | INTERSECT ALL | INTERSECT &apos;;
	DECLARE outSqlScript	LONGVARCHAR;

	for r as select * from /shared/ASAssets/Utilities/string/TextUtils/RegexSplit(sqlScript,regexString,0) do
		set outSqlScript = TRIM(r.splitElement);
		-- Remove all left parenthesis prior to the select statement
		removeLeftParentLoop:
		while (true) do
			if (substring(outSqlScript,1,1) = &apos;(&apos;) then
				set outSqlScript = trim(substring(outSqlScript,2,LENGTH(outSqlScript)));
			else
				leave removeLeftParentLoop;
			end if;
		end while;
		-- Remove all right parenthesis after the select statement
		removeRightParentLoop:
		while (true) do
			if (debug = &apos;Y&apos;) then
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;ch=[&apos;||substring(outSqlScript,LENGTH(outSqlScript),1)||&apos;]  outSqlScript=[&apos;||outSqlScript||&apos;]&apos;);
			end if;
			if (substring(outSqlScript,LENGTH(outSqlScript),1) = &apos;)&apos;) then
				set outSqlScript = trim(substring(outSqlScript,1,LENGTH(outSqlScript)-1));
			else
				leave removeRightParentLoop;
			end if;
		end while;
		insert into result values(outSqlScript);
	end for;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1548250082990</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>