<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="getDataSourceName" path="/shared/ASAssets/BestPractices_v81/Procedures/getDataSourceName" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="cacheStorageDataSourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="datasourceAncestor" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inIgnoreResourceDoesNotExist" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="datasourceName" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="datasourcePath" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceLineageDatasources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="datasourceAncestor" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="datasourceResource" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getDataSourceName:

	Return the Data Source Name associated with the a given resource path.  
	1. Start with the resource path and recursively walk its lineage until no more resources are found.   
	2. For each resource found, determine if that resources has as associated resource of type=DATA_SOURCE.
	3. Find the distinct list of data sources for this resource
	4. Output the list of data sources matching the resource type = &apos;DATA_SOURCE&apos;
 
	Input:
   		resourcePath - CIS source resource path to being assessing the parent data lineage
			Values: e.g. /shared/examples/ViewSales [this is a SQL VIEW.]
		resourceType - Type of CIS resource to be created.  It is null on the first invocation.
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE
		cacheStorageDataSourcePath - the location of the cache data source storage path for the given resource path.  Null if the resource is not cached.
		excludePathsList	- comma separated list of resource paths or partials paths to exclude
			Values: /shared/ASAssets/Utilities,/lib
		datasourceAncestor	- flag to get the data source ancestors 
			Values: 1=yes, 0=no
	Output:
		datasourceName				LONGVARCHAR,	-- the name of the data source.		null if excluded.
		datasourcePath				LONGVARCHAR 	-- path to the data source.			null if excluded.

	Exceptions:  none

	Modified Date:	Modified By:		CSW Version:	Reason:
	03/15/2013		Mike Tinius			5.2.0			created new for modifications for Best Practices 7.0
	10/14/2013		Mike Tinius			6.1.0			8.0: modified to add datasourcePath.  Moved to /Procedures folder.
	10/28/2013		Mike Tinius			6.1.0			Added parameter inIgnoreResourceDoesNotExist.
	11/21/2013		Mike Tinius			6.1.0			Don&apos;t return data source paths that are cache data storage paths associated with the incoming resource path.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE getDataSourceName(
	IN resourcePath 				VARCHAR(4000), -- /shared/examples/CompositeView
	IN resourceType					VARCHAR,		-- TABLE
	IN cacheStorageDataSourcePath	LONGVARCHAR,
	IN excludePathsList				LONGVARCHAR, 	-- comma separate list of resource paths or partials paths to exclude
	IN datasourceAncestor 			INTEGER, 	 	-- flag to get the data source ancestory (1=yes, 0=no)
	IN inIgnoreResourceDoesNotExist	INTEGER, 		-- Ignore any resources that do not exist
													-- 	1 = Bypass the processing of that resource.
													-- 	0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
	IN debug						CHAR(1),
	OUT datasourceName				LONGVARCHAR,	-- the name of the data source
	OUT datasourcePath				LONGVARCHAR 	-- path to the data source
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;getDataSourceName&apos;;
	DECLARE reservedPath		LONGVARCHAR;

	set datasourceName = null;
	set datasourcePath = null;

	if (debug = &apos;Y&apos;) then
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____________________resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____________________resourceType=&apos;||NVL(resourceType,&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):______cacheStorageDataSourcePath=&apos;||NVL(cacheStorageDataSourcePath,&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):________________excludePathsList=&apos;||NVL(excludePathsList,&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):______________datasourceAncestor=&apos;||NVL(cast(datasourceAncestor as varchar),&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____inIgnoreResourceDoesNotExist=&apos;||NVL(cast(inIgnoreResourceDoesNotExist as varchar),&apos;null&apos;));
	end if;

	for r as select * from
		/shared/ASAssets/Utilities/repository/getResourceLineageDatasources(resourcePath, resourceType, excludePathsList, datasourceAncestor, inIgnoreResourceDoesNotExist)
	do
		if (debug = &apos;Y&apos;) then
			CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (LOOP):____r.resourceType=&apos;||NVL(r.resourceType,&apos;null&apos;)||&apos;  r.resourcePath=&apos;||NVL(r.resourcePath,&apos;null&apos;));
		end if;
		if (r.resourceType = &apos;DATA_SOURCE&apos;) then
			-- Only return the data source path if it is not a cached datasource storage path
			if (cacheStorageDataSourcePath is null or r.resourcePath != cacheStorageDataSourcePath) then
				if (datasourceName is null) then
					set datasourceName = &apos;&apos;;
				else
					set datasourceName = datasourceName || &apos;, &apos;;
				end if;
				if (datasourcePath is null) then
					set datasourcePath = &apos;&apos;;
				else
					set datasourcePath = datasourcePath || &apos;, &apos;;
				end if;
				set datasourceName = datasourceName || r.resourceName;
				call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(r.resourcePath, null, reservedPath);
				set datasourcePath = datasourcePath || reservedPath;
			end if;
		end if;
	end for;
	if (debug = &apos;Y&apos;) then
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (OUTPUT):_________________datasourceName=&apos;||NVL(datasourceName,&apos;null&apos;));
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (OUTPUT):_________________datasourcePath=&apos;||NVL(datasourcePath,&apos;null&apos;));
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603580056</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>