<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="initCreateResources" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/initCreateResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>initCreateResources:

    Use this script to dynamically create resources corresponding to the paths passed in.
 
	Input:
		organization:				Mandatory - the organization name.
		projectName:				Mandatory - the project name.
		subprojectName:				Optional - the sub-project name.
   	 	rootPath:	 				Mandatory - Filesystem Root path for Subject Area.
			e.g. regular file system:			c:\myfiles\file.xls
			e.g. file system security token: 	TDV_PROJECT_SUBJECT_AREA_ROOT_NAME
		enableAutoPublishTrigger:	Mandatory - 0 or 1. Enable the Auto Publish Trigger.
		enableCleanupTrigger:		Mandatory - 0 or 1. Enable the Auto Cleanup Trigger.
		publishDbPath:				Mandatory - Fully Qualified path to the Dynamic database schema in the publish area.
			e.g. /services/databases/published_data_source/catalog/Dynamic
		publishWsPath:				Mandatory - Fully Qualified path to the Dynamic Web Services in the publish area.
			e.g. /services/webservices/published_data_source_folder/catalog_folder/Dynamic
		servicesPath:				Mandatory - Fully qualified path to the Dynamic application services folder where the procedure will be generated.
			e.g. /shared/ex_project/Application/Services/Dynamic
		applicationPath:			Optional - Fully qualified path to the Dynamic application views folder where the views will be generated.
			e.g. /shared/ex_project/Application/Views/Dynamic
		businessPath:				Optional - Fully qualified path to the Dynamic business logical views folder where the views will be generated.
			e.g. /shared/ex_project/Business/Logical/Dynamic
		formattingPath:				Optional - Fully qualified path to the Dynamic physical formatting views folder where the views will be generated.
			e.g. /shared/ex_project/Physical/Formatting/Dynamic
		metadataPath:				Mandatory - Fully qualified path to the Dynamic physical metadata data source folder where the file tables will be introspeted.
			e.g. /shared/ex_project/Physical/Metadata/Dynamic
	Output:
		status: SUCCESS or FAILED

	Modified Date:	Modified By:		CSW Version:	Reason:
	12/22/2014		Venky Madireddi		6.2.6			Created new
	02/12/2016		Mike Tinius			7.0.2			Added creation of dynamicFileList and dynamicFileRemove
	08/30/2017		Mike Tinius			7.0.4			Added support for a single-threaded queueing system.
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="organization" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="projectName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="subprojectName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="rootPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="enableAutoPublishTrigger" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="enableCleanupTrigger" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="publishDbPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="publishWsPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="servicesPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="applicationPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="businessPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="formattingPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="metadataPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/createLink" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="createLink" direction="IN">
        <datatype name="createLink" extendedName="{http://www.compositesw.com/services/system/admin/resource}createLink" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}createLink" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}createLink">
          <schemaDatatype>
            <datatype name="createLink" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="createLinkRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="targetPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="targetType" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="createLinkResponse" direction="OUT">
        <datatype name="createLinkResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}createLinkResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}createLinkResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}createLinkResponse">
          <schemaDatatype>
            <datatype name="createLinkResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="createLinkResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="3">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="9">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="9"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="11">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="12">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="10"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="10"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="13">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="11"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="13"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="14">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="8"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="15">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="16">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/createResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="createResource" direction="IN">
        <datatype name="createResource" extendedName="{http://www.compositesw.com/services/system/admin/resource}createResource" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}createResource" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}createResource">
          <schemaDatatype>
            <datatype name="createResource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="createResourceRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                      </element>
                      <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                  <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                      <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                            <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                                  <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <reference refId="7"/>
                                  </element>
                                  <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="9">
                                      <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                                          <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                            <reference refId="8"/>
                                          </element>
                                          <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                            <reference refId="8"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                  <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="11">
                                      <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                          <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <reference refId="9"/>
                          </element>
                          <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <reference refId="11"/>
                          </element>
                          <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                  <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="12">
                      <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                        <reference refId="6"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="resourceBundle" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="resourceBundle" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="13">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <reference refId="3"/>
                  </element>
                  <element name="privilegeEntries" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="14">
                      <element name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="15">
                          <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceOrColumnType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="privileges" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="16">
                              <element name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="17">
                                  <element name="domain" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="nameType" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="userNameType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="privs" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="combinedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                    <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="inheritedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                    <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                  <element name="cacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="cacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="18">
                      <element name="allOrNothing" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="configured" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="incremental" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="storage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="19">
                          <element name="useDefaultCacheStorage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                          </element>
                          <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="storageMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="bucketMode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="bucketModeType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="bucketProperties" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="bucketPropertiesType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="20">
                              <element name="bucketCatalog" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="bucketSchema" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="bucketPrefix" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="numBuckets" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="dropCreateIdx" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                          </element>
                          <element name="storageDataSourcePath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="storageTargets" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="targetPathTypePairList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="21">
                              <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="targetPathTypePair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="22">
                                  <element name="targetName" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                                    <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="refresh" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="23">
                          <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="refreshMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="schedule" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="schedule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="24">
                              <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="scheduleMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="startTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                              </element>
                              <element name="fromTimeInADay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                              </element>
                              <element name="endTimeInADay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                              </element>
                              <element name="recurringDay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                              </element>
                              <element name="interval" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                              </element>
                              <element name="period" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="calendarPeriod" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="count" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                              </element>
                              <element name="isCluster" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="expirationPeriod" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                      </element>
                      <element name="firstRefreshCallback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="secondRefreshCallback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="clearRule" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="clearRule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="includeOwnership" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="createResourceResponse" direction="OUT">
        <datatype name="createResourceResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}createResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}createResourceResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}createResourceResponse">
          <schemaDatatype>
            <datatype name="createResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="createResourceResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="25">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="26">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <reference refId="3"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="27">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="28">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/updateSqlScriptProcedure" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updateSqlScriptProcedure" direction="IN">
        <datatype name="updateSqlScriptProcedure" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedure" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedure" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedure">
          <schemaDatatype>
            <datatype name="updateSqlScriptProcedure" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateSqlScriptProcedureRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="scriptText" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="scriptModel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="model" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="modelType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="proprietaryModel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
                  </element>
                </datatype>
              </element>
              <element name="isExplicitDesign" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="parameters" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="parameterList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                  <element name="parameter" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="parameter" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="dataType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="dataType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="sqlType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="definition" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="nativeType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referencePath" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referenceTypeName" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="proprietaryModel" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
                              </element>
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="trailingSpaces" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="xmlType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="namespace" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="schema" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referencePath" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="proprietaryModel" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="pseudoType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="9">
                              <element name="definition" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="pseudoType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="direction" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="paramDirection" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="isNullable" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="nullable" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="11">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="12">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="13">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="12"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="14">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="15">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="13"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="13"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="16">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="14"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="16"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <reference refId="10"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateSqlScriptProcedureResponse" direction="OUT">
        <datatype name="updateSqlScriptProcedureResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedureResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedureResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateSqlScriptProcedureResponse">
          <schemaDatatype>
            <datatype name="updateSqlScriptProcedureResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateSqlScriptProcedureResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="17">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="18">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="19">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="20">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="21">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="11"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <reference refId="10"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="22">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="23">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCopyPrivilegeEntries" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createAllFoldersPrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inSourceFolderPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createDataSource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="dataSourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="dataSourceName" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
      </element>
      <element name="dataSourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createDataSourceResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourceDataSourceV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="subtype" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="dataSourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inDataSourceAttrXML" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourceOwner" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="newOwnerName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="newOwnerDomain" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateTrigger" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="enabled" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="conditionType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="actionType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="triggerAttrVect" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="TriggerType" type="TREE" refId="2">
              <element name="trName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="trValue">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="attributeVect" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="AttributeType" type="TREE" refId="3">
              <element name="attrName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrValue">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="4"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="4"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* initCreateResources:

    Use this script to dynamically create resources corresponding to the paths passed in.
 
	Input:
		organization:				Mandatory - the organization name.
		projectName:				Mandatory - the project name.
		subprojectName:				Optional - the sub-project name.
   	 	rootPath:	 				Mandatory - Filesystem Root path for Subject Area.
			e.g. regular file system:			c:\myfiles\file.xls
			e.g. file system security token: 	TDV_PROJECT_SUBJECT_AREA_ROOT_NAME
		enableAutoPublishTrigger:	Mandatory - 0 or 1. Enable the Auto Publish Trigger.
		enableCleanupTrigger:		Mandatory - 0 or 1. Enable the Auto Cleanup Trigger.
		publishDbPath:				Mandatory - Fully Qualified path to the Dynamic database schema in the publish area.
			e.g. /services/databases/published_data_source/catalog/Dynamic
		publishWsPath:				Mandatory - Fully Qualified path to the Dynamic Web Services in the publish area.
			e.g. /services/webservices/published_data_source_folder/catalog_folder/Dynamic
		servicesPath:				Mandatory - Fully qualified path to the Dynamic application services folder where the procedure will be generated.
			e.g. /shared/ex_project/Application/Services/Dynamic
		applicationPath:			Optional - Fully qualified path to the Dynamic application views folder where the views will be generated.
			e.g. /shared/ex_project/Application/Views/Dynamic
		businessPath:				Optional - Fully qualified path to the Dynamic business logical views folder where the views will be generated.
			e.g. /shared/ex_project/Business/Logical/Dynamic
		formattingPath:				Optional - Fully qualified path to the Dynamic physical formatting views folder where the views will be generated.
			e.g. /shared/ex_project/Physical/Formatting/Dynamic
		metadataPath:				Mandatory - Fully qualified path to the Dynamic physical metadata data source folder where the file tables will be introspeted.
			e.g. /shared/ex_project/Physical/Metadata/Dynamic
	Output:
		status: SUCCESS or FAILED

	Modified Date:	Modified By:		CSW Version:	Reason:
	12/22/2014		Venky Madireddi		6.2.6			Created new
	02/12/2016		Mike Tinius			7.0.2			Added creation of dynamicFileList and dynamicFileRemove
	08/30/2017		Mike Tinius			7.0.4			Added support for a single-threaded queueing system.
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices
	05/14/2019		Mike Tinius			7.0.8			Modified call from copyResourcesPrivileges to copyResourcesPrivilegesV2 to remove VECTOR usage.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.
*/
PROCEDURE initCreateResources
(
	IN	organization					VARCHAR,
	IN	projectName						VARCHAR,
	IN	subprojectName					VARCHAR,
	IN	rootPath						LONGVARCHAR,
	IN  enableAutoPublishTrigger		BIT,
	IN  enableCleanupTrigger			BIT,
	IN	publishDbPath					LONGVARCHAR,
	IN	publishWsPath					LONGVARCHAR,
	IN  servicesPath					LONGVARCHAR,
	IN  applicationPath					LONGVARCHAR,
	IN  businessPath					LONGVARCHAR,
	IN  formattingPath					LONGVARCHAR,
	IN  metadataPath					LONGVARCHAR,
	OUT	result							VARCHAR
)
BEGIN
	DECLARE moduleName						VARCHAR DEFAULT &apos;initCreateResources&apos;;
	DECLARE debug							CHAR(1) DEFAULT &apos;N&apos;;
	DECLARE loopbackSchemaPath				LONGVARCHAR DEFAULT &apos;/shared/ASAssets/BestPractices_v81/DynamicFileFramework/DYNAMIC_FILE_LOCAL_LOOPBACK/BestPractices_v81/DynamicFileFramework&apos;;
	DECLARE ex								EXCEPTION;
	DECLARE scriptPublishedDBPath			LONGVARCHAR DEFAULT publishDbPath;
	DECLARE scriptPublishedWSPath			LONGVARCHAR DEFAULT publishWsPath;
	DECLARE scriptApplicationServicesPath	LONGVARCHAR DEFAULT servicesPath;
	DECLARE scriptApplicationPath			LONGVARCHAR DEFAULT applicationPath;
	DECLARE scriptBusinessPath				LONGVARCHAR DEFAULT businessPath;
	DECLARE scriptFormattingPath			LONGVARCHAR DEFAULT formattingPath;
	DECLARE scriptMetadataPath				LONGVARCHAR DEFAULT metadataPath;
	DECLARE scriptMetadataType				VARCHAR DEFAULT &apos;CONTAINER&apos;;
	DECLARE embeddedPublishedDBName			VARCHAR;
	DECLARE embeddedSubprojectName			VARCHAR DEFAULT NVL(&apos;&apos;&apos;&apos;||subprojectName||&apos;&apos;&apos;&apos;,&apos;null&apos;);
	DECLARE embeddedApplicationPath			LONGVARCHAR DEFAULT &apos;null&apos;;
	DECLARE embeddedBusinessPath			LONGVARCHAR DEFAULT &apos;null&apos;;
	DECLARE embeddedFormattingPath			LONGVARCHAR DEFAULT &apos;null&apos;;
	DECLARE embeddedMetadataPath			LONGVARCHAR DEFAULT &apos;null&apos;;
	DECLARE resourceOwnerNameNew			VARCHAR DEFAULT &apos;admin&apos;;
	DECLARE resourceOwnerDomainNew			VARCHAR DEFAULT &apos;composite&apos;;
	DECLARE	dsPath							LONGVARCHAR;
	DECLARE dsName							VARCHAR;
	DECLARE dataSourceAttrXML				LONGVARCHAR DEFAULT &apos;&apos;;
	DECLARE success							BIT;
	DECLARE createResponse 					XML;
	DECLARE faultResponse					XML;
	DECLARE Resource_Exists					BOOLEAN;
	DECLARE sqlScriptStr					LONGVARCHAR;
	DECLARE procedureName					VARCHAR;
	DECLARE pos, len						INTEGER;
	DECLARE padAmount						INTEGER DEFAULT 0;
	DECLARE constantsPadAmount				INTEGER DEFAULT 0;
	DECLARE copyPrivilegeEntry				LONGVARCHAR;
    DECLARE PUBLIC TYPE TriggerType ROW (
        trName 		VARCHAR, 
        trValue 	LONGVARCHAR
    );
	DECLARE triggerAttrVect					VECTOR(TriggerType);

	CALL PRINT(&apos;BEGIN &apos;||moduleName);
	SET result = &apos;SUCCESS&apos;;

	-- Validate mandatory input variables.
	IF (organization IS NULL OR LENGTH(TRIM(organization)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;organization&quot; may not be null or empty.&apos;;
	END IF;
	IF (projectName IS NULL OR LENGTH(TRIM(projectName)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;projectName&quot; may not be null or empty.&apos;;
	END IF;
	IF (rootPath IS NULL OR LENGTH(TRIM(rootPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;rootPath&quot; may not be null or empty.&apos;;
	END IF;
	IF (enableAutoPublishTrigger IS NULL) THEN
		RAISE ex VALUE &apos;The input variable &quot;enableAutoPublishTrigger&quot; may not be null.&apos;;
	END IF;
	IF (enableCleanupTrigger IS NULL) THEN
		RAISE ex VALUE &apos;The input variable &quot;enableCleanupTrigger&quot; may not be null.&apos;;
	END IF;
	IF (publishDbPath IS NULL OR LENGTH(TRIM(publishDbPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;publishDbPath&quot; may not be null or empty.&apos;;
	END IF;
	IF (publishWsPath IS NULL OR LENGTH(TRIM(publishWsPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;publishWsPath&quot; may not be null or empty.&apos;;
	END IF;
	IF (servicesPath IS NULL OR LENGTH(TRIM(servicesPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;servicesPath&quot; may not be null or empty.&apos;;
	END IF;
	IF (metadataPath IS NULL OR LENGTH(TRIM(metadataPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;metadataPath&quot; may not be null or empty.&apos;;
	END IF;

	CALL PRINT(moduleName||&apos; : INPUT: &apos;);
	CALL PRINT(moduleName||&apos; :     organization=[&apos;||NVL(organization,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     projectName=[&apos;||NVL(projectName,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     subprojectName=[&apos;||NVL(subprojectName,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     rootPath=[&apos;||NVL(rootPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     enableAutoPublishTrigger=[&apos;||NVL(CAST(enableAutoPublishTrigger AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     enableCleanupTrigger=[&apos;||NVL(CAST(enableCleanupTrigger AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     publishDbPath=[&apos;||NVL(publishDbPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     publishWsPath=[&apos;||NVL(publishWsPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     servicesPath=[&apos;||NVL(servicesPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     applicationPath=[&apos;||NVL(applicationPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     businessPath=[&apos;||NVL(businessPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     formattingPath=[&apos;||NVL(formattingPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     metadataPath=[&apos;||NVL(metadataPath,&apos;null&apos;)||&apos;]&apos;);

	-- Construct valid paths
	IF (scriptPublishedDBPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptPublishedDBPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptPublishedDBPath = scriptPublishedDBPath || &apos;/Dynamic&apos;;
		END IF;
	END IF;
	IF (scriptPublishedWSPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptPublishedWSPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptPublishedWSPath = scriptPublishedWSPath || &apos;/Dynamic&apos;;
		END IF;
	END IF;
	IF (scriptApplicationServicesPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptApplicationServicesPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptApplicationServicesPath = scriptApplicationServicesPath || &apos;/Dynamic&apos;;
		END IF;
	END IF;
	IF (scriptApplicationPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptApplicationPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptApplicationPath = scriptApplicationPath || &apos;/Dynamic&apos;;
		END IF;
		SET embeddedApplicationPath = &apos;&apos;&apos;&apos;||scriptApplicationPath||&apos;&apos;&apos;&apos;;
		-- Determine the best pad amount length to use
		SET len = LENGTH(scriptApplicationPath);
		IF (len &gt; constantsPadAmount) THEN
			SET constantsPadAmount = len;
		END IF;
	END IF;
	IF (scriptBusinessPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptBusinessPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptBusinessPath = scriptBusinessPath || &apos;/Dynamic&apos;;
		END IF;
		SET embeddedBusinessPath = &apos;&apos;&apos;&apos;||scriptBusinessPath||&apos;&apos;&apos;&apos;;
		-- Determine the best pad amount length to use
		SET len = LENGTH(embeddedBusinessPath);
		IF (len &gt; constantsPadAmount) THEN
			SET constantsPadAmount = len;
		END IF;
	END IF;
	IF (scriptFormattingPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptFormattingPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptFormattingPath = scriptFormattingPath || &apos;/Dynamic&apos;;
		END IF;
		SET embeddedFormattingPath = &apos;&apos;&apos;&apos;||scriptFormattingPath||&apos;&apos;&apos;&apos;;
		-- Determine the best pad amount length to use
		SET len = LENGTH(embeddedFormattingPath);
		IF (len &gt; constantsPadAmount) THEN
			SET constantsPadAmount = len;
		END IF;
	END IF;
	IF (scriptMetadataPath IS NOT NULL) THEN
		IF (INSTR(LOWER(scriptMetadataPath)||&apos;|&apos;, &apos;/dynamic|&apos;) = 0) THEN
			SET scriptMetadataPath = scriptMetadataPath || &apos;/Dynamic&apos;;
		END IF;
		SET embeddedMetadataPath = &apos;&apos;&apos;&apos;||scriptMetadataPath||&apos;&apos;&apos;&apos;;
		-- Determine the best pad amount length to use
		SET len = LENGTH(embeddedMetadataPath);
		IF (len &gt; constantsPadAmount) THEN
			SET constantsPadAmount = len;
		END IF;
	END IF;
	-- Evaluate the published database name
	SET embeddedPublishedDBName = REPLACE(publishDbPath, &apos;/services/databases/&apos;, &apos;&apos;);
	IF (INSTR(embeddedPublishedDBName, &apos;/&apos;)  &gt; 0) THEN
		SET pos = INSTR(embeddedPublishedDBName, &apos;/&apos;);
		SET embeddedPublishedDBName = SUBSTRING(embeddedPublishedDBName, 1, pos-1);
	END IF;
	IF (embeddedPublishedDBName IS NULL OR LENGTH(TRIM(embeddedPublishedDBName)) = 0) THEN
		RAISE ex VALUE &apos;The variable &quot;embeddedPublishedDBName&quot;=&apos;||NVL(embeddedPublishedDBName,&apos;null&apos;)||&apos;] could not be derived from &quot;publishDbPath&quot;.&apos;;
	END IF;

	CALL PRINT(moduleName||&apos; : MODIFIED: &apos;);
	CALL PRINT(moduleName||&apos; :     scriptPublishedDBPath=[&apos;||NVL(scriptPublishedDBPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptPublishedWSPath=[&apos;||NVL(scriptPublishedWSPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptApplicationServicesPath=[&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptApplicationPath=[&apos;||NVL(scriptApplicationPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptBusinessPath=[&apos;||NVL(scriptBusinessPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptFormattingPath=[&apos;||NVL(scriptFormattingPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     scriptMetadataPath=[&apos;||NVL(scriptMetadataPath,&apos;null&apos;)||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; : EMBEDDED: &apos;);
	CALL PRINT(moduleName||&apos; :     embeddedSubprojectName=[&apos;||embeddedSubprojectName||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     embeddedPublishedDBName=[&apos;||embeddedPublishedDBName||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     embeddedApplicationPath=[&apos;||embeddedApplicationPath||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     embeddedBusinessPath=[&apos;||embeddedBusinessPath||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     embeddedFormattingPath=[&apos;||embeddedFormattingPath||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     embeddedMetadataPath=[&apos;||embeddedMetadataPath||&apos;]&apos;);
	CALL PRINT(moduleName||&apos; :     constantsPadAmount=[&apos;||constantsPadAmount||&apos;]&apos;);

	-- Validate paths.
	CALL /lib/resource/ResourceExists(scriptMetadataPath||&apos;/DynamicTempFiles_CSV&apos;, &apos;DATA_SOURCE&apos;, null, Resource_Exists);
	IF (Resource_Exists) THEN
		RAISE ex VALUE &apos;Datasource exists: &apos; || scriptMetadataPath || &apos;/DynamicTempFiles_CSV&apos;;
	END IF;
	CALL /lib/resource/ResourceExists(scriptMetadataPath||&apos;/DynamicTempFiles_Excel&apos;, &apos;DATA_SOURCE&apos;, null, Resource_Exists);
	IF (Resource_Exists) THEN
		RAISE ex VALUE &apos;Datasource exists: &apos; || scriptMetadataPath || &apos;/DynamicTempFiles_Excel&apos;;
	END IF;
	CALL /lib/resource/ResourceExists(scriptApplicationServicesPath||&apos;/dynamicFileCreate&apos;, &apos;PROCEDURE&apos;, null, Resource_Exists);
	IF (Resource_Exists) THEN
		RAISE ex VALUE &apos;Procedure exists: &apos; || scriptApplicationServicesPath||&apos;/dynamicFileCreate&apos;;
	END IF;

-- Create published web service folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(publishWsPath, 1, 1, success, faultResponse);
	END;
-- Create published database folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(publishDbPath, 1, 1, success, faultResponse);
	END;
-- Create application services folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Application Services Path: createAllFoldersPrivileges(&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;, 1, 1...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(scriptApplicationServicesPath, 1, 1, success, faultResponse);
	END;
-- Create application views folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		IF (scriptApplicationPath IS NOT NULL) THEN
			CALL PRINT(moduleName||&apos; : Application Views Path: createAllFoldersPrivileges(&apos;||NVL(scriptApplicationPath,&apos;null&apos;)||&apos;, 1, 1...)&apos;);
			CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(scriptApplicationPath, 1, 1, success, faultResponse);
		END IF;
	END;
-- Create business folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		IF (scriptBusinessPath IS NOT NULL) THEN
			CALL PRINT(moduleName||&apos; : Business Path: createAllFoldersPrivileges(&apos;||NVL(scriptBusinessPath,&apos;null&apos;)||&apos;, 1, 1...)&apos;);
			CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(scriptBusinessPath, 1, 1, success, faultResponse);
		END IF;
	END;
-- Create formatting folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		IF (scriptFormattingPath IS NOT NULL) THEN
			CALL PRINT(moduleName||&apos; : Formatting Path: createAllFoldersPrivileges(&apos;||NVL(scriptFormattingPath,&apos;null&apos;)||&apos;, 1, 1...)&apos;);
			CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(scriptFormattingPath, 1, 1, success, faultResponse);
		END IF;
	END;
-- Create datasource folders in the path if they don&apos;t exist
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Metadata Path: createAllFoldersPrivileges(&apos;||NVL(scriptMetadataPath,&apos;null&apos;)||&apos;, 1, 1...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(scriptMetadataPath, 1, 1, success, faultResponse);
	END;

-- Create File-Delimited datasource
	SET dsName = &apos;DynamicTempFiles_CSV&apos;;
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : CSV Datasource: createDataSource(&apos;&apos;&apos;||NVL(scriptMetadataPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||dsName||&apos;&apos;&apos;, &apos;&apos;File-Delimited&apos;&apos;...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/createDataSource(scriptMetadataPath, dsName, &apos;File-Delimited&apos;, success, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create datasource: &apos; || scriptMetadataPath || &apos;/&apos;|| dsName;
		END IF;
 	END;

	BEGIN INDEPENDENT TRANSACTION
		-- Set up the data source attribute XML
		SET dataSourceAttrXML =  
			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;autoAddChildren&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;charset&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;iso-8859-1&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;delimiter&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;,&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;filters&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;*.csv, *.txt&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;hasHeaders&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;ignoreTrailingDelimiter&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;local&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;qualifier&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;&quot;&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;root&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;&apos;||CAST(XMLTEXT(rootPath) AS LONGVARCHAR)||&apos;&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;startRow&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;INTEGER&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;1&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||
			        &apos;&apos;;

		-- Update the data source with the attributes
		CALL /shared/ASAssets/Utilities/repository/updateResourceDataSourceV2(scriptMetadataPath||&apos;/&apos;||dsName, &apos;DATA_SOURCE&apos;, &apos;FILE_DATA_SOURCE&apos;, &apos;File-Delimited&apos;, dataSourceAttrXML, success, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update datasource: &apos; || scriptMetadataPath || &apos;/&apos;|| dsName;
		END IF;
		-- Copy the privileges from CONTAINER folder to DATA_SOURCE folder
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptMetadataPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;&apos; || CAST(XMLTEXT(scriptMetadataType) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptMetadataPath||&apos;/&apos;||dsName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;DATA_SOURCE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);

	END;
	
-- Create Microsoft Excel (non-ODBC) datasource
	SET dsName = &apos;DynamicTempFiles_Excel&apos;;
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Excel Datasource: createDataSource(&apos;&apos;&apos;||NVL(scriptMetadataPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||dsName||&apos;&apos;&apos;, &apos;&apos;Microsoft Excel (non-ODBC)&apos;&apos;...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/createDataSource(scriptMetadataPath, dsName, &apos;Microsoft Excel (non-ODBC)&apos;, success, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create datasource: &apos; || scriptMetadataPath || &apos;/&apos; || dsName;
		END IF;
	END;

	BEGIN INDEPENDENT TRANSACTION
		-- Set up the data source attribute XML
		SET dataSourceAttrXML =  
			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;autoAddChildren&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;blankAsNull&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;blankColumnType&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;Varchar&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;charset&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;iso-8859-1&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;dataRange&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;A1&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;dataWysiwyg&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;firstRowCategory&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;hasHeaders&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;ignoreInvalidateDataFetch&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;local&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;true&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||

			        &apos;               &lt;common:attribute xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
			        &apos;                    &lt;common:name&gt;root&lt;/common:name&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:type&gt;STRING&lt;/common:type&gt;&apos;||CHR(10)||
		    	    &apos;                    &lt;common:value&gt;&apos;||CAST(XMLTEXT(rootPath) AS LONGVARCHAR)||&apos;&lt;/common:value&gt;&apos;||CHR(10)||
			    	&apos;                &lt;/common:attribute&gt;&apos;||CHR(10)||
			        &apos;&apos;;

		-- Update the data source with the attributes
		CALL /shared/ASAssets/Utilities/repository/updateResourceDataSourceV2(scriptMetadataPath||&apos;/&apos;||dsName, &apos;DATA_SOURCE&apos;, &apos;POI_EXCEL_DATA_SOURCE&apos;, &apos;Microsoft Excel (non-ODBC)&apos;, dataSourceAttrXML, success, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update datasource: &apos; || scriptMetadataPath || &apos;/&apos; || dsName;
		END IF;
		-- Copy the privileges from CONTAINER folder to DATA_SOURCE folder
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptMetadataPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;&apos; || CAST(XMLTEXT(scriptMetadataType) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptMetadataPath||&apos;/&apos;||dsName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;DATA_SOURCE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;


/***************************************************
 * Create the dynamicFileCreate script and link
 ***************************************************/
	SET procedureName = &apos;dynamicFileCreate&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A custom script that manages views for Excel (non-ODBC) and File-Delimited data sources dynamically.
    Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

    Invoked externally by a user: select * from CATALOG.DYNAMIC.dynamicFileCreate(&apos;&apos;file_name.ext&apos;&apos;)
    Rules: If the filename does not contain the username prepended with a dash, then this procedure will add it.
           If the filename already contains the username prepended, then no username is added.
           If the filename is blank, and this procedure internally allows null or blank file names (allowNullFileName=1)
             then all files in the file system that have not been introspected are introspected for that user and
             prepended with the invoking user&apos;&apos;s username if required.

     Input:
        requestfilename - The name of the file system file to be removed. Case insensitive.
    Output:
        Cursor with columns:
            status               - status messages:
									Queuing Messages:
										&apos;&apos;FILE ADD QUEUED&apos;&apos;
										&apos;&apos;INVALID FILENAME&apos;&apos;
										&apos;&apos;DUPLICATE REQUEST IGNORED&apos;&apos;

									Email Messages:
										&apos;&apos;UNKNOWN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS ALREADY EXISTS&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS OVERWRITTEN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO COLUMNS DETECTED. NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST&apos;&apos;

										- Occurs when the file being added contains no Excel sheets and/or no columns and no data
										&apos;&apos;FILE REMOVED.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;UNABLE TO REMOVE FILE.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;

										&apos;&apos;ERROR: Data source type not supported: &apos;&apos;+&lt;dataSourceType&gt;
										&apos;&apos;ERROR: File Name is required.&apos;&apos;  - occurs when (allowNullFileName = 0 and (fileName IS NULL OR LENGTH(fileName) = 0))

            fileName             - file name from the file system
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
	IN requestfilename		VARCHAR(4000),
    OUT result PIPE (
        status 				VARCHAR(4000),
		fileName			VARCHAR(255),
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;;
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos; || scriptApplicationServicesPath||&apos;/constants.constantsLocation; 
	DECLARE organization		VARCHAR;
	DECLARE projectName			VARCHAR;
	DECLARE subprojectName		VARCHAR;
	DECLARE publishedDatabase	VARCHAR;
	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	DECLARE publishedSchemaPath VARCHAR(4000);
	-- Physical Metadata Path                           /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);
	-- Middle layer paths [optional]
	DECLARE formattingLayerPath	VARCHAR(4000);			--/shared/base_project_path/Physical/Formatting/Dynamic
	DECLARE businessLayerPath	VARCHAR(4000);			--/shared/base_project_path/Business/Logical/Dynamic
	DECLARE applicationLayerPath VARCHAR(4000);			--/shared/base_project_path/Application/Views/Dynamic

	-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
	DECLARE allowNullFileName	VARCHAR;				--	0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
														--	1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
	DECLARE requestusername		VARCHAR;
	DECLARE requestdomain		VARCHAR;
	DECLARE retentionpolicydays VARCHAR;				-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
	DECLARE proxyfilename		VARCHAR;
	DECLARE status				VARCHAR;

	-- Get the current username in order to prefix to the file name
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_NAME&apos;&apos;,requestusername);
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_DOMAIN&apos;&apos;,requestdomain);

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ORGANIZATION&apos;&apos;, organization);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PROJECT_NAME&apos;&apos;, projectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;SUBPROJECT_NAME&apos;&apos;, subprojectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_DATABASE&apos;&apos;, publishedDatabase);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_SCHEMA_PATH&apos;&apos;, publishedSchemaPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;APPLICATION_LAYER&apos;&apos;, applicationLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;BUSINESS_LAYER&apos;&apos;, businessLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;FORMATTING_LAYER&apos;&apos;, formattingLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ALLOW_NULL_FILE_NAME&apos;&apos;, allowNullFileName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;RETENTION_POLICY_DAYS&apos;&apos;, retentionpolicydays);

	-- Insert a request into the database table queue
	CALL &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueInsert(
		&apos;&apos;N&apos;&apos;,
		organization,
		projectName,
		subprojectName,
		moduleName,
		&apos;&apos;A&apos;&apos;,	-- ADD File
		requestusername,
		requestdomain,
		requestfilename,
		CAST(allowNullFileName AS SMALLINT),
		constantsLocation,
		metadataLayerPath,
		formattingLayerPath,
		businessLayerPath,
		applicationLayerPath,
		publishedSchemaPath,
		publishedDatabase,
		CAST(retentionpolicydays AS SMALLINT),
		proxyfilename,
		status
	);
	INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (status, proxyfilename, &apos;&apos;TBD&apos;&apos;, &apos;&apos;TBD&apos;&apos;, publishedDatabase);
END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishDbPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for creating temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Stored Procedure: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Create Utilities Web Service
	CALL /lib/resource/ResourceExists(publishWsPath||&apos;/Utilities&apos;, &apos;DATA_SOURCE&apos;, null, Resource_Exists);
	IF (NOT Resource_Exists) THEN
		BEGIN INDEPENDENT TRANSACTION
			CALL PRINT(moduleName||&apos; : Excel Datasource: createDataSource(&apos;&apos;&apos;||NVL(publishWsPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;Utilities&apos;&apos;, &apos;&apos;DATA_SOURCE&apos;&apos;...)&apos;);
			CALL /shared/ASAssets/Utilities/repository/createDataSource(publishWsPath, &apos;Utilities&apos;, &apos;COMPOSITE_WEB_SERVICE&apos;, success, createResponse, faultResponse);
			IF faultResponse IS NOT NULL THEN
				RAISE ex VALUE &apos;Failed to create datasource: &apos; || publishWsPath || &apos;/Utilities&apos;;
			END IF;
			-- Copy the privileges from CONTAINER folder to the target resource
			SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishWsPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishWsPath||&apos;/Utilities&apos;) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;DATA_SOURCE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

			CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
		END;
	END IF;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishWsPath||&apos;/Utilities&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;|| scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for creating temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Web Service operation: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
	END;


/***************************************************
 * Create the dynamicFileRemove script and link
 ***************************************************/
	SET procedureName = &apos;dynamicFileRemove&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A script that manages removing files from the file system and published views associated with those files.  
    Files are only permitted to be removed by the user who created them.
    Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

    Invoked externally by a user: select * from CATALOG.DYNAMIC.dynamicFileRemove(&apos;&apos;file_name.ext&apos;&apos;)

     Input:
        requestfilename - The name of the file system file to be removed. Case insensitive.
    Output:
        Cursor with columns: 
            status               - status messages:
									Queuing Messages:
										&apos;&apos;FILE REMOVE QUEUED&apos;&apos;
										&apos;&apos;INVALID FILENAME&apos;&apos;
										&apos;&apos;DUPLICATE REQUEST IGNORED&apos;&apos;

									Email Messages:
										&apos;&apos;FILE REMOVED.  &apos;&apos; + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;UNABLE TO REMOVE FILE.  &apos;&apos;  + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  &apos;&apos; + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;

										&apos;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;&apos;

            fileName             - file name from the file system
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
	IN requestfilename		VARCHAR(4000),
    OUT result PIPE (
        status 				VARCHAR(4000),
		fileName			VARCHAR(255),
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;;
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos; || scriptApplicationServicesPath||&apos;/constants.constantsLocation;
	DECLARE organization		VARCHAR;
	DECLARE projectName			VARCHAR;
	DECLARE subprojectName		VARCHAR;
	DECLARE publishedDatabase	VARCHAR;
	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	DECLARE publishedSchemaPath VARCHAR(4000);
	-- Middle layer paths [optional]
	DECLARE applicationLayerPath VARCHAR(4000);			--/shared/base_project_path/Application/Views/Dynamic
	DECLARE businessLayerPath	VARCHAR(4000);			--/shared/base_project_path/Business/Logical/Dynamic
	DECLARE formattingLayerPath	VARCHAR(4000);			--/shared/base_project_path/Physical/Formatting/Dynamic
	-- Physical Metadata Path  e.g. /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);

	-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
	DECLARE allowNullFileName	VARCHAR;				--	0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
														--	1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
	DECLARE requestusername		VARCHAR;
	DECLARE requestdomain		VARCHAR;
	DECLARE retentionpolicydays VARCHAR;				-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
	DECLARE proxyfilename		VARCHAR;
	DECLARE status				VARCHAR;

	-- Get the current username in order to prefix to the file name
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_NAME&apos;&apos;,requestusername);
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_DOMAIN&apos;&apos;,requestdomain);

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ORGANIZATION&apos;&apos;, organization);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PROJECT_NAME&apos;&apos;, projectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;SUBPROJECT_NAME&apos;&apos;, subprojectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_DATABASE&apos;&apos;, publishedDatabase);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_SCHEMA_PATH&apos;&apos;, publishedSchemaPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;APPLICATION_LAYER&apos;&apos;, applicationLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;BUSINESS_LAYER&apos;&apos;, businessLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;FORMATTING_LAYER&apos;&apos;, formattingLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ALLOW_NULL_FILE_NAME&apos;&apos;, allowNullFileName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;RETENTION_POLICY_DAYS&apos;&apos;, retentionpolicydays);

	-- Insert a request into the database table queue
	CALL &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueInsert(
		&apos;&apos;N&apos;&apos;,
		organization,
		projectName,
		subprojectName,
		moduleName,
		&apos;&apos;R&apos;&apos;,	-- REMOVE File
		requestusername,
		requestdomain,
		requestfilename,
		CAST(allowNullFileName AS SMALLINT),
		constantsLocation,
		metadataLayerPath,
		formattingLayerPath,
		businessLayerPath,
		applicationLayerPath,
		publishedSchemaPath,
		publishedDatabase,
		CAST(retentionpolicydays AS SMALLINT),
		proxyfilename,
		status
	);
		INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (status, proxyfilename, &apos;&apos;TBD&apos;&apos;, &apos;&apos;TBD&apos;&apos;, publishedDatabase);
END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishDbPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for removing temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Stored Procedure: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Create Utilities Web Service link
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishWsPath||&apos;/Utilities&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for removing temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Web Service operation: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
	END;


/***************************************************
 * Create the dynamicFileList script and link
***************************************************/
	SET procedureName = &apos;dynamicFileList&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A custom script to list the dynamic files and associated published tables.
    Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

    Invoked externally by a user: select * from CATALOG.DYNAMIC.dynamicFileList()

     Input:
        N/A
    Output:
        Cursor with columns: 
            status               - status messages:
									&apos;&apos;PUBLISHED&apos;&apos;
									&apos;&apos;NOT PUBLISHED&apos;&apos;
									&apos;&apos;FILE NOT SUPPORTED&apos;&apos;

            fileName             - file name from the file system
            fileTimestamp        - timestamp when file was created
            fileSize             - size of the file in bytes
			metadataTableName	 - the metadata table name
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
    OUT result PIPE (
		status				VARCHAR(4000),
        fileName 			VARCHAR(255),
        fileTimestamp 		TIMESTAMP, 
        fileSize 			BIGINT,
		metadataTableName	VARCHAR(255),
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos; || scriptApplicationServicesPath||&apos;/constants.constantsLocation; 
	-- Physical Metadata Path                           /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);

	FOR r AS 
		SELECT DISTINCT * FROM (
			SELECT DISTINCT status, fileName, fileTimestamp, fileSize, metadataTableName, publishedTableName, publishedTablePath, publishedDatabase
				FROM &apos;||loopbackSchemaPath||&apos;/dynamicFileList(&apos;&apos;N&apos;&apos;, metadataLayerPath||&apos;&apos;/DynamicTempFiles_CSV&apos;&apos;)
			UNION
			SELECT DISTINCT status, fileName, fileTimestamp, fileSize, metadataTableName, publishedTableName, publishedTablePath, publishedDatabase
				FROM &apos;||loopbackSchemaPath||&apos;/dynamicFileList(&apos;&apos;N&apos;&apos;, metadataLayerPath||&apos;&apos;/DynamicTempFiles_Excel&apos;&apos;)
		) a
	DO
		INSERT INTO result(status, fileName, fileTimestamp, fileSize, metadataTableName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (r.status, r.fileName, r.fileTimestamp, r.fileSize, r. metadataTableName, r.publishedTableName, r.publishedTablePath, r.publishedDatabase);
	END FOR;
END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishDbPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for listing file system files.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Stored Procedure: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Create Utilities Web Service link
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishWsPath||&apos;/Utilities&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for listing file system files.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Web Service operation: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
	END;


/***************************************************
 * Create the dynamicFileAutoPublish script and link
 ***************************************************/
	SET procedureName = &apos;dynamicFileAutoPublish&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A custom script that manages the auto-publishing of files and views for Excel (non-ODBC) and File-Delimited data sources dynamically.

    Invoked internally by a trigger: DynamicFileFrameworkAutoPublishTrigger
    Rules: List the files in the file system to determine which ones are not published.
		   If there are no pending actions in the database then add an action to add the file automatically.

     Input:
        none
    Output:
        Cursor with columns:
            status               - status messages:
									Queuing Messages:
										&apos;&apos;FILE ADD QUEUED&apos;&apos;
										&apos;&apos;INVALID FILENAME&apos;&apos;
										&apos;&apos;DUPLICATE REQUEST IGNORED&apos;&apos;

									Email Messages:
										&apos;&apos;UNKNOWN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS ALREADY EXISTS&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS OVERWRITTEN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO COLUMNS DETECTED. NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST&apos;&apos;

										- Occurs when the file being added contains no Excel sheets and/or no columns and no data
										&apos;&apos;FILE REMOVED.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;UNABLE TO REMOVE FILE.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;

										&apos;&apos;ERROR: Data source type not supported: &apos;&apos;+&lt;dataSourceType&gt;
										&apos;&apos;ERROR: File Name is required.&apos;&apos;  - occurs when (allowNullFileName = 0 and (fileName IS NULL OR LENGTH(fileName) = 0))

            fileName             - file name from the file system
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
    OUT result PIPE (
        status 				VARCHAR(4000),
		fileName			VARCHAR(255),
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;;
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos; || scriptApplicationServicesPath||&apos;/constants.constantsLocation; 
	DECLARE organization		VARCHAR;
	DECLARE projectName			VARCHAR;
	DECLARE subprojectName		VARCHAR;
	DECLARE publishedDatabase	VARCHAR;
	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	DECLARE publishedSchemaPath VARCHAR(4000);
	-- Middle layer paths [optional]
	DECLARE applicationLayerPath VARCHAR(4000);			--/shared/base_project_path/Application/Views/Dynamic
	DECLARE businessLayerPath	VARCHAR(4000);			--/shared/base_project_path/Business/Logical/Dynamic
	DECLARE formattingLayerPath	VARCHAR(4000);			--/shared/base_project_path/Physical/Formatting/Dynamic
	-- Physical Metadata Path                             /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);

	-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
	DECLARE allowNullFileName	VARCHAR;				--	0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
														--	1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
	DECLARE retentionpolicydays VARCHAR;				-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ORGANIZATION&apos;&apos;, organization);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PROJECT_NAME&apos;&apos;, projectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;SUBPROJECT_NAME&apos;&apos;, subprojectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_DATABASE&apos;&apos;, publishedDatabase);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_SCHEMA_PATH&apos;&apos;, publishedSchemaPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;APPLICATION_LAYER&apos;&apos;, applicationLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;BUSINESS_LAYER&apos;&apos;, businessLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;FORMATTING_LAYER&apos;&apos;, formattingLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ALLOW_NULL_FILE_NAME&apos;&apos;, allowNullFileName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;RETENTION_POLICY_DAYS&apos;&apos;, retentionpolicydays);

	-- Insert a request into the database table queue
	FOR r AS 
		SELECT * FROM &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueAutoPublish(
			&apos;&apos;N&apos;&apos;,
			moduleName,
			organization,
			projectName,
			subprojectName,
			CAST(allowNullFileName AS SMALLINT),
			constantsLocation,
			metadataLayerPath,
			formattingLayerPath,
			businessLayerPath,
			applicationLayerPath,
			publishedSchemaPath,
			publishedDatabase,
			CAST(retentionpolicydays AS SMALLINT)
		)
	DO
		INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (r.status, r.fileName, r.publishedTableName, r.publishedTablePath, publishedDatabase);
	END FOR;

END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;


/***************************************************
 * Create the dynamicFileCleanup script and link
 ***************************************************/
	SET procedureName = &apos;dynamicFileCleanup&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A custom script that manages the clean-up of files and views for Excel (non-ODBC) and File-Delimited data sources dynamically.

    Invoked internally by a trigger: dynamicFileCleanup()
    Rules: List the files in the file system and published.
			If the file timestamp is greater than DELETE_POLICY_DAYS then delete the file and views.

     Input:
        none
    Output:
        Cursor with columns:
            status               - status messages:
									Queuing Messages:
										&apos;&apos;FILE CLEAN-UP QUEUED&apos;&apos;
										&apos;&apos;DUPLICATE REQUEST IGNORED&apos;&apos;

									Email Messages:
										&apos;&apos;RETENTION POLICY EXCEEDED.  &apos;&apos; + dynamicFileRemove message
										or
										&apos;&apos;FILE NOT SUPPORTED.  &apos;&apos; + dynamicFileRemove message

										- dynamicFileRemove messages:
										&apos;&apos;FILE REMOVED.  &apos;&apos; + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;UNABLE TO REMOVE FILE.  &apos;&apos;  + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  &apos;&apos; + 1 of the following:
												&apos;&apos;PUBLISHED VIEWS REMOVED&apos;&apos;
												&apos;&apos;VIEWS NOT PUBLISHED&apos;&apos;

										&apos;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;&apos;

            fileName             - file name from the file system
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
    OUT result PIPE (
        status 				VARCHAR(4000),
		fileName			VARCHAR(255),
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;;
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos; || scriptApplicationServicesPath||&apos;/constants.constantsLocation;
	DECLARE organization		VARCHAR;
	DECLARE projectName			VARCHAR;
	DECLARE subprojectName		VARCHAR;
	DECLARE publishedDatabase	VARCHAR;
	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	DECLARE publishedSchemaPath VARCHAR(4000);
	-- Middle layer paths [optional]
	DECLARE applicationLayerPath VARCHAR(4000);			--/shared/base_project_path/Application/Views/Dynamic
	DECLARE businessLayerPath	VARCHAR(4000);			--/shared/base_project_path/Business/Logical/Dynamic
	DECLARE formattingLayerPath	VARCHAR(4000);			--/shared/base_project_path/Physical/Formatting/Dynamic
	-- Physical Metadata Path                           /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);

	-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
	DECLARE allowNullFileName	VARCHAR;				--	0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
														--	1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
	DECLARE requestusername		VARCHAR;
	DECLARE requestdomain		VARCHAR;
	DECLARE requestfilename		VARCHAR;
	DECLARE retentionpolicydays VARCHAR;				-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
	DECLARE proxyfilename		VARCHAR;
	DECLARE status				VARCHAR;

	-- Get the current username in order to prefix to the file name
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_NAME&apos;&apos;,requestusername);
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_DOMAIN&apos;&apos;,requestdomain);

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ORGANIZATION&apos;&apos;, organization);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PROJECT_NAME&apos;&apos;, projectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;SUBPROJECT_NAME&apos;&apos;, subprojectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_DATABASE&apos;&apos;, publishedDatabase);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_SCHEMA_PATH&apos;&apos;, publishedSchemaPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;APPLICATION_LAYER&apos;&apos;, applicationLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;BUSINESS_LAYER&apos;&apos;, businessLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;FORMATTING_LAYER&apos;&apos;, formattingLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ALLOW_NULL_FILE_NAME&apos;&apos;, allowNullFileName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;RETENTION_POLICY_DAYS&apos;&apos;, retentionpolicydays);

	-- Insert a request into the database table queue
	SET requestfilename = &apos;&apos;cleanup.csv&apos;&apos;;
	CALL &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueInsert(
		&apos;&apos;N&apos;&apos;,
		organization,
		projectName,
		subprojectName,
		moduleName,
		&apos;&apos;C&apos;&apos;,	-- CLEANUP File
		requestusername,
		requestdomain,
		requestfilename,
		CAST(allowNullFileName AS SMALLINT),
		constantsLocation,
		metadataLayerPath,
		formattingLayerPath,
		businessLayerPath,
		applicationLayerPath,
		publishedSchemaPath,
		publishedDatabase,
		CAST(retentionpolicydays AS SMALLINT),
		proxyfilename,
		status
	);
	INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (status, proxyfilename, &apos;&apos;TBD&apos;&apos;, &apos;&apos;TBD&apos;&apos;, publishedDatabase);

	-- Insert a request into the database table queue
	SET requestfilename = &apos;&apos;cleanup.xls&apos;&apos;;
	CALL &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueInsert(
		&apos;&apos;N&apos;&apos;,
		organization,
		projectName,
		subprojectName,
		moduleName,
		&apos;&apos;C&apos;&apos;,	-- CLEANUP File
		requestusername,
		requestdomain,
		requestfilename,
		CAST(allowNullFileName AS SMALLINT),
		constantsLocation,
		metadataLayerPath,
		formattingLayerPath,
		businessLayerPath,
		applicationLayerPath,
		publishedSchemaPath,
		publishedDatabase,
		CAST(retentionpolicydays AS SMALLINT),
		proxyfilename,
		status
	);
	INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
			VALUES (status, proxyfilename, &apos;&apos;TBD&apos;&apos;, &apos;&apos;TBD&apos;&apos;, publishedDatabase);

END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishDbPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for removing temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Stored Procedure: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Create Utilities Web Service link
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishWsPath||&apos;/Utilities&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for removing temporary tables.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Web Service operation: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
	END;


/***************************************************
 * Create the dynamicFileRebuild script and link
***************************************************/
	SET procedureName = &apos;dynamicFileRebuild&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

    A custom script that rebuilds the published views for files that are not currently published.
	This can be useful in a situation where DV failed to publish a view.
	This can be useful in a sitation where dynamic file had to be rebuilt and the files in the file system 
		need to republished in bulk without user intervention.
    Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

    Invoked externally by a user: select * from CATALOG.DYNAMIC.&apos;||procedureName||&apos;()

     Input: none
    Output:
        Cursor with columns:
            status               - status messages:
									Queuing Messages:
										&apos;&apos;FILE ADD QUEUED&apos;&apos;
										&apos;&apos;INVALID FILENAME&apos;&apos;
										&apos;&apos;DUPLICATE REQUEST IGNORED&apos;&apos;

									Email Messages:
										&apos;&apos;UNKNOWN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS ALREADY EXISTS&apos;&apos;
										&apos;&apos;FILE ADDED.  VIEWS OVERWRITTEN&apos;&apos;
										&apos;&apos;FILE ADDED.  NO COLUMNS DETECTED. NO VIEWS PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST&apos;&apos;

										- Occurs when the file being added contains no Excel sheets and/or no columns and no data
										&apos;&apos;FILE REMOVED.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;UNABLE TO REMOVE FILE.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;
										&apos;&apos;FILE DOES NOT EXIST.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;&apos;

										&apos;&apos;ERROR: Data source type not supported: &apos;&apos;+&lt;dataSourceType&gt;
										&apos;&apos;ERROR: File Name is required.&apos;&apos;  - occurs when (allowNullFileName = 0 and (fileName IS NULL OR LENGTH(fileName) = 0))

            fileName             - file name from the file system
            fileTimestamp 		 - file timestamp, 
            fileSize 			 - file size,
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

	Modified Date:	Modified By:		CSW Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
    OUT result PIPE (
		status				VARCHAR(4000),
        fileName 			VARCHAR(255),
        fileTimestamp 		TIMESTAMP, 
        fileSize 			BIGINT,
        publishedTableName 	VARCHAR(255), 
        publishedTablePath 	VARCHAR(4000),
		publishedDatabase	VARCHAR(255)
        )
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;;
	DECLARE constantsLocation	VARCHAR(4000) DEFAULT &apos;||scriptApplicationServicesPath||&apos;/constants.constantsLocation;
	DECLARE requestfilename		VARCHAR;
	DECLARE fileUsername		VARCHAR;
	DECLARE organization		VARCHAR;
	DECLARE projectName			VARCHAR;
	DECLARE subprojectName		VARCHAR;
	DECLARE publishedDatabase	VARCHAR;
	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	DECLARE publishedSchemaPath VARCHAR(4000);
	-- Physical Metadata Path                           /shared/base_project_path/Physical/Metadata/Dynamic
	DECLARE metadataLayerPath	VARCHAR(4000);
	-- Middle layer paths [optional]
	DECLARE formattingLayerPath	VARCHAR(4000);			--/shared/base_project_path/Physical/Formatting/Dynamic
	DECLARE businessLayerPath	VARCHAR(4000);			--/shared/base_project_path/Business/Logical/Dynamic
	DECLARE applicationLayerPath VARCHAR(4000);			--/shared/base_project_path/Application/Views/Dynamic

	-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
	DECLARE allowNullFileName	VARCHAR;				--	0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
														--	1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
	DECLARE requestusername		VARCHAR;
	DECLARE requestdomain		VARCHAR;
	DECLARE retentionpolicydays VARCHAR;				-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
	DECLARE proxyfilename		VARCHAR;
	DECLARE status				VARCHAR;
	DECLARE pos					INTEGER;

	-- Get the current username in order to prefix to the file name
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_NAME&apos;&apos;,requestusername);
	CALL /lib/util/GetProperty(&apos;&apos;CURRENT_USER_DOMAIN&apos;&apos;,requestdomain);

	-- Get application constants
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ORGANIZATION&apos;&apos;, organization);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PROJECT_NAME&apos;&apos;, projectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;SUBPROJECT_NAME&apos;&apos;, subprojectName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_DATABASE&apos;&apos;, publishedDatabase);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PUBLISHED_SCHEMA_PATH&apos;&apos;, publishedSchemaPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;APPLICATION_LAYER&apos;&apos;, applicationLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;BUSINESS_LAYER&apos;&apos;, businessLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;FORMATTING_LAYER&apos;&apos;, formattingLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;PHYSICAL_METADATA_LAYER&apos;&apos;, metadataLayerPath);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;ALLOW_NULL_FILE_NAME&apos;&apos;, allowNullFileName);
	CALL /shared/ASAssets/Utilities/string/getConstant(constantsLocation, &apos;&apos;RETENTION_POLICY_DAYS&apos;&apos;, retentionpolicydays);

	-- Search for all files not published and queue them up to be added
	FOR f AS
		SELECT * FROM &apos;||scriptApplicationServicesPath||&apos;/dynamicFileList()
			WHERE status = &apos;&apos;NOT PUBLISHED&apos;&apos;
	DO
		SET requestfilename = f.fileName;

		-- Get the file username
		SET pos = INSTR(requestfilename, &apos;&apos;-&apos;&apos;);
		IF (pos &gt; 0) THEN
			SET fileUsername = SUBSTRING(requestfilename, 1, pos-1);
		END IF;

		-- Construct the filename with special proxy username syntax: USERNAME[user]filename.ext
		IF (fileUsername IS NOT NULL AND LENGTH(TRIM(fileUsername)) &gt; 0) THEN
			SET requestfilename = &apos;&apos;USERNAME[&apos;&apos;||fileUsername||&apos;&apos;]&apos;&apos;||f.fileName;
		END IF;

		-- Queue up the file to be published
		-- Insert a request into the database table queue
		CALL &apos;||loopbackSchemaPath||&apos;/dynamicFileQueueInsert(
			&apos;&apos;N&apos;&apos;,
			organization,
			projectName,
			subprojectName,
			moduleName,
			&apos;&apos;A&apos;&apos;,	-- ADD File
			requestusername,
			requestdomain,
			requestfilename,
			CAST(allowNullFileName AS SMALLINT),
			constantsLocation,
			metadataLayerPath,
			formattingLayerPath,
			businessLayerPath,
			applicationLayerPath,
			publishedSchemaPath,
			publishedDatabase,
			CAST(retentionpolicydays AS SMALLINT),
			proxyfilename,
			status
		);
		INSERT INTO result(status, fileName, fileTimestamp, fileSize, publishedTableName, publishedTablePath, publishedDatabase) 
				VALUES (status, proxyfilename, f.fileTimestamp, f.fileSize, &apos;&apos;TBD&apos;&apos;, &apos;&apos;TBD&apos;&apos;, publishedDatabase);
	END FOR;
END&apos;;

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishDbPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for listing file system files.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Stored Procedure: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishDbPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Create Utilities Web Service link
	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createLink(&apos;
&lt;resource:createLink xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||publishWsPath||&apos;/Utilities&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
  &lt;resource:targetPath&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&lt;/resource:targetPath&gt;
  &lt;resource:targetType&gt;PROCEDURE&lt;/resource:targetType&gt;
  &lt;resource:annotation&gt;Stored procedure for listing file system files.&lt;/resource:annotation&gt;
&lt;/resource:createLink&gt;
		&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to publish procedure as Web Service operation: &apos; || scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;;
		END IF;
	END;


/***************************************************
* Create the constants script
***************************************************/
	SET padAmount = constantsPadAmount + 30;
	SET procedureName = &apos;constants&apos;;
	CALL PRINT(moduleName||&apos; : Create procedure: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;SQL_SCRIPT_PROCEDURE&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;
  &lt;resource:subtype&gt;SQL_SCRIPT_PROCEDURE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	

	SET sqlScriptStr = &apos;/* &apos;||procedureName||&apos;:

	The constants procedure is used to provide the application context for Dynamic File generation.
	The developer can modify all variables.

	Modified Date:	Modified By:		CIS Version:	Reason:
	02/20/2018		Mike Tinius			7.0.5			Adapted for Assets Data Abstraction Best Practices

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on &apos;||cast(CURRENT_DATE as VARCHAR)||&apos;
*/
PROCEDURE &apos;||procedureName||&apos;(
	OUT ORGANIZATION				VARCHAR,		-- mandatory
	OUT PROJECT_NAME				VARCHAR,		-- mandatory
	OUT SUBPROJECT_NAME				VARCHAR,		-- optional
	OUT PUBLISHED_DATABASE			VARCHAR,		-- mandatory
	OUT PUBLISHED_SCHEMA_PATH		VARCHAR(4000),	-- mandatory
	OUT APPLICATION_LAYER			VARCHAR(4000),	-- optional
	OUT BUSINESS_LAYER				VARCHAR(4000),	-- optional
	OUT FORMATTING_LAYER			VARCHAR(4000),	-- optional
	OUT PHYSICAL_METADATA_LAYER		VARCHAR(4000),	-- mandatory
	OUT RETENTION_POLICY_DAYS		VARCHAR,		-- mandatory
	OUT ALLOW_NULL_FILE_NAME		VARCHAR			-- mandatory
)
BEGIN
	-- Default location of this &quot;constants&quot; procedure
	DECLARE PUBLIC constantsLocation CONSTANT VARCHAR(4000) DEFAULT &apos;&apos;&apos;||scriptApplicationServicesPath||&apos;/constants&apos;&apos;;

	-- Standard application default settings [ORG, PRJ1, S1, ORGDB]
	&apos;||RPAD(&apos;SET ORGANIZATION = &apos;&apos;&apos;||organization||&apos;&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] Identifies your organization for tracking/filtering purposes.
	&apos;||RPAD(&apos;SET PROJECT_NAME = &apos;&apos;&apos;||projectName||&apos;&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] This is your project folder name and is used for tracking/filtering purposes.
	&apos;||RPAD(&apos;SET SUBPROJECT_NAME	= &apos;||embeddedSubprojectName||&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [optional] Leave blank if your project folder does not have a sub project
	&apos;||RPAD(&apos;SET PUBLISHED_DATABASE = &apos;&apos;&apos;||embeddedPublishedDBName||&apos;&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] This is the published database name.

	-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
	&apos;||RPAD(&apos;SET PUBLISHED_SCHEMA_PATH = &apos;&apos;&apos; || publishDbPath || &apos;&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] The full path to the published Dynamic schema within your published databases
	-- Physical Metadata Layer Path
	&apos;||RPAD(&apos;SET PHYSICAL_METADATA_LAYER = &apos;||embeddedMetadataPath||&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] The full path to the physical metadata Dynamic folder where the dynamic file data sources reside.
	-- Set to the default null for no view generation in the layers.  Otherwise set to Option 2 to generate views in the layers.
	&apos;||RPAD(&apos;SET APPLICATION_LAYER = &apos;||embeddedApplicationPath||&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- Option 1: null,  Option 2: Full path to /Physical/Formatting/Dynamic folder
	&apos;||RPAD(&apos;SET    BUSINESS_LAYER = &apos;||embeddedBusinessPath||&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- Option 1: null,  Option 2: Full path to /Business/Logical/Dynamic folder
	&apos;||RPAD(&apos;SET  FORMATTING_LAYER = &apos;||embeddedFormattingPath||&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- Option 1: null,  Option 2: Full path to /Application/Views/Dynamic folder
	-- Default retention policy.  
	&apos;||RPAD(&apos;SET RETENTION_POLICY_DAYS = &apos;&apos;30&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] Delete files and CIS resources older than x days for CLEAN-UP action.
	&apos;||RPAD(&apos; &apos;,padAmount,&apos; &apos;)||&apos; --   This is a numeric value that will be converted from text to integer.
	-- Allows the invoking interface procedure to control the behavior of the implementation procedure.
	&apos;||RPAD(&apos;SET ALLOW_NULL_FILE_NAME = &apos;&apos;0&apos;&apos;;&apos;,padAmount,&apos; &apos;)||&apos;  -- [mandatory] Allow null file name to be passed into the underlying procedures
	&apos;||RPAD(&apos; &apos;,padAmount,&apos; &apos;)||&apos;  -- 0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
	&apos;||RPAD(&apos; &apos;,padAmount,&apos; &apos;)||&apos;  -- 1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed 
	&apos;||RPAD(&apos; &apos;,padAmount,&apos; &apos;)||&apos;  --    (not introspected) files in the file system for the invoking user.
END&apos;;

	--CALL print(&apos;sqlScriptStr:&apos;||CHR(10)||NVL(sqlScriptStr,&apos;null&apos;));

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/updateSqlScriptProcedure(
&apos;&lt;resource:updateSqlScriptProcedure xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName||&apos;&apos;||&apos;&lt;/resource:path&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:scriptText&gt;&lt;![CDATA[&apos;||sqlScriptStr||&apos;]]&gt;&lt;/resource:scriptText&gt;
  &lt;resource:isExplicitDesign&gt;false&lt;/resource:isExplicitDesign&gt;
  &lt;resource:annotation&gt;Script autogenerated&lt;/resource:annotation&gt;
&lt;/resource:updateSqlScriptProcedure&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;PROCEDURE&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;


/***************************************************
 * Create the DynamicFileFrameworkAutoPublishTrigger trigger
 ***************************************************/
	SET procedureName = &apos;DynamicFileFrameworkAutoPublishTrigger&apos;;
	CALL PRINT(moduleName||&apos; : Create trigger: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;TRIGGER&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;TRIGGER&lt;/resource:type&gt;
  &lt;resource:subtype&gt;NONE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	


	BEGIN INDEPENDENT TRANSACTION
/*
	IN fullResourcePath		LONGVARCHAR,		-- Full path to the trigger resource.
	IN enabled				BIT,				-- 1=enabled, 0=disabled
												-- When only performing the enable or disable for a trigger, leave conditionType and actionType null. 
	-- Condition Type: [TIMER|JMS|SYSTEM_EVENT|USER_DEFINED]
	IN conditionType		VARCHAR, 			-- NULL or one of [TIMER|JMS|SYSTEM_EVENT|USER_DEFINED] determines the trigger condition.
												-- When NULL, then only perform the enable or disable of the trigger and not other updates.
	-- Action Type: [PROCEDURE|STATISTICS|REINTROSPECT|EMAIL]
	IN actionType			VARCHAR,			-- NOT NULL and [PROCEDURE|STATISTICS|REINTROSPECT|EMAIL] - One of these determines what type of action to take.
												-- When NULL, then only perform the enable or disable of the trigger and not other updates.
												-- When conditionType is NOT NULL, there must be an actionType.
	IN triggerAttrVect		VECTOR(TriggerType),-- Name/Value pair list containing only the necessary &quot;Condition Type&quot; and &quot;Action Type&quot; attributes.

	IN attributeVect		/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeVectorType,
												-- The Attribute Vectory Type is a vector of type AttributeType as follows:
															-- attrName			VARCHAR(255),
															-- attrType			VARCHAR(255),
															-- attrValue		VARCHAR(255)
	OUT success				BIT,
	OUT createResponse 		XML,
	OUT faultResponse		XML

				-- When conditionType=TIMER set these variables
				WHEN &apos;timerStartTime&apos; 					THEN SET timerStartTime = CAST(attrValue AS TIMESTAMP);
				WHEN &apos;timerPeriod&apos; 						THEN SET timerPeriod = attrValue;
				WHEN &apos;timerPeriodQty&apos; 					THEN SET timerPeriodQty = CAST(attrValue AS INTEGER);
				WHEN &apos;timerRecurringDay&apos; 				THEN SET timerRecurringDay = CAST(attrValue AS VARCHAR);
				WHEN &apos;timerFromTimeInADay&apos; 				THEN SET timerFromTimeInADay = CAST(attrValue AS TIME);
				WHEN &apos;timerEndTimeInADay&apos; 				THEN SET timerEndTimeInADay = CAST(attrValue AS TIME);
				WHEN &apos;timerIsCluster&apos; 					THEN SET timerIsCluster = CAST(attrValue AS BIT);
				-- When actionType=PROCEDURE set these variables.  Execute a procedure.
				WHEN &apos;procedurePath&apos; 					THEN SET procedurePath = attrValue;
				WHEN &apos;procedureParams&apos; 					THEN SET procedureParam = attrValue;
				WHEN &apos;procedureExhaustCursors&apos;			THEN SET procedureExhaustCursors = CAST(attrValue AS BIT);
*/
		-- Prepare the trigger attributes
		SET triggerAttrVect = VECTOR[
			(&apos;timerStartTime&apos;, CAST(CURRENT_DATE||&apos; 05:04:00&apos; AS VARCHAR)),
			(&apos;timerPeriod&apos;,    &apos;MINUTE&apos;),
			(&apos;timerPeriodQty&apos;, &apos;5&apos;),
			(&apos;timerIsCluster&apos;, &apos;1&apos;),
			(&apos;procedurePath&apos;, scriptApplicationServicesPath||&apos;/dynamicFileAutoPublish&apos;),
			(&apos;procedureParams&apos;, &apos;&apos;),
			(&apos;procedureExhaustCursors&apos;, &apos;1&apos;)
		];

		-- Update the trigger
		CALL /shared/ASAssets/Utilities/repository/updateTrigger(
			scriptApplicationServicesPath||&apos;/&apos;||procedureName,
			enableAutoPublishTrigger,
			&apos;TIMER&apos;,
			&apos;PROCEDURE&apos;,
			triggerAttrVect,
			null,
			success,
			createResponse,
			faultResponse);

		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;TRIGGER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;


/***************************************************
 * Create the DynamicFileFrameworkCleanupTrigger trigger
 ***************************************************/
	SET procedureName = &apos;DynamicFileFrameworkCleanupTrigger&apos;;
	CALL PRINT(moduleName||&apos; : Create trigger: createResource(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;&apos;||procedureName||&apos;&apos;&apos;, &apos;&apos;TRIGGER&apos;&apos;...)&apos;);

	BEGIN INDEPENDENT TRANSACTION
		CALL /services/webservices/system/admin/resource/operations/createResource(&apos;
&lt;resource:createResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos;||scriptApplicationServicesPath||&apos;&lt;/resource:path&gt;
  &lt;resource:name&gt;&apos;||procedureName||&apos;&lt;/resource:name&gt;
  &lt;resource:detail&gt;NONE&lt;/resource:detail&gt;
  &lt;resource:type&gt;TRIGGER&lt;/resource:type&gt;
  &lt;resource:subtype&gt;NONE&lt;/resource:subtype&gt;
&lt;/resource:createResource&gt;&apos;, createResponse, faultResponse);
		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to create procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
	END;	


	BEGIN INDEPENDENT TRANSACTION
/*
	IN fullResourcePath		LONGVARCHAR,		-- Full path to the trigger resource.
	IN enabled				BIT,				-- 1=enabled, 0=disabled
												-- When only performing the enable or disable for a trigger, leave conditionType and actionType null. 
	-- Condition Type: [TIMER|JMS|SYSTEM_EVENT|USER_DEFINED]
	IN conditionType		VARCHAR, 			-- NULL or one of [TIMER|JMS|SYSTEM_EVENT|USER_DEFINED] determines the trigger condition.
												-- When NULL, then only perform the enable or disable of the trigger and not other updates.
	-- Action Type: [PROCEDURE|STATISTICS|REINTROSPECT|EMAIL]
	IN actionType			VARCHAR,			-- NOT NULL and [PROCEDURE|STATISTICS|REINTROSPECT|EMAIL] - One of these determines what type of action to take.
												-- When NULL, then only perform the enable or disable of the trigger and not other updates.
												-- When conditionType is NOT NULL, there must be an actionType.
	IN triggerAttrVect		VECTOR(TriggerType),-- Name/Value pair list containing only the necessary &quot;Condition Type&quot; and &quot;Action Type&quot; attributes.

	IN attributeVect		/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeVectorType,
												-- The Attribute Vectory Type is a vector of type AttributeType as follows:
															-- attrName			VARCHAR(255),
															-- attrType			VARCHAR(255),
															-- attrValue		VARCHAR(255)
	OUT success				BIT,
	OUT createResponse 		XML,
	OUT faultResponse		XML

				-- When conditionType=TIMER set these variables
				WHEN &apos;timerStartTime&apos; 					THEN SET timerStartTime = CAST(attrValue AS TIMESTAMP);
				WHEN &apos;timerPeriod&apos; 						THEN SET timerPeriod = attrValue;
				WHEN &apos;timerPeriodQty&apos; 					THEN SET timerPeriodQty = CAST(attrValue AS INTEGER);
				WHEN &apos;timerRecurringDay&apos; 				THEN SET timerRecurringDay = CAST(attrValue AS VARCHAR);
				WHEN &apos;timerFromTimeInADay&apos; 				THEN SET timerFromTimeInADay = CAST(attrValue AS TIME);
				WHEN &apos;timerEndTimeInADay&apos; 				THEN SET timerEndTimeInADay = CAST(attrValue AS TIME);
				WHEN &apos;timerIsCluster&apos; 					THEN SET timerIsCluster = CAST(attrValue AS BIT);
				-- When actionType=PROCEDURE set these variables.  Execute a procedure.
				WHEN &apos;procedurePath&apos; 					THEN SET procedurePath = attrValue;
				WHEN &apos;procedureParams&apos; 					THEN SET procedureParam = attrValue;
				WHEN &apos;procedureExhaustCursors&apos;			THEN SET procedureExhaustCursors = CAST(attrValue AS BIT);
*/
		-- Prepare the trigger attributes
		SET triggerAttrVect = VECTOR[
			(&apos;timerStartTime&apos;, CAST(CURRENT_DATE||&apos; 04:59:00&apos; AS VARCHAR)),
			(&apos;timerPeriod&apos;,    &apos;DAY&apos;),
			(&apos;timerPeriodQty&apos;, &apos;1&apos;),
			(&apos;timerIsCluster&apos;, &apos;1&apos;),
			(&apos;procedurePath&apos;, scriptApplicationServicesPath||&apos;/dynamicFileCleanup&apos;),
			(&apos;procedureParams&apos;, &apos;&apos;),
			(&apos;procedureExhaustCursors&apos;, &apos;1&apos;)
		];

		-- Update the trigger
		CALL /shared/ASAssets/Utilities/repository/updateTrigger(
			scriptApplicationServicesPath||&apos;/&apos;||procedureName,
			enableCleanupTrigger,
			&apos;TIMER&apos;,
			&apos;PROCEDURE&apos;,
			triggerAttrVect,
			null,
			success,
			createResponse,
			faultResponse);

		IF faultResponse IS NOT NULL THEN
			RAISE ex VALUE &apos;Failed to update procedure: &apos;||scriptApplicationServicesPath||&apos;/&apos;||procedureName;
		END IF;
		-- Copy the privileges from CONTAINER folder to the target resource
		SET copyPrivilegeEntry = 
				&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
				&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(scriptApplicationServicesPath||&apos;/&apos;||procedureName) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
				&apos;      &lt;resource:type&gt;TRIGGER&lt;/resource:type&gt;&apos;||CHR(10)||
				&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
				&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
				&apos;&apos;;

		CALL /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(0, 1, copyPrivilegeEntry, success, faultResponse);
	END;

-- Set resource ownership for the published web service folders.
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Update resource ownership: updateResourceOwner(&apos;&apos;&apos;||NVL(publishWsPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;CONTAINER&apos;&apos;, &apos;&apos;&apos;||resourceOwnerNameNew||&apos;&apos;&apos;, &apos;&apos;&apos;||resourceOwnerDomainNew||&apos;&apos;&apos;...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/updateResourceOwner(debug, publishWsPath, &apos;CONTAINER&apos;, resourceOwnerNameNew, resourceOwnerDomainNew);
	END;
-- Set resource ownership for the  published database folders.
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Update resource ownership: updateResourceOwner(&apos;&apos;&apos;||NVL(publishDbPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;CONTAINER&apos;&apos;, &apos;&apos;&apos;||resourceOwnerNameNew||&apos;&apos;&apos;, &apos;&apos;&apos;||resourceOwnerDomainNew||&apos;&apos;&apos;...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/updateResourceOwner(debug, publishDbPath, &apos;CONTAINER&apos;, resourceOwnerNameNew, resourceOwnerDomainNew);
	END;
-- Set resource ownership for the  application services folders.
	BEGIN INDEPENDENT TRANSACTION
		CALL PRINT(moduleName||&apos; : Update resource ownership: updateResourceOwner(&apos;&apos;&apos;||NVL(scriptApplicationServicesPath,&apos;null&apos;)||&apos;&apos;&apos;, &apos;&apos;CONTAINER&apos;&apos;, &apos;&apos;&apos;||resourceOwnerNameNew||&apos;&apos;&apos;, &apos;&apos;&apos;||resourceOwnerDomainNew||&apos;&apos;&apos;...)&apos;);
		CALL /shared/ASAssets/Utilities/repository/updateResourceOwner(debug, scriptApplicationServicesPath, &apos;CONTAINER&apos;, resourceOwnerNameNew, resourceOwnerDomainNew);
	END;

	CALL PRINT(&apos;SUCCESS: Exiting &apos;||moduleName);
EXCEPTION
	ELSE
		CALL PRINT(&apos;FAILED:  Exiting &apos;||moduleName);
		RAISE ex VALUE CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
END</attribute>
  <attribute name="creationDate" type="LONG">1419292005075</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1557978286910</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_types" type="MAP">
    <item>
      <key type="STRING">TriggerType</key>
      <value type="BYTE_ARRAY">EB8GAgALAFQAcgBpAGcAZwBlAHIAVAB5AHAAZQYpAEsALwBzAGgAYQByAGUAZAAvAEEAUwBBAHMAcwBlAHQAcwAvAEIAZQBzAHQAUAByAGEAYwB0AGkAYwBlAHMAXwB2ADgAMQAvAEQAeQBuAGEAbQBpAGMARgBpAGwAZQBGAHIAYQBtAGUAdwBvAHIAawAvAGkAbgBpAHQAQwByAGUAYQB0AGUAUgBlAHMAbwB1AHIAYwBlAHMGKgALAFQAcgBpAGcAZwBlAHIAVAB5AHAAZQMSAAAAAQMSAAAAAQETAQkUAAAAAhAhBhUABgB0AHIATgBhAG0AZQMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAgZEBsGAgAHAFYAQQBSAEMASABBAFIDEgAAAAIEBAAAAAAAAAD/ARMB/////xAhBhUABwB0AHIAVgBhAGwAdQBlAy8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAACBkQGwYCAAsATABPAE4ARwBWAEEAUgBDAEgAQQBSAxIAAAADBAQAAAAAf////wETAf///////w==</value>
    </item>
  </attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">7/148</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/147</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/2208</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/149</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/275</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/144</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/143</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/146</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/145</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/1625</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/399</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/2009</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/1358</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/236</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/235</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/238</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/237</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/111</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/155</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/232</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/154</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/231</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/234</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/156</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/233</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/151</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/150</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/153</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/230</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/152</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/269</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/302</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/229</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/228</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/503</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/1003</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/243</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/242</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/2225</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/241</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/240</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/2222</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/1890</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/295</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/726</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/239</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/1179</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/2218</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/289</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/2213</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/282</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/2110</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/769</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>