<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="normalizeRowsToString" path="/shared/ASAssets/Utilities/string/normalizeRowsToString" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>normalizeRowsToString:
	De-dupe an incoming cursor of strings.  
	For example, maybe there is a list of keywords and you only want the unique values.
	Output the values in a single comma-delimited string.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
	Input:
		curs - contains a cursor of varchar keywords.
			Values: Any text value
	Output:
		result - return a de-duped set of values in a comma separated string.
			Values: Any text value
	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2010.3		8/2/2010		Mike Tinius			5.1.0			Created new

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="curs" direction="IN" nullable="true">
      <datatype name="curs" type="TABLE" refId="1">
        <element name="str">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* normalizeRowsToString:
	De-dupe an incoming cursor of strings.  
	For example, maybe there is a list of keywords and you only want the unique values.
	Output the values in a single comma-delimited string.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
	Input:
		curs - contains a cursor of varchar keywords.
			Values: Any text value
	Output:
		result - return a de-duped set of values in a comma separated string.
			Values: Any text value
	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2010.3		8/2/2010		Mike Tinius			5.1.0			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE normalizeRowsToString(
	IN curs 	cursor (str varchar),
	OUT result	LONGVARCHAR
)
BEGIN
    PATH /shared/ASAssets/Utilities/log;
    PATH /shared/ASAssets/Utilities/repository;

    DECLARE PROC_NAME   CONSTANT VARCHAR DEFAULT &apos;string/normalizeRowsToString&apos;;

	DECLARE temp		VARCHAR;
	DECLARE i,j		INTEGER;
	DECLARE strVector	VECTOR (varchar);

	set strVector = VECTOR[&apos;&apos;];
	set result = &apos;&apos;;
	set i = 1;
	FOR s as curs DO
		set temp = s;
call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, temp);
		set j = 1;
		innerLoop:
		WHILE (j &lt;= CARDINALITY(strVector)) DO
			IF (i &lt;&gt; j) THEN
				IF (temp = strVector[j]) THEN
					set temp = null;
				END IF; 
			END IF;
			set j = j + 1;
			if (j &gt; i) then 
				leave innerLoop;
			end if;
		END WHILE;
		if (temp is not null) then
			set j = CARDINALITY(strVector);
			set strVector[j] = temp;
			if (result = &apos;&apos;) then
				set result = temp;
			else 
				set result = result || &apos;, &apos; || temp;
			end if;
			set strVector = extend(strVector,1);
		end if;
		set i = i + 1;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564692803092</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>