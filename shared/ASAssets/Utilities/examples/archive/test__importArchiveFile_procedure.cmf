<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="test_importArchiveFile" path="/shared/ASAssets/Utilities/examples/archive/test_importArchiveFile" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="archiveOptions" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="message" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/archive/importArchiveFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="car_file_os_full_path" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludeResources" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="excludeResources" type="TREE" refId="2">
              <element name="resourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="resourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="relocateResources" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="relocateResources" type="TREE" refId="3">
              <element name="fromResourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="fromResourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="toResourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="toResourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="rebindResources" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="rebindResources" type="TREE" refId="4">
              <element name="fromResourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="fromResourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="toResourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="toResourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="rebindUsers" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="rebindUsers" type="TREE" refId="5">
              <element name="fromDomain">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="fromUser">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="toDomain">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="toUser">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="remapAttributes" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="remapAttributes" type="TREE" refId="6">
              <element name="resourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="resourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attributes">
                <datatype name="attributes" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <datatype name="AttributeCompleteType" referenceDefinitionSet="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="AttributeCompleteType" type="TREE" refId="7">
                      <element name="attrName">
                        <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                      </element>
                      <element name="attrType">
                        <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                      </element>
                      <element name="attrValue">
                        <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="valueList">
                        <datatype name="valueList" type="ARRAY" maxLength="0">
                          <itemDatatype>
                            <datatype name="itemType" type="TREE" refId="8">
                              <element name="type">
                                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                              </element>
                              <element name="value">
                                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </itemDatatype>
                        </datatype>
                      </element>
                      <element name="valueMap">
                        <datatype name="valueMap" type="ARRAY" maxLength="0">
                          <itemDatatype>
                            <datatype name="entryType" type="TREE" refId="9">
                              <element name="key">
                                <datatype name="key" type="ARRAY" maxLength="0">
                                  <itemDatatype>
                                    <reference refId="8"/>
                                  </itemDatatype>
                                </datatype>
                              </element>
                              <element name="value">
                                <datatype name="value" type="ARRAY" maxLength="0">
                                  <itemDatatype>
                                    <reference refId="8"/>
                                  </itemDatatype>
                                </datatype>
                              </element>
                            </datatype>
                          </itemDatatype>
                        </datatype>
                      </element>
                      <element name="valueArray">
                        <datatype name="valueArray" type="ARRAY" maxLength="0">
                          <itemDatatype>
                            <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                          </itemDatatype>
                        </datatype>
                      </element>
                      <element name="unset">
                        <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                    </datatype>
                  </itemDatatype>
                </datatype>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="importOptions" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
          </itemDatatype>
        </datatype>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="message" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	test_importArchiveFile: 

	How to use this procedure to test importArchiveFile.

	Step 1.  Manually export the folder &quot;/shared/ASAssets/Utilities/examples/archive/resources&quot; to c:\temp\test_archive_resources.car
				Uncheck the &quot;Dependencies&quot; box but leave the other boxes checked.
				Now you are ready to begin.

	Step 2.  Follw the various test options outlined below
		-- Test option 0 - Baseline import with no options.  The existing folder should be imported and there should be no changes to resources

		-- Test option 1 - Exclude Resources
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x2&apos;,&apos;TABLE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x1&apos;,&apos;PROCEDURE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/orders_cache&apos;,&apos;TABLE&apos;)

		-- Execute Test 0 to establish original baseline
		-- Test option 2 - Relocate Resources
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x1&apos;,&apos;PROCEDURE&apos;,			&apos;/shared/ASAssets/Utilities/examples/archive/resources/f2/x1&apos;,&apos;PROCEDURE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,	&apos;/shared/ASAssets/Utilities/examples/archive/resources/f2/ds_orders&apos;,&apos;DATA_SOURCE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x3&apos;,&apos;TABLE&apos;,				&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x3&apos;,&apos;TABLE&apos;)

		-- Execute Test 0 to establish original baseline
		-- Test Option 3 - Rebind Resources
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x2&apos;,&apos;TABLE&apos;,			&apos;/shared/ASAssets/Utilities/examples/archive/resources/x3&apos;,&apos;TABLE&apos;),
				(&apos;/services/databases/system/ALL_USERS&apos;,&apos;TABLE&apos;,								&apos;/services/databases/system/ALL_RESOURCES&apos;,&apos;TABLE&apos;)

		-- Test Option 4 - Rebind Users [You need to have user1 created prior to running this test.]
				(&apos;composite&apos;,&apos;admin&apos;,			&apos;composite&apos;,&apos;user1&apos;)

		-- Test option 5.1 - Simple attrValue
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;urlPatternStr&apos;,&apos;STRING&apos;,	&apos;jdbc:postgresql://&lt;HOST&gt;:&lt;PORT&gt;/&lt;DATABASE_NAME&gt;&apos;,null,null,null,null),
							(&apos;url&apos;,&apos;STRING&apos;,			&apos;jdbc:postresql://localhost:9408/orders&apos;,null,null,null,null)
					])
			];

		-- Test option 5.2 - valueList
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;dummy1&apos;,&apos;LIST&apos;,		null, VECTOR[(&apos;STRING&apos;,&apos;val1&apos;),(&apos;STRING&apos;,&apos;val2&apos;)],null,null,null),
							(&apos;dummy2&apos;,&apos;LIST&apos;,		null, VECTOR[(&apos;STRING&apos;,&apos;val3&apos;)],null,null,null)
					])
			];

		-- Test option 5.3 - valueMap
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;connProperties&apos;,&apos;MAP&apos;,	null,null, VECTOR[(VECTOR[(&apos;STRING&apos;,&apos;AccumulateBatchResult&apos;)],	VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;SetBigStringTryClob&apos;)],	VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;disableDefineColumnType&apos;)],VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;processEscapes&apos;)],			VECTOR[(&apos;STRING&apos;,&apos;true&apos;)])
																		 ],null,null),
							(&apos;DBLinkList&apos;,&apos;MAP&apos;,		null,null, VECTOR[(VECTOR[],VECTOR[])],null,null)
					])

		-- Test option 5.4 - valueArray
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;dummyattribute&apos;,&apos;STRING&apos;,	null,null,null, VECTOR[(&apos;value1&apos;),(&apos;value2&apos;)],null)
					])
			];

		-- Test option 5.5 - no value (null)
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;, VECTOR[ (&apos;dummyattribute&apos;,&apos;STRING&apos;,	null,null,null,null,null)])
			];

		-- Test option 5.6 - Simple attrValue unset=1
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;URLPATTERNSTR&apos;,&apos;STRING&apos;,	&apos;jdbc:postgresql://&lt;HOST&gt;:&lt;PORT&gt;/&lt;DATABASE_NAME&gt;&apos;,null,null,null,1)
					])
			];

*/
PROCEDURE test_importArchiveFile(
	IN  archiveOptions				VARCHAR,  -- 1 or more comma separated options.
	OUT success						BIT,
	OUT message						LONGVARCHAR
)
BEGIN
	DECLARE debug						CHAR(1) DEFAULT &apos;Y&apos;;
	DECLARE moduleName					VARCHAR DEFAULT &apos;test_importArchiveFile&apos;;
	DECLARE location 					VARCHAR DEFAULT &apos;c:\temp\test_archive_resources.car&apos;;
	-- Test option 1
	DECLARE	excludeResources			VECTOR(ROW(resourcePath LONGVARCHAR, resourceType VARCHAR));
	-- Test option 2
	DECLARE	relocateResources			VECTOR(ROW(fromResourcePath LONGVARCHAR, fromResourceType VARCHAR, toResourcePath LONGVARCHAR, toResourceType VARCHAR));
	-- Test option 3
	DECLARE	rebindResources				VECTOR(ROW(fromResourcePath LONGVARCHAR, fromResourceType VARCHAR, toResourcePath LONGVARCHAR, toResourceType VARCHAR));
	-- Test option 4
	DECLARE	rebindUsers					VECTOR(ROW(fromDomain VARCHAR, fromUser VARCHAR, toDomain VARCHAR, toUser VARCHAR));
	-- Test option 5.1 - Simple attrValue
	-- Test option 5.2 - valueList
	-- Test option 5.3 - valueMap
	-- Test option 5.4 - valueArray
	-- Test option 5.5 - no value (null)
	-- Test option 5.6 - Simple attrValue unset=1
	DECLARE	remapAttributes				VECTOR(ROW(resourcePath LONGVARCHAR, resourceType VARCHAR, attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) ));
	-- All Test options
	DECLARE importOptions				VECTOR(LONGVARCHAR);
	DECLARE i							INTEGER DEFAULT 1;
	DECLARE archiveOptions1				VARCHAR DEFAULT &apos;&apos;;
	DECLARE archiveOptions2				VARCHAR DEFAULT &apos;&apos;;
	DECLARE ch							CHAR(1);

	IF (archiveOptions IS NOT NULL AND LENGTH(TRIM(archiveOptions)) &gt; 0) THEN
		-- Remove any white space
		SET archiveOptions1 = &apos;,&apos;||TRIM(archiveOptions)||&apos;,&apos;;
		WHILE (i &lt;= LENGTH(archiveOptions1)) DO
			SET ch = SUBSTRING(archiveOptions1,i,1);
			IF (ch &lt;&gt; &apos; &apos;) THEN
				SET archiveOptions2 = archiveOptions2 || ch;
			END IF;
			SET i = i + 1;
		END WHILE;
		CALL PRINT(moduleName||&apos; : archiveOptions=&apos;||archiveOptions2);

		-- Always choose these options
/*		importOptions				VECTOR(LONGVARCHAR),				-- optional - A list of archive options indicating what additional features should be imported.  
																					  By default, the same options used for export will be used for import.
			OVERWRITE: Overwrite the existing resources if they exist.
			INCLUDE_CACHING: Include caching configurations for resources.
			INCLUDE_CUSTOM_JAVA_JARS: Include custom Java JARs in the export. (ADMIN ONLY)
			INCLUDE_STATISTICS: Include any resources statistics known about the table boundaries, and column boundaries. 
			INCLUDE_DEPENDENCY: Gather and include all dependent resources for the resources you choose to export. 
			INCLUDE_PHYSICAL_SOURCE_INFO: Include sensitive connection information for included physical sources. (OWNER ONLY)
			INCLUDE_REQUIRED_USERS: Include the information about the required users in the export file.
			INCLUDE_SECURITY: Include resource privilege settings. (OWNER ONLY)
*/
		SET importOptions = VECTOR[(&apos;OVERWRITE&apos;),(&apos;INCLUDE_PHYSICAL_SOURCE_INFO&apos;),(&apos;INCLUDE_CACHING&apos;),(&apos;INCLUDE_SECURITY&apos;)];

		-- Test option 1 - Exclude Resources
/*		excludeResources			VECTOR(ROW(							-- optional - A list resources that should not be imported.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR
											))
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||1||&apos;,&apos;) &gt; 0) THEN
			SET excludeResources = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x2&apos;,&apos;TABLE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x1&apos;,&apos;PROCEDURE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/orders_cache&apos;,&apos;TABLE&apos;)
			];
		END IF;

		-- Test option 2 - Relocate Resources
/*		relocateResources			VECTOR(ROW(							-- optional - A mapping of resources from their location in the archive to where they should be imported.
											fromResourcePath LONGVARCHAR, 
											fromResourceType VARCHAR, 
											toResourcePath LONGVARCHAR, 
											toResourceType VARCHAR
											))
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||2||&apos;,&apos;) &gt; 0) THEN
			SET relocateResources = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x1&apos;,&apos;PROCEDURE&apos;,			&apos;/shared/ASAssets/Utilities/examples/archive/resources/f2/x1&apos;,&apos;PROCEDURE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,	&apos;/shared/ASAssets/Utilities/examples/archive/resources/f2/ds_orders&apos;,&apos;DATA_SOURCE&apos;),
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x3&apos;,&apos;TABLE&apos;,				&apos;/shared/ASAssets/Utilities/examples/archive/resources/f1/x3&apos;,&apos;TABLE&apos;)
			];
		END IF;

		-- Test option 3 - Rebind Resources
/*		rebindResources				VECTOR(ROW(							-- optional - A mapping of resources references within the archive to where they should refer to.
											fromResourcePath LONGVARCHAR, 
											fromResourceType VARCHAR, 
											toResourcePath LONGVARCHAR, 
											toResourceType VARCHAR
											))
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||3||&apos;,&apos;) &gt; 0) THEN
			SET rebindResources = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/x2&apos;,&apos;TABLE&apos;,			&apos;/shared/ASAssets/Utilities/examples/archive/resources/x3&apos;,&apos;TABLE&apos;),
				(&apos;/services/databases/system/ALL_USERS&apos;,&apos;TABLE&apos;,								&apos;/services/databases/system/ALL_RESOURCES&apos;,&apos;TABLE&apos;)
			];
		END IF;

		-- Test option 4 - Rebind Users (change ownership)
/*		relocateUsers				VECTOR(ROW(							-- optional - A mapping of users within the archive to whom they should be.   (change ownership)
											fromDomain VARCHAR, 
											fromUser VARCHAR, 
											toDomain VARCHAR, 
											toUser VARCHAR
											))
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||4||&apos;,&apos;) &gt; 0) THEN
			SET rebindUsers = VECTOR[
				(&apos;composite&apos;,&apos;admin&apos;,			&apos;composite&apos;,&apos;user1&apos;)
			];
		END IF;

		-- Test option 5.1 - Remap Attributes Simple
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													attrValue			LONGVARCHAR,			-- optional (1 of attrValue, valueList, valueMap or valueArray must be supplied)
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.1||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_ordersCopy&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;host&apos;,&apos;STRING&apos;,		&apos;localhost&apos;,null,null,null,null),
							(&apos;port&apos;,&apos;STRING&apos;,		&apos;9508&apos;,null,null,null,null),
							(&apos;database&apos;,&apos;STRING&apos;,	&apos;orders&apos;,null,null,null,null),
							(&apos;user&apos;,&apos;STRING&apos;,		&apos;tutorial&apos;,null,null,null,null),
							(&apos;password&apos;,&apos;STRING&apos;,	&apos;password&apos;,null,null,null,null)
					])
			];
		END IF;

		-- Test option 5.2 - Remap Attributes Value List
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													valueList			VECTOR(itemType),		-- optional
																		&quot;type&quot;				VARCHAR(255),
																		&quot;value&quot;				LONGVARCHAR
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.2||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;dummy1&apos;,&apos;LIST&apos;,		null, VECTOR[(&apos;STRING&apos;,&apos;val1&apos;),(&apos;STRING&apos;,&apos;val2&apos;)],null,null,null),
							(&apos;dummy2&apos;,&apos;LIST&apos;,		null, VECTOR[(&apos;STRING&apos;,&apos;val3&apos;)],null,null,null)
					])
			];
		END IF;

		-- Test option 5.3 - Remap Attributes Value Map
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													valueMap			VECTOR(entryType),		-- optional
																		&quot;key&quot;				VECTOR(itemType),	-- this vector always only contains 1 key
																							&quot;type&quot;				VARCHAR(255),
																							&quot;value&quot;				LONGVARCHAR
																		&quot;value&quot;				VECTOR(itemType)	-- this vector always only contains 1 value
																							&quot;type&quot;				VARCHAR(255),
																							&quot;value&quot;				LONGVARCHAR
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.3||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;connProperties&apos;,&apos;MAP&apos;,	null,null, VECTOR[(VECTOR[(&apos;STRING&apos;,&apos;AccumulateBatchResult&apos;)],	VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;SetBigStringTryClob&apos;)],	VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;disableDefineColumnType&apos;)],VECTOR[(&apos;STRING&apos;,&apos;true&apos;)]),
																		  (VECTOR[(&apos;STRING&apos;,&apos;processEscapes&apos;)],			VECTOR[(&apos;STRING&apos;,&apos;true&apos;)])
																		 ],null,null),
							(&apos;DBLinkList&apos;,&apos;MAP&apos;,		null,null, VECTOR[(VECTOR[],VECTOR[])],null,null)
					])
			];
/*name:connProperties
type:MAP
value:[NULL]
valueList:[NULL]
valueMap:
&lt;valueMap&gt;
 &lt;common:valueMap xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;
 xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;
 xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 
&lt;common:entry&gt;
 &lt;common:key&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;AccumulateBatchResult&lt;/common:value&gt;
 &lt;/common:key&gt;
 &lt;common:value&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;true&lt;/common:value&gt;
 &lt;/common:value&gt;
 &lt;/common:entry&gt;

 &lt;common:entry&gt;
 &lt;common:key&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;SetBigStringTryClob&lt;/common:value&gt;
 &lt;/common:key&gt;
 &lt;common:value&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;true&lt;/common:value&gt;
 &lt;/common:value&gt;
 &lt;/common:entry&gt;

 &lt;common:entry&gt;
 &lt;common:key&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;disableDefineColumnType&lt;/common:value&gt;
 &lt;/common:key&gt;
 &lt;common:value&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;true&lt;/common:value&gt;
 &lt;/common:value&gt;
 &lt;/common:entry&gt;

 &lt;common:entry&gt;
 &lt;common:key&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;processEscapes&lt;/common:value&gt;
 &lt;/common:key&gt; &lt;common:value&gt;
   &lt;common:type&gt;STRING&lt;/common:type&gt;
   &lt;common:value&gt;true&lt;/common:value&gt;
 &lt;/common:value&gt;
 &lt;/common:entry&gt;
 &lt;/common:valueMap&gt;
 &lt;/valueMap&gt;

name:DBLinkList
type:MAP
value:[NULL]
valueList:[NULL]
valueMap:
&lt;valueMap&gt;
 &lt;common:valueMap xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;
 xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;
 xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;
 &lt;/valueMap&gt;
*/

		END IF;

		-- Test option 5.4 - Remap Attributes Value Array
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													valueArray			VECTOR(LONGVARCHAR),	-- optional
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.4||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;dummyattribute&apos;,&apos;STRING&apos;,	null,null,null, VECTOR[(&apos;value1&apos;),(&apos;value2&apos;)],null)
					])
			];
		END IF;

		-- Test option 5.5 - Remap Attributes no value provided
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													attrValue			LONGVARCHAR,			-- optional (1 of attrValue, valueList, valueMap or valueArray must be supplied)
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.5||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;, VECTOR[ (&apos;dummyattribute&apos;,&apos;STRING&apos;,	null,null,null,null,null)])
			];
		END IF;

		-- Test option 5.6 - Remap Attributes Simple unset=1
/*		remapAttributes				VECTOR(ROW(							-- optional - A list of resource attribute settings that should be applied on import.
											resourcePath LONGVARCHAR, 
											resourceType VARCHAR, 
											attributes VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteType) 
													attrName			VARCHAR(255),			-- mandatory
													attrType			VARCHAR(255),			-- mandatory
													attrValue			LONGVARCHAR,			-- optional (1 of attrValue, valueList, valueMap or valueArray must be supplied)
													unset				BIT						-- optional - 1 is unset, 0 is set or null to ignore
*/
		IF (INSTR(archiveOptions2, &apos;,&apos;||5.6||&apos;,&apos;) &gt; 0) THEN
			SET remapAttributes = VECTOR[
				(&apos;/shared/ASAssets/Utilities/examples/archive/resources/ds_orders&apos;,&apos;DATA_SOURCE&apos;,
					VECTOR[ (&apos;URLPATTERNSTR&apos;,&apos;STRING&apos;,	&apos;jdbc:postgresql://&lt;HOST&gt;:&lt;PORT&gt;/&lt;DATABASE_NAME&gt;&apos;,null,null,null,1)
					])
			];
		END IF;

		-- Import the test archive
		CALL /shared/ASAssets/Utilities/archive/importArchiveFile(debug, location, excludeResources, relocateResources, rebindResources, rebindUsers, remapAttributes, importOptions, success, message);
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1520949171515</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1556650103688</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/121</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1520949171515</attribute>
</metadata>