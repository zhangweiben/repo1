<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="replaceStringInAnnotations" path="/shared/ASAssets/Utilities/repository/replaceStringInAnnotations" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>replaceStringInAnnotations:

    This procedure is used to replace a target string in the annotations of one or more resources contained under the resource identified by the value startPath
 
    Dependencies:
    =============
    /shared/Utilities/repository/updateResourceAnnotations - Procedure used to update a resource&apos;s annotation with the target text replace


    Input:
        resourcePath - CIS source folder path to assess and fix
            Values: e.g. /shared/tmp/1folder/_folder/XML


    Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		updateResponse - XML response representing what was updated.
			Values: Update Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value


    Exceptions:  /lib/util/System.IllegalArgumentException


	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2013.4		10/02/2013		Matthew Lee			6.2.0			Created new
	2018.100	12/21/2017		Mike Tinius			7.0.5			Added ability to search a startPath with exact match or wild cards. 
																	Added ability to set annotation to null if the replaceStr is null.
																	Added ability to search for null annotations if searchStr is null and replace with the value of replaceStr.
	2019.301	08/01/2019		Mike Tinius			7.0.8			Modified procedure to escape single quotes for &quot;searchStr&quot; for the adhoc query.


    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="startPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="startResourceType" direction="IN" nullable="true">
      <datatype name="ResourceType" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
    </parameter>
    <parameter name="searchStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="replaceStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="updateResponse" direction="OUT" nullable="true">
      <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/databases/system/ALL_RESOURCES" type="TABLE">
    <datatype type="TABLE" refId="1">
      <element name="RESOURCE_ID">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="RESOURCE_NAME">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="RESOURCE_TYPE">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ANNOTATION">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="DEFINITION">
        <datatype type="STRING" maxLength="16777215"/>
      </element>
      <element name="OWNER_ID">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="OWNER">
        <datatype type="STRING" maxLength="60"/>
      </element>
      <element name="PARENT_PATH">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="GUID">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="RESOURCE_SUBTYPE">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="annotation" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inColumnAnnotations" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="updateResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* replaceStringInAnnotations:

    This procedure is used to replace a target string in the annotations of one or more resources contained under the resource identified by the value startPath.
	The &quot;searchStr&quot; is case sensitive and used like a wild card on the annotation.  If the &quot;searchStr&quot; is null then this procedure will only search for null or
	empty annotations and update the annotation with the text in &quot;replaceStr&quot;.  Conversely, if &quot;replaceStr&quot; is null and this procedure will update found resources
	based on &quot;searchStr&quot; text and set the annotation to null effectively removing the annotation.
 
    Dependencies:
    =============
    /shared/Utilities/repository/updateResourceAnnotations - Procedure used to update a resource&apos;s annotation with the target text replace


    Input:
        startPath - CIS source folder path to assess and fix
            Values: e.g. folder exact match: /shared/tmp/1folder/_folder/XML - use this scenario to only search for what is in this exact folder and no sub-folders.
            Values: e.g. wildcard begin: %/1folder/_folder/XML
            Values: e.g. wildcard end: /shared/tmp/1folder/_folder/XML% - use this scenario to iterate through sub-folders
            Values: e.g. wildcard surrounding: %/1folder/_folder/XML%

		startResourceType - the type of resource for the starting path.   
			-- DEPRECATED/NOT USED. CAN BE SET TO NULL.

		searchStr - the string to search for what is to be removed/replaced in the target resource.
			The string search is is case sensitive but is searched like a wildcard so the text can 
				occur anywhere in the annotation.  The string may contain multi-line text.  
			If this string is null then specifically search for null or empty annotations.
 
		replaceStr - the new string in which to replace with. 
			The string may contain multi-line text.  
			If this string is null then set the target annotation to null.

    Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		updateResponse - XML response representing what was updated.
			Values: Update Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value

    Exceptions:  ex

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2013.4		10/02/2013		Matthew Lee			6.2.0			Created new
	2018.100	12/21/2017		Mike Tinius			7.0.5			Added ability to search a startPath with exact match or wild cards. 
																	Added ability to set annotation to null if the replaceStr is null.
																	Added ability to search for null annotations if searchStr is null and replace with the value of replaceStr.
	2019.301	08/01/2019		Mike Tinius			7.0.8			Modified procedure to escape single quotes for &quot;searchStr&quot; for the adhoc query.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE replaceStringInAnnotations
(
	IN startPath 			/lib/resource/ResourceDefs.ResourcePath, 
	IN startResourceType 	/lib/resource/ResourceDefs.ResourceType, -- DEPRECATED/NOT USED. CAN BE SET TO NULL.
	IN searchStr 			LONGVARCHAR, 
	IN replaceStr 			LONGVARCHAR, 
	OUT success 			BIT, 
	OUT updateResponse 		XML,
	OUT faultResponse 		XML
)
BEGIN
	DECLARE moduleName			VARCHAR DEFAULT &apos;replaceStringInAnnotations&apos;;
	DECLARE debug				CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;
	DECLARE searchStr_			LONGVARCHAR DEFAULT searchStr;
	DECLARE resCur 				CURSOR (
		parentPath 		/lib/resource/ResourceDefs.ResourcePath, 
		resourceName	/lib/resource/ResourceDefs.ResourceName, 
		resourcePath 	/lib/resource/ResourceDefs.ResourcePath, 
		resourceType 	/lib/resource/ResourceDefs.ResourceType, 
		annotation 		LONGVARCHAR
	);
	DECLARE annotation 			LONGVARCHAR DEFAULT NULL;
	DECLARE resQuery 			LONGVARCHAR;
	DECLARE actionType			VARCHAR;
	DECLARE performOperation	BOOLEAN;
	DECLARE folderName			/lib/resource/ResourceDefs.ResourceType;
	DECLARE folderPath			/lib/resource/ResourceDefs.ResourcePath;
	DECLARE parentResourceType	/lib/resource/ResourceDefs.ResourceType;
	DECLARE ex					EXCEPTION;

	IF (startPath IS NULL OR LENGTH(TRIM(startPath)) = 0) THEN
		RAISE ex VALUE moduleName||&apos; : EXCEPTION: The input parameter &quot;startPath&quot; may not be null or empty.&apos;;
	END IF;

	-- Escape the single quotes within the search string text
	IF (INSTR(searchStr_, &apos;&apos;&apos;&apos;) &gt; 0) THEN
		SET searchStr_ = REPLACE(searchStr_, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;);
	END IF;

	SET success = 1;
	SET resQuery = &apos;
        SELECT
          PARENT_PATH parentPath,
          RESOURCE_NAME resourceName,
          PARENT_PATH || &apos;&apos;/&apos;&apos; || RESOURCE_NAME resourcePath,
          CASE RESOURCE_TYPE 
              WHEN &apos;&apos;DATASOURCE&apos;&apos; THEN &apos;&apos;DATA_SOURCE&apos;&apos;
              ELSE RESOURCE_TYPE 
          END resourceType,
          ANNOTATION annotation
        FROM /services/databases/system/ALL_RESOURCES&apos;;

	-- Check for wild cards in the startPath
	IF (INSTR(startPath, &apos;%&apos;) = 0) THEN
		SET resQuery = resQuery || &apos;
        WHERE PARENT_PATH = &apos;&apos;&apos; || startPath || &apos;&apos;&apos;&apos;;
	ELSE
		SET resQuery = resQuery || &apos;
        WHERE PARENT_PATH LIKE &apos;&apos;&apos; || startPath || &apos;&apos;&apos;&apos;;
	END IF;

	SET resQuery = resQuery || &apos;
          AND RESOURCE_TYPE NOT IN (&apos;&apos;PARAMETER&apos;&apos;,&apos;&apos;INDEX&apos;&apos;,&apos;&apos;OTHER&apos;&apos;)&apos;;

	-- Check for the search for null or empty annotations
	IF (searchStr IS NOT NULL) THEN
		SET resQuery = resQuery || &apos;
          AND ANNOTATION LIKE &apos;&apos;%&apos; || searchStr_ || &apos;%&apos;&apos;&apos;;
	ELSE -- search for null or empty annotations
		-- Add the search for null or empty annotations
		SET resQuery = resQuery || &apos;
          AND (ANNOTATION IS NULL OR (ANNOTATION IS NOT NULL AND LENGTH(TRIM(ANNOTATION)) = 0))&apos;;
	END IF;
	SET resQuery = resQuery || &apos;
        ORDER BY PARENT_PATH, RESOURCE_NAME&apos;;

	IF (UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : resQuery=&apos;||resQuery);
	END IF;

	-- Execute the query to search for annotations
	OPEN resCur for resQuery;

	FOR res AS resCur DO
		SET actionType = &apos;No operation.&apos;;
		SET performOperation = true;

		-- Check the replacement rules
		-- Annotation exists on resource
		IF (res.annotation IS NOT NULL AND LENGTH(TRIM(res.annotation)) &gt; 0) THEN
			-- Replacement string is provided by user
			IF (replaceStr IS NOT NULL) THEN
				SET annotation = REPLACE(res.annotation, searchStr, replaceStr);
				SET actionType = &apos;Replaced &quot;searchStr&quot; with &quot;replaceStr&quot;.&apos;;
			-- Replace string provided by user is NULL
			ELSE
				-- Don&apos;t update annotations on FOLDERS OR CONTAINERS when replacing annotations with NULL
				IF (res.resourceType = &apos;FOLDER&apos; OR res.resourceType = &apos;CONTAINER&apos;) THEN
					SET actionType = &apos;No operation.&apos;;
					SET performOperation = false;
				-- Set the resource annotation to NULL
				ELSE
					SET annotation = replaceStr;
					SET actionType = &apos;Replaced existing annotation with null.&apos;;
				END IF;
			END IF;	
		-- Annotation does not exist on resource			
		ELSE
			-- Don&apos;t update annotations on FOLDERS OR CONTAINERS
			IF (res.resourceType = &apos;FOLDER&apos; OR res.resourceType = &apos;CONTAINER&apos;) THEN
				SET actionType = &apos;No operation.&apos;;
				SET performOperation = false;
			-- Set the resource annotation to whatever was provided by the user&apos;s &quot;replaceStr&quot;
			ELSE
				SET annotation = replaceStr;
				SET actionType = &apos;Replaced null annotation with &quot;replaceStr&quot;.&apos;;
			END IF;
		END IF;

		-- If the resource is a trigger makes sure it is not a hidden cache trigger which is not physically visible.
		-- Each cache resource will contain a trigger resource that is not visible but is present in the ALL_RESOURCES table.
		-- This code prevents the annotation being updated on that resources since it will throw an exception that it does not exist.
		IF (res.resourceType = &apos;TRIGGER&apos;) THEN
			CALL /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(res.parentPath, &apos;E&apos;, folderName, folderPath);
			SELECT RESOURCE_TYPE INTO parentResourceType
				FROM /services/databases/system/ALL_RESOURCES
				WHERE PARENT_PATH = folderPath
				  AND RESOURCE_NAME = folderName;
			IF (UPPER(debug) = &apos;Y&apos;) THEN
				CALL PRINT(moduleName||&apos; :  parentResourceType=&apos;||parentResourceType||&apos;  folderName=&apos;||folderName||&apos;  folderPath=&apos;||folderPath);
			END IF;

			-- If the parent is a FOLDER or CONTAINER then this is a valid trigger.  Anything else indicates that this is a trigger on a cache resource.
			IF (parentResourceType IS NOT NULL AND (parentResourceType &lt;&gt; &apos;CONTAINER&apos; AND parentResourceType &lt;&gt; &apos;FOLDER&apos;)) THEN
				SET actionType = &apos;No operation.&apos;;
				SET performOperation = false;
			END IF;
		END IF;

		IF (UPPER(debug) = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : &apos;||actionType||&apos;  resourceType=&apos;||res.resourceType||&apos;  resourcePath=&apos;||res.resourcePath);
		END IF;
		-- Perform the update resource annotation operation
		IF (performOperation) THEN
			CALL /shared/ASAssets/Utilities/repository/updateResourceAnnotationsV2(res.resourcePath, res.resourceType, annotation, NULL, success, updateResponse, faultResponse);
			IF (faultResponse IS NOT NULL) THEN
				RAISE ex VALUE moduleName||&apos; : EXCEPTION:  &apos;||CAST(faultResponse AS LONGVARCHAR);
			END IF;
		END IF;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1380737206434</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564745764702</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/145</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/197</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/208</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>