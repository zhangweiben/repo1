<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="getServerAttributeMap" path="/shared/ASAssets/Utilities/repository/server/getServerAttributeMap" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getServerAttributeMap:
    Get all key/value pairs for the passed in Key Map Identifier.
 
	Input:
   	 	attributePath - a server attribute path that contains a map like: /studio/data/examplemap
	Output:
		cursor
			keyName		- The key for the map
			keyValue	- This is the value for a given key in a map object

	Exceptions:  Exception is thrown if a path does not exist or the user does not have permission

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.2		2/10/2012		Mike Tinius			5.2.0			Created new 

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="attributePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="keyName">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="keyValue">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/repository/server/helper/getServerAttributeValueMapXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inXML" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="3">
          <element name="keyName">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="keyValue">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/server/helper/getServerAttributeXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="attributePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="getServerAttributesResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getServerAttributeMap:
    Get all key/value pairs for the passed in Key Map Identifier.
 
	Input:
   	 	attributePath - a server attribute path that contains a map like: /studio/data/examplemap
	Output:
		cursor
			keyName		- The key for the map
			keyValue	- This is the value for a given key in a map object

	Exceptions:  Exception is thrown if a path does not exist or the user does not have permission

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.2		2/10/2012		Mike Tinius			5.2.0			Created new 

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE getServerAttributeMap(
   	IN  attributePath		LONGVARCHAR, -- a server attribute path that contains a map like: /studio/data/examplemap
	OUT result 				PIPE	(
		keyName				LONGVARCHAR,	-- The key for the key map	
		keyValue			LONGVARCHAR  	-- This is the value for a given key in a map object
	)
)
BEGIN
	DECLARE getServerAttributesResponse	XML;
	DECLARE faultResponse				XML;
	DECLARE serverAttrXSLT				LONGVARCHAR;
	DECLARE ex							EXCEPTION;

	call /shared/ASAssets/Utilities/repository/server/helper/getServerAttributeXML(attributePath,getServerAttributesResponse,faultResponse);
  	if (faultResponse is not null) then
		raise ex value cast(faultResponse as longvarchar);
	else
		for r as 
			select * from /shared/ASAssets/Utilities/repository/server/helper/getServerAttributeValueMapXSLT(getServerAttributesResponse) 
		do
			insert into result values(r);
		end for;
	end if;
END
</attribute>
  <attribute name="creationDate" type="LONG">1383622341196</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564696462663</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>