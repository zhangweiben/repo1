<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="introspectResources" path="/shared/ASAssets/Utilities/repository/introspectResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>introspectResources:

	This script is used to provide a consistent and generic interface for introspecting Relational datasources,
		CSV files and Excel Non-ODBC files.
	It creates a necessary transaction around introspectResourcesTask and introspectResourcesResult.
	Since the output variable &quot;introspectionResult&quot; is a string result, the invoker of this procedure
	may also invoke &quot;/shared/ASAssets/Utilities/repository/introspectResourcesResultCursor&quot; to extract the
	results into a cursor format.

	Input:
		IN  dsPath 						/lib/resource/ResourceDefs.ResourcePath,	-- mandatory.   Full path to datasource
		IN  catalogName 				VARCHAR,		-- optional (null) - 
														--		Relational Database - database catalog Name if applicable.
														--		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - leave this null as it is not applicable
		IN  schemaNames					LONGVARCHAR,	-- optional (null) -  NULL=no specified schema list OR one or more comma separated schemas to introspect.
														--	Note: If a list of schema names are provided and a list of table names are provided the list of table names
														--	  will be applied in total to each schema name.  It is not currently in scope to correlate a list of tables to a list of schemas. 
														-- 		Relational Database - schema name or list of schema names.
														-- 		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - the excel file name or list of file names.
		IN  schemaTablePatterns			VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all tables starting with D, E and F or
														--		a bracketed correlated and comma-separated list of table patterns associated with each schema:
														--			schemaNames=		SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			schemaTablePatterns=[M%]   [P%]		- The 1st set of bracketed table patterns goes with the 1st schema.  
														--												- The 2nd bracketed set of table patterns goes with the 2nd schema 
		IN  tableNames 					LONGVARCHAR,	-- optional.  NULL=no specified table list OR one or more comma separated table namess to introspect or	
														--		a bracketed correlated and comma-separated list of table names associated with each schema:
														--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			tableNames=		[T1,T2][T3,T4]	- The 1st set of bracketed tables goes with the 1st schema.  
														--											- The 2nd bracketed set of tables goes with the 2nd schema
														--		Relational Database - When NULL, all tables for the schema are introspected, otherwise the list of tables provided are introspected.
														--		CSV - When NULL, all CSV files are introspected, otherwise the list of files provided are introspected.
														--		Excel Non-ODBC - When NULL, all sheets are introspected, otherwise the list of sheets provided are introspected.
														--		Table names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
		IN  schemaProcedurePatterns		VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all new procedure patterns starting with D, E and F or
														--		a bracketed correlated and comma-separated list of procedure patterns associated with each schema:
														--			schemaNames=			SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			schemaProcedurePatterns=[N%]   [O%]		- The 1st set of bracketed procedure patterns goes with the 1st schema.  
														--													- The 2nd bracketed set of procedure patterns goes with the 2nd schema 
		IN  procedureNames 				LONGVARCHAR,	-- optional. NULL=no specified procedure list OR 1 or more comma separated procedure names to introspect or 
														--		a bracketed correlated and comma-separated list of procedure names associated with each schema:
														--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			procedureNames=	[P1][P2,P3,P4]	- The 1st set of bracketed procedures goes with the 1st schema.  
														--											- The 2nd bracketed set of procedures goes with the 2nd schema
														-- 		Relational Database - When NULL, all procedures are introspected, otherwise the list of procedures provided are introspected.
														-- 		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - leave this null as it is not applicable
														--		Procedure names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
		IN	separator					VARCHAR,		-- Default=,  The separator used to separate lists for the input parameters: tableNames, schemaTablePatterns, schemaProcedurePatterns and procedureNames.
														--		The separator value should not exist within the tableNames or procedureNames variable.
		IN  inDebug						CHAR(1),		-- Y=debug on, N=debug off.

	Output:
		OUT errStatus 					VARCHAR,		-- SUCCESS or FAILED
		OUT errMessage 					LONGVARCHAR,	-- Error message if errStatus=FAILED, otherwise null
		OUT introspectionResult 		LONGVARCHAR,	-- A line (CHR(10)) delimited string of results.  Use introspectResourcesResultCursor() to  return a cursor.
		OUT dataSourceType				VARCHAR,		-- The type of data source that was introspected.
		OUT dataSourceSubtype			VARCHAR			-- The subtype of data source that was introspected.

	Evaluate the results from IntrospectResourcesResult()
			Values: CURSOR (
                        status                  VARCHAR(32768),
                        introspectorVersion     INTEGER,
                        startTime               TIMESTAMP,
                        endTime                 TIMESTAMP,
                        addedCount              INTEGER,
                        removedCount            INTEGER,
                        updatedCount            INTEGER,
                        skippedCount            INTEGER,
                        totalCompletedCount     INTEGER,
                        toBeAddedCount          INTEGER,
                        toBeRemovedCount        INTEGER,
                        toBeUpdatedCount        INTEGER,
                        totalToBeCompletedCount INTEGER,
                        warningCount            INTEGER,
                        errorCount              INTEGER,
                        &quot;path&quot;                  VARCHAR(4096),
                        &quot;type&quot;                  VARCHAR(40),
                        subtype                 VARCHAR(40),
                        &quot;action&quot;                VARCHAR(32768),
                        durationMs              INTEGER,
                        entryStatus             VARCHAR(32768),
                        code                    VARCHAR(32768),
                        name                    VARCHAR(32768),
                        message                 LONGVARCHAR,
                        detail                  VARCHAR(32768),
                        severity                VARCHAR(32768),
                    )

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2014.1		01/20/2014		Manny Bhatia		6.2.5			Created new
	2014.4		09/25/2014		Mike Tinius			6.2.6			Modified to make cache framework generic. 
	2015.1		02/12/2015		Mike Tinius			6.2.6			Modified to make a generic introspection utility.
	2018.100	02/20/2018		Mike Tinius			7.0.5			Adapted and modified for usage with the Utilities as a generic procedure.
	2019.200	05/13/2019		Mike Tinius			7.0.8			Removed use of VECTOR parameters for introspection and copy privileges as vector parameters are associated with memory leaks.  
																	Removed use of lowerLevelProcedures/introspectResourcesTask and consolidated into this procedure.
																	Removed use of lowerLevelProcedures/introspectResourcesResult and consolidated into this procedure.
																	Added the ability to define a resource name, type and subtype in the tableNames or procedureNames input list using this format: name(TYPE:SUBTYPE).

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="dsPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="catalogName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="schemaNames" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="schemaTablePatterns" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="tableNames" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="schemaProcedurePatterns" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="procedureNames" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="separator" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inDebug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="errStatus" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="errMessage" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="introspectionResult" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="dataSourceType" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="dataSourceSubtype" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/copyResourcePrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="copyResourcePrivileges" direction="IN">
        <datatype name="copyResourcePrivileges" extendedName="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivileges" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivileges">
          <schemaDatatype>
            <datatype name="copyResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="copyResourcePrivilegesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="updateRecursively" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="copyPrivilegeEntries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="copyPrivilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="copyPrivilegeEntryType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="srcResource" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="pathTypeOrColumnPair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                          <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceOrColumnType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="dstResource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647">
                        <reference refId="5"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="updatePrivilegesMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="copyResourcePrivilegesResponse" direction="OUT">
        <datatype name="copyResourcePrivilegesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivilegesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}copyResourcePrivilegesResponse">
          <schemaDatatype>
            <datatype name="copyResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="copyResourcePrivilegesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="6"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="7">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/getMostRecentIntrospectionStatus" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="getMostRecentIntrospectionStatus" direction="IN">
        <datatype name="getMostRecentIntrospectionStatus" extendedName="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatus" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatus" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatus">
          <schemaDatatype>
            <datatype name="getMostRecentIntrospectionStatus" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getMostRecentIntrospectionStatusRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="getMostRecentIntrospectionStatusResponse" direction="OUT">
        <datatype name="getMostRecentIntrospectionStatusResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatusResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatusResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getMostRecentIntrospectionStatusResponse">
          <schemaDatatype>
            <datatype name="getMostRecentIntrospectionStatusResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getMostRecentIntrospectionStatusResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="3">
              <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="introspectionStatus" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                  <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="operationStatus" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="introspectorVersion" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="startTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                  </element>
                  <element name="endTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                  </element>
                  <element name="addedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="removedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="updatedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="skippedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="totalCompletedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeAddedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeRemovedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeUpdatedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="totalToBeCompletedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="warningCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="errorCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="report" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="introspectionChangeEntryList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                      <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="introspectionChangeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="action" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="introspectionAction" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="durationMs" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                          </element>
                          <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="messages" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="messageEntryList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="9">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <reference refId="8"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/introspectResourcesResult" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="introspectResourcesResult" direction="IN">
        <datatype name="introspectResourcesResult" extendedName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResult" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResult" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResult">
          <schemaDatatype>
            <datatype name="introspectResourcesResult" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="introspectResourcesResultRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="taskId" namespace="http://www.compositesw.com/services/system/util/common">
                <datatype name="taskId" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="block" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="page" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                <datatype name="page" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="size" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="start" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                </datatype>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="introspectResourcesResultResponse" direction="OUT">
        <datatype name="introspectResourcesResultResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResultResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResultResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesResultResponse">
          <schemaDatatype>
            <datatype name="introspectResourcesResultResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="introspectResourcesResultResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="4">
              <element name="taskId" namespace="http://www.compositesw.com/services/system/util/common">
                <datatype name="taskId" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="totalResults" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                <datatype name="integer" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
              </element>
              <element name="completed" namespace="http://www.compositesw.com/services/system/util/common">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="introspectionStatus" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="operationStatus" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="introspectorVersion" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="startTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                  </element>
                  <element name="endTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                  </element>
                  <element name="addedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="removedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="updatedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="skippedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="totalCompletedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeAddedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeRemovedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="toBeUpdatedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="totalToBeCompletedCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="warningCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="errorCount" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                  </element>
                  <element name="report" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="introspectionChangeEntryList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                      <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="introspectionChangeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                          <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="action" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="introspectionAction" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="durationMs" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                          </element>
                          <element name="status" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="messages" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="messageEntryList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                              <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="9">
                                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="10">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <reference refId="9"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesResultXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inXML" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="3">
          <element name="status">
            <datatype namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="introspectorVersion">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="startTime">
            <datatype type="DATETIME"/>
          </element>
          <element name="endTime">
            <datatype type="DATETIME"/>
          </element>
          <element name="addedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="removedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="updatedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="skippedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="totalCompletedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="toBeAddedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="toBeRemovedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="toBeUpdatedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="totalToBeCompletedCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="warningCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="errorCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="path">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="4096"/>
          </element>
          <element name="type">
            <datatype namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="40"/>
          </element>
          <element name="subtype">
            <datatype namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="40"/>
          </element>
          <element name="action">
            <datatype namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="durationMs">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="entryStatus">
            <datatype namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="code">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="name">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="message">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="detail">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="severity">
            <datatype namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesTaskXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="introspectResourcesTask" direction="IN">
        <datatype name="introspectResourcesTask" extendedName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask">
          <schemaDatatype>
            <datatype name="introspectResourcesTask" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="introspectResourcesTaskRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="plan" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="introspectionPlan" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="updateAllIntrospectedResources" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="failFast" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="commitOnFailure" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="autoRollback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="scanForNewResourcesToAutoAdd" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="entries" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="introspectionPlanEntries" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="introspectionPlanEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                          <element name="resourceId" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="pathTypeSubtype" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="action" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="introspectionPlanAction" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="9">
                                      <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                        <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                                          <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                            <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                          <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                          <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <reference refId="9"/>
                                          </element>
                                          <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="11">
                                              <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="12">
                                                  <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                    <reference refId="10"/>
                                                  </element>
                                                  <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                    <reference refId="10"/>
                                                  </element>
                                                </datatype>
                                              </element>
                                            </datatype>
                                          </element>
                                          <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="13">
                                              <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                  <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <reference refId="11"/>
                                  </element>
                                  <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <reference refId="13"/>
                                  </element>
                                  <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="runInBackgroundTransaction" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <reference refId="7"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="14">
          <element name="taskId">
            <datatype namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="totalResults">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
          </element>
          <element name="completed">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/xml/getValueFromXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="namespaces" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXpath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXml" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
	introspectResources:

	This script is used to provide a consistent and generic interface for introspecting the following datasource:
		Relational, CSV files, Excel Non-ODBC files and XML files.
	It creates a necessary transaction around introspectResourcesTaskXSLT and introspectResourcesResult.
	It will copy privileges with SET_EXACTLY from the datasource down to specified catalog, schema and tables where applicable.

	Genericaly, this procedure has the ability to define a resource name, type and subtype in the tableNames or procedureNames 
		input list using this format: name(TYPE:SUBTYPE).  For example when introspecting an XML file that also contains a
		definition set, the user may request in the tableNames parameter the following: 
			productCatalog.xml,productCatalogDefinitions(DEFINITION_SET:XML_SCHEMA_DEFINITION_SET)
		In the above example, productCatalog.xml is not explicitly defined because it uses the default settings
			for an XML datasource which are TYPE=TRE and SUBTYPE=XML_FILE_TREE.

	Since the output variable &quot;introspectionResult&quot; is a string result, the invoker of this procedure
	may also invoke &quot;/shared/ASAssets/Utilities/repository/introspectResourcesResultCursor&quot; to extract the
	results into a cursor format.

	Input:
		IN  dsPath 						/lib/resource/ResourceDefs.ResourcePath,	-- mandatory.   Full path to datasource
		IN  catalogName 				VARCHAR,		-- optional (null) - 
														--		Relational Database - database catalog Name if applicable.
														--		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - leave this null as it is not applicable
		IN  schemaNames					LONGVARCHAR,	-- optional (null) -  NULL=no specified schema list OR one or more comma separated schemas to introspect.
														--	Note: If a list of schema names are provided and a list of table names are provided the list of table names
														--	  will be applied in total to each schema name.  It is not currently in scope to correlate a list of tables to a list of schemas. 
														-- 		Relational Database - schema name or list of schema names.
														-- 		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - the excel file name or list of file names.
		IN  schemaTablePatterns			VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all tables starting with D, E and F or
														--		a bracketed correlated and comma-separated list of table patterns associated with each schema:
														--			schemaNames=		SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			schemaTablePatterns=[M%]   [P%]		- The 1st set of bracketed table patterns goes with the 1st schema.  
														--												- The 2nd bracketed set of table patterns goes with the 2nd schema 
		IN  tableNames 					LONGVARCHAR,	-- optional.  NULL=no specified table list OR one or more comma separated table namess to introspect or	
														--		a bracketed correlated and comma-separated list of table names associated with each schema:
														--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			tableNames=		[T1,T2][T3,T4]	- The 1st set of bracketed tables goes with the 1st schema.  
														--											- The 2nd bracketed set of tables goes with the 2nd schema
														--		Relational Database - When NULL, all tables for the schema are introspected, otherwise the list of tables provided are introspected.
														--		CSV - When NULL, all CSV files are introspected, otherwise the list of files provided are introspected.
														--		Excel Non-ODBC - When NULL, all sheets are introspected, otherwise the list of sheets provided are introspected.
														--		XML Files - When NULL, all XML files are introspected, otherwise the list of files provided are introspected.
														--			To introspect the definition set specify the definition set name in this format:  name(TYPE:SUBTYPE)
														--				Example: productCatalog.xml,productCatalogDefinitions(DEFINITION_SET:XML_SCHEMA_DEFINITION_SET)
														--		Table names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
														-- 		Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
														--			The invoking program is required to know the valid TYPE and SUBTYPE combinations.
		IN  schemaProcedurePatterns		VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all new procedure patterns starting with D, E and F or
														--		a bracketed correlated and comma-separated list of procedure patterns associated with each schema:
														--			schemaNames=			SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			schemaProcedurePatterns=[N%]   [O%]		- The 1st set of bracketed procedure patterns goes with the 1st schema.  
														--													- The 2nd bracketed set of procedure patterns goes with the 2nd schema 
		IN  procedureNames 				LONGVARCHAR,	-- optional. NULL=no specified procedure list OR 1 or more comma separated procedure names to introspect or 
														--		a bracketed correlated and comma-separated list of procedure names associated with each schema:
														--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
														--			procedureNames=	[P1][P2,P3,P4]	- The 1st set of bracketed procedures goes with the 1st schema.  
														--											- The 2nd bracketed set of procedures goes with the 2nd schema
														-- 		Relational Database - When NULL, all procedures are introspected, otherwise the list of procedures provided are introspected.
														-- 		CSV - leave this null as it is not applicable
														--		Excel Non-ODBC - leave this null as it is not applicable
														--		Procedure names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
														-- 		Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
														--			The invoking program is required to know the valid TYPE and SUBTYPE combinations.
		IN	separator					VARCHAR,		-- Default=,  The separator used to separate lists for the input parameters: tableNames, schemaTablePatterns, schemaProcedurePatterns and procedureNames.
														--		The separator value should not exist within the tableNames or procedureNames variable.
		IN  inDebug						CHAR(1),		-- Y=debug on, N=debug off.

	Output:
		OUT errStatus 					VARCHAR,		-- SUCCESS or FAILED
		OUT errMessage 					LONGVARCHAR,	-- Error message if errStatus=FAILED, otherwise null
		OUT introspectionResult 		LONGVARCHAR,	-- A line (CHR(10)) delimited string of results.  Use introspectResourcesResultCursor() to  return a cursor.
		OUT dataSourceType				VARCHAR,		-- The type of data source that was introspected.
		OUT dataSourceSubtype			VARCHAR			-- The subtype of data source that was introspected.

	Evaluate the results from IntrospectResourcesResult()
			Values: CURSOR (
                        status                  VARCHAR(32768),
                        introspectorVersion     INTEGER,
                        startTime               TIMESTAMP,
                        endTime                 TIMESTAMP,
                        addedCount              INTEGER,
                        removedCount            INTEGER,
                        updatedCount            INTEGER,
                        skippedCount            INTEGER,
                        totalCompletedCount     INTEGER,
                        toBeAddedCount          INTEGER,
                        toBeRemovedCount        INTEGER,
                        toBeUpdatedCount        INTEGER,
                        totalToBeCompletedCount INTEGER,
                        warningCount            INTEGER,
                        errorCount              INTEGER,
                        &quot;path&quot;                  VARCHAR(4096),
                        &quot;type&quot;                  VARCHAR(40),
                        subtype                 VARCHAR(40),
                        &quot;action&quot;                VARCHAR(32768),
                        durationMs              INTEGER,
                        entryStatus             VARCHAR(32768),
                        code                    VARCHAR(32768),
                        name                    VARCHAR(32768),
                        message                 LONGVARCHAR,
                        detail                  VARCHAR(32768),
                        severity                VARCHAR(32768),
                    )

 	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2014.1		01/20/2014		Manny Bhatia		6.2.5			Created new
	2014.4		09/25/2014		Mike Tinius			6.2.6			Modified to make cache framework generic. 
	2015.1		02/12/2015		Mike Tinius			6.2.6			Modified to make a generic introspection utility.
	2018.100	02/20/2018		Mike Tinius			7.0.5			Adapted and modified for usage with the Utilities as a generic procedure.
	2019.200	05/13/2019		Mike Tinius			7.0.8			Removed use of VECTOR parameters for introspection and copy privileges as vector parameters are associated with memory leaks.  
																	Removed use of lowerLevelProcedures/introspectResourcesTask and consolidated into this procedure.
																	Removed use of lowerLevelProcedures/introspectResourcesResult and consolidated into this procedure.
																	Added the ability to define a resource name, type and subtype in the tableNames or procedureNames input list using this format: name(TYPE:SUBTYPE).

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE introspectResources(
	IN  dsPath 						/lib/resource/ResourceDefs.ResourcePath,	-- mandatory.   Full path to datasource
	IN  catalogName 				VARCHAR,		-- optional (null) - 
													--		Relational Database - database catalog Name if applicable.
													--		CSV - leave this null as it is not applicable
													--		Excel Non-ODBC - leave this null as it is not applicable
	IN  schemaNames					LONGVARCHAR,	-- optional (null) -  NULL=no specified schema list OR one or more comma separated schemas to introspect.
													--	Note: If a list of schema names are provided and a list of table names are provided the list of table names
													--	  will be applied in total to each schema name.  It is not currently in scope to correlate a list of tables to a list of schemas. 
													-- 		Relational Database - schema name or list of schema names.
													-- 		CSV - leave this null as it is not applicable
													--		Excel Non-ODBC - the excel file name or list of file names.
	IN  schemaTablePatterns			VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all tables starting with D, E and F or
													--		a bracketed correlated and comma-separated list of table patterns associated with each schema:
													--			schemaNames=		SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
													--			schemaTablePatterns=[M%]   [P%]		- The 1st set of bracketed table patterns goes with the 1st schema.  
													--												- The 2nd bracketed set of table patterns goes with the 2nd schema 
	IN  tableNames 					LONGVARCHAR,	-- optional.  NULL=no specified table list OR one or more comma separated table namess to introspect or	
													--		a bracketed correlated and comma-separated list of table names associated with each schema:
													--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
													--			tableNames=		[T1,T2][T3,T4]	- The 1st set of bracketed tables goes with the 1st schema.  
													--											- The 2nd bracketed set of tables goes with the 2nd schema
													--		Relational Database - When NULL, all tables for the schema are introspected, otherwise the list of tables provided are introspected.
													--		CSV - When NULL, all CSV files are introspected, otherwise the list of files provided are introspected.
													--		Excel Non-ODBC - When NULL, all sheets are introspected, otherwise the list of sheets provided are introspected.
													--		XML Files - When NULL, all XML files are introspected, otherwise the list of files provided are introspected.
													--			To introspect the definition set specify the definition set name in this format:  name(TYPE:SUBTYPE)
													--				Example: productCatalog.xml,productCatalogDefinitions(DEFINITION_SET:XML_SCHEMA_DEFINITION_SET)
													--		Table names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
													-- 		Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
													--			The invoking program is required to know the valid TYPE and SUBTYPE combinations.
	IN  schemaProcedurePatterns		VARCHAR(4096),	-- comma separated list of patterns such as D%, E%, F%.    Introspect all new procedure patterns starting with D, E and F or
													--		a bracketed correlated and comma-separated list of procedure patterns associated with each schema:
													--			schemaNames=			SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
													--			schemaProcedurePatterns=[N%]   [O%]		- The 1st set of bracketed procedure patterns goes with the 1st schema.  
													--													- The 2nd bracketed set of procedure patterns goes with the 2nd schema 
	IN  procedureNames 				LONGVARCHAR,	-- optional. NULL=no specified procedure list OR 1 or more comma separated procedure names to introspect or 
													--		a bracketed correlated and comma-separated list of procedure names associated with each schema:
													--			schemaNames=	SCHEMA1,SCHEMA2	- This is the list of comma-separated schemas 
													--			procedureNames=	[P1][P2,P3,P4]	- The 1st set of bracketed procedures goes with the 1st schema.  
													--											- The 2nd bracketed set of procedures goes with the 2nd schema
													-- 		Relational Database - When NULL, all procedures are introspected, otherwise the list of procedures provided are introspected.
													-- 		CSV - leave this null as it is not applicable
													--		Excel Non-ODBC - leave this null as it is not applicable
													--		Procedure names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
													-- 		Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
													--			The invoking program is required to know the valid TYPE and SUBTYPE combinations.
	IN	separator					VARCHAR,		-- Default=,  The separator used to separate lists for the input parameters: tableNames, schemaTablePatterns, schemaProcedurePatterns and procedureNames.
													--		The separator value should not exist within the tableNames or procedureNames variable.
	IN  inDebug						CHAR(1),		-- Y=debug on, N=debug off.
	OUT errStatus 					VARCHAR,		-- SUCCESS or FAILED
	OUT errMessage 					LONGVARCHAR,	-- Error message if errStatus=FAILED, otherwise null
	OUT introspectionResult 		LONGVARCHAR,	-- A line (CHR(10)) delimited string of results.  Use introspectResourcesResultCursor() to  return a cursor.
	OUT dataSourceType				VARCHAR,		-- The type of data source that was introspected.
	OUT dataSourceSubtype			VARCHAR			-- The subtype of data source that was introspected.
)
BEGIN
	DECLARE moduleName 						VARCHAR(255) DEFAULT &apos;introspectResources&apos;;-- name of SQL Script
	DECLARE debug							CHAR(1) DEFAULT NVL(UPPER(inDebug),&apos;N&apos;);
	DECLARE debug2							CHAR(2) DEFAULT &apos;N&apos;; -- 2nd level of debug
	DECLARE debugSize						INTEGER DEFAULT 63900;
	DECLARE sep								VARCHAR DEFAULT NVL(separator,&apos;,&apos;);
	DECLARE message							LONGVARCHAR;
	DECLARE resultMessage					LONGVARCHAR;
	DECLARE taskId 							VARCHAR(3000000000);
	DECLARE totalResults 					INTEGER;
	DECLARE isCompleted 					BIT;
	DECLARE vDSAttributesXML				LONGVARCHAR		DEFAULT &apos;&apos;;
	DECLARE vSchemaAttributesXML			LONGVARCHAR		DEFAULT &apos;&apos;;
	DECLARE instrospectEntryXML				LONGVARCHAR		DEFAULT &apos;&apos;;
	DECLARE vTablesEntitiesXML				LONGVARCHAR 	DEFAULT &apos;&apos;;
	DECLARE introspectionEntry 				LONGVARCHAR;
	DECLARE schemaName						VARCHAR;
	DECLARE tableName						VARCHAR;
	DECLARE schemaTableNameList				LONGVARCHAR;
	DECLARE schemaTablePatternList			LONGVARCHAR;
	DECLARE schemaProcedureNameList			LONGVARCHAR;
	DECLARE schemaProcedurePatternList		LONGVARCHAR;
	DECLARE procedureName					VARCHAR;
	DECLARE currentPath						VARCHAR(1024);
	DECLARE previousPath					VARCHAR(1024)	DEFAULT &apos;&apos;;
	DECLARE currentSubtype					VARCHAR;
	DECLARE numSchemas						INTEGER;
	DECLARE i, j							INTEGER;
	DECLARE pos1, pos2, pos3				INTEGER;
	DECLARE object							VARCHAR(1024);
	DECLARE objectList1						LONGVARCHAR;

	-- Variables for introspection of data source
	DECLARE schemaEntryPath					VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE catalogEntryType				VARCHAR			DEFAULT &apos;&apos;;
	DECLARE catalogEntrySubtype				VARCHAR			DEFAULT &apos;&apos;;
	DECLARE schemaEntryType					VARCHAR			DEFAULT &apos;&apos;;
	DECLARE schemaEntrySubtype				VARCHAR			DEFAULT &apos;&apos;;
	DECLARE defaultTableEntryType			VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE defaultTableEntrySubtype		VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE defaultProcEntryType			VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE defaultProcEntrySubtype			VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE tableEntryPath					VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE tableEntryType					VARCHAR			DEFAULT &apos;&apos;;
	DECLARE tableEntrySubtype				VARCHAR			DEFAULT &apos;&apos;;
	DECLARE procEntryPath					VARCHAR 		DEFAULT &apos;&apos;;
	DECLARE procEntryType					VARCHAR			DEFAULT &apos;&apos;;
	DECLARE procEntrySubtype				VARCHAR			DEFAULT &apos;&apos;;
    DECLARE updateAllIntrospectedResources	BIT 			DEFAULT 0;
    DECLARE failFast						BIT 			DEFAULT 1;
    DECLARE commitOnFailure					BIT 			DEFAULT 1;
    DECLARE autoRollback					BIT 			DEFAULT 0;
    DECLARE scanForNewResourcesToAutoAdd	BIT 			DEFAULT 0;
    DECLARE runInBackgroundTransaction		BIT 			DEFAULT 0;
    DECLARE block     						BIT 			DEFAULT 1;
    DECLARE pageSize  						INTEGER 		DEFAULT 1;
    DECLARE pageStart 						INTEGER 		DEFAULT 1;
	DECLARE namespaces						VARCHAR(1024) DEFAULT &apos;xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot; xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&apos;;
	DECLARE xpath							VARCHAR(1024) DEFAULT &apos;/resource:getMostRecentIntrospectionStatusResponse/resource:status/resource:status&apos;;
	DECLARE status							VARCHAR DEFAULT null;
	DECLARE response2XML					LONGVARCHAR;

	-- Variables for applying privileges
	DECLARE dsPathExists					BOOLEAN DEFAULT false; -- false=does not exist, true=exists
	DECLARE catalogPathExists				BOOLEAN DEFAULT false; -- false=does not exist, true=exists
	DECLARE schemaPathExists				BOOLEAN DEFAULT false; -- false=does not exist, true=exists
	DECLARE targetPathExists				BOOLEAN DEFAULT false; -- false=does not exist, true=exists
	DECLARE currContainer					LONGVARCHAR;
	DECLARE prevContainer					LONGVARCHAR;
	DECLARE catalogPath						LONGVARCHAR;
	DECLARE schemaPath						LONGVARCHAR;
	DECLARE updatePrivilegesRecursively		BIT DEFAULT 1;
		-- 0=do not apply recursively.  Only apply on specified resource
		-- 1=do apply recursively to children
	DECLARE copyPrivilegeMode				VARCHAR DEFAULT &apos;SET_EXACTLY&apos;;
		-- flag indicating the mode in which to copy privileges
		-- &quot;OVERWRITE_APPEND&quot; - merges and does not update privileges for users or groups not mentioned.
		-- &quot;SET_EXACTLY&quot; - makes privileges look exactly like those provided in the call.
	DECLARE numResponses					INTEGER;
	DECLARE privlegePathReady				BOOLEAN DEFAULT false;
    DECLARE requestXML 						LONGVARCHAR;
	DECLARE dstResourceXML					LONGVARCHAR;
	DECLARE success							BIT;
	DECLARE responseXML 					XML;
	DECLARE createResponse					XML;
	DECLARE faultResponse 					XML;

	-- Exception variables
	DECLARE exResourceNotFound				EXCEPTION;
	DECLARE exNotNullParameter				EXCEPTION;
	DECLARE exIntrospectionError			EXCEPTION;
	DECLARE exCopyPrivilegeError			EXCEPTION;
	DECLARE exInvalidSubtype				EXCEPTION;

	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : INPUT:&apos;);
		CALL PRINT(moduleName||&apos; :   dsPath=[&apos;||NVL(dsPath,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   catalogName=[&apos;||NVL(catalogName,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   schemaNames=[&apos;||NVL(schemaNames,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   schemaTablePatterns=[&apos;||NVL(schemaTablePatterns,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   tableNames=[&apos;||NVL(tableNames,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   schemaProcedurePatterns=[&apos;||NVL(schemaProcedurePatterns,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   procedureNames=[&apos;||NVL(procedureNames,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   separator=[&apos;||NVL(separator,&apos;null&apos;)||&apos;]&apos;);
	END IF;

	BEGIN INDEPENDENT TRANSACTION

	IF (dsPath IS NULL) THEN
		RAISE exResourceNotFound VALUE &apos;The input variable &quot;dsPath&quot; may not be null or empty.&apos;;
	END IF;
	CALL /lib/resource/ResourceExists(dsPath, &apos;DATA_SOURCE&apos;, null, dsPathExists);
	IF (NOT dsPathExists) THEN
		RAISE exResourceNotFound VALUE &apos;Data source not found path=&apos;||dsPath;
	END IF;

	/*****************************************************
	 * STEP 1: Get the data source subtype
	 *****************************************************/
	SET dataSourceType = null;
	FOR r AS SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(dsPath, &apos;DATA_SOURCE&apos;) DO
		SET dataSourceSubtype = r.subtype;
		SET dataSourceType = r.dataSourceType;
	END FOR;
	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : DERIVED:&apos;);
		CALL PRINT(moduleName||&apos; :   dataSourceSubtype=[&apos;||NVL(dataSourceSubtype,&apos;null&apos;)||&apos;]&apos;);
		CALL PRINT(moduleName||&apos; :   dataSourceType=[&apos;||NVL(dataSourceType,&apos;null&apos;)||&apos;]&apos;);
	END IF;

	IF (dataSourceSubtype IS NULL) THEN
		RAISE exInvalidSubtype VALUE &apos;This type of data source is not supported for introspection subtype=null  dsPath=&apos;||dsPath;
	END IF;
	CASE
		WHEN dataSourceSubtype = &apos;RELATIONAL_DATA_SOURCE&apos; THEN
			SET catalogEntryType = &apos;CONTAINER&apos;;
			SET catalogEntrySubtype = &apos;CATALOG_CONTAINER&apos;;
			SET schemaEntryType = &apos;CONTAINER&apos;;
			SET schemaEntrySubtype = &apos;SCHEMA_CONTAINER&apos;;
			SET defaultTableEntryType = &apos;TABLE&apos;;
			SET defaultTableEntrySubtype = &apos;DATABASE_TABLE&apos;;
			SET defaultProcEntryType = &apos;PROCEDURE&apos;;
			SET defaultProcEntrySubtype = &apos;DATABASE_PROCEDURE&apos;;

		WHEN dataSourceSubtype = &apos;FILE_DATA_SOURCE&apos; THEN
			SET catalogEntryType = &apos;&apos;;
			SET catalogEntrySubtype = &apos;&apos;;
			SET schemaEntryType = &apos;&apos;;
			SET schemaEntrySubtype = &apos;&apos;;
			SET defaultTableEntryType = &apos;TABLE&apos;;
			SET defaultTableEntrySubtype = &apos;DELIMITED_FILE_TABLE&apos;;
			SET defaultProcEntryType = &apos;&apos;;
			SET defaultProcEntrySubtype = &apos;&apos;;

		WHEN dataSourceSubtype = &apos;POI_EXCEL_DATA_SOURCE&apos; THEN
			SET catalogEntryType = &apos;&apos;;
			SET catalogEntrySubtype = &apos;&apos;;
			SET schemaEntryType = &apos;CONTAINER&apos;;
			SET schemaEntrySubtype = &apos;DIRECTORY_CONTAINER&apos;;
			SET defaultTableEntryType = &apos;TABLE&apos;;
			SET defaultTableEntrySubtype = &apos;EXCEL_NON_ODBC_POI&apos;;
			SET defaultProcEntryType = &apos;&apos;;
			SET defaultProcEntrySubtype = &apos;&apos;;

		WHEN dataSourceSubtype = &apos;XML_FILE_DATA_SOURCE&apos; THEN
			SET catalogEntryType = &apos;&apos;;
			SET catalogEntrySubtype = &apos;&apos;;
			SET schemaEntryType = &apos;&apos;;
			SET schemaEntrySubtype = &apos;&apos;;
			SET defaultTableEntryType = &apos;TREE&apos;;
			SET defaultTableEntrySubtype = &apos;XML_FILE_TREE&apos;;
			SET defaultProcEntryType = &apos;&apos;;
			SET defaultProcEntrySubtype = &apos;&apos;;

		ELSE
			RAISE exInvalidSubtype VALUE &apos;This type of data source is not supported for introspection subtype=&apos;||dataSourceSubtype||&apos;  dsPath=&apos;||dsPath;
	END CASE;

	/*****************************************************
	 * STEP 2: Set input XML values for Introspection 
	 *****************************************************/
	SET vDSAttributesXML = 
&apos;          &lt;common:attribute&gt;
            &lt;common:name&gt;autoAddChildren&lt;/common:name&gt;
            &lt;common:type&gt;BOOLEAN&lt;/common:type&gt;
            &lt;common:value&gt;true&lt;/common:value&gt;
          &lt;/common:attribute&gt;
          &lt;common:attribute&gt;
            &lt;common:name&gt;patternSeparator&lt;/common:name&gt;
            &lt;common:type&gt;STRING&lt;/common:type&gt;
            &lt;common:value&gt;,&lt;/common:value&gt;
          &lt;/common:attribute&gt;&apos;||CHR(10);

	-- Add catalog entry if applicable
	IF (catalogName IS NOT NULL AND LENGTH(catalogName) &gt; 0) THEN
		SET schemaEntryPath = schemaEntryPath || catalogName;
		SET catalogPath = dsPath || &apos;/&apos; || schemaEntryPath;
		CALL /lib/resource/ResourceExists(catalogPath, &apos;CONTAINER&apos;, null, catalogPathExists);
		SET vTablesEntitiesXML = 
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntryPath, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(catalogEntryType, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(catalogEntrySubtype, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE&lt;/resource:action&gt;
     &lt;/resource:entry&gt;&apos;||CHR(10);
	END IF;

	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : INTROSPECT BUILD CATALOG:&apos;);
		CALL PRINT(moduleName||&apos; :   vTablesEntitiesXML:&apos;||CHR(10)||NVL(vTablesEntitiesXML,&apos;null&apos;));
	END IF;

	-- Add table and procedures entries if applicable
	/****  
		Apply the list of tables and/or procedures associated with each schema in the schemaNames list. 
		The correlation of tables to schema uses the following format:
		schemaNames=			SCHEMA1,SCHEMA2		- This is the list of comma-separated schemas 
		tableNames=				[T1,T2][T3,T4,T5]	- The 1st set of bracketed table names goes with the 1st schema.  The 2nd bracketed set of table names goes with the 2nd schema
		schemaTablePatterns=	[M%]   [P%]			- The 1st set of bracketed table patterns goes with the 1st schema.  The 2nd bracketed set of table patterns goes with the 2nd schema 
		procedureNames=			[P1][P2,P3,P4]		- The 1st set of bracketed procedure names goes with the 1st schema.  The 2nd bracketed set of procedure names goes with the 2nd schema
		schemaProcedurePatterns=[N%]   [O%]			- The 1st set of bracketed procedure patterns goes with the 1st schema.  The 2nd bracketed set of procedure patterns goes with the 2nd schema 
	****/
	-- Extract the object from the list of schemas
	IF (schemaNames IS NOT NULL AND LENGTH(schemaNames) &gt; 0) THEN
		SET objectList1 = schemaNames;
	ELSE
		-- There needs to be at least 1 object in the list in order to force processing of the tableNames list
		SET objectList1 = &apos;*****DUMMY*****&apos;;
	END IF;
	SET numSchemas = 0;
	-- Extract the object from the list of schemas
	FOR o AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(objectList1, sep, 0, 0, 0, 1, 0) DO
		SET schemaName = o.object;
		SET numSchemas = numSchemas + 1;
		SET instrospectEntryXML = &apos;&apos;;
		SET vSchemaAttributesXML = &apos;&apos;;

		-- Get the table &quot;name&quot; list associated with the extracted schema as identified by &quot;numSchemas&quot; occurrence
		SET schemaTableNameList = null;
		FOR l AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(tableNames, &apos;]&apos;, numSchemas, 0, 0, 1, 0) DO
			SET schemaTableNameList = l.object;
			-- Remove the beginning &apos;[&apos; delimiter from the list.  Then end &apos;]&apos; delimiter was removed by the extractDelimitedText
			IF (SUBSTRING(schemaTableNameList, 1, 1) = &apos;[&apos;) THEN
				SET schemaTableNameList = SUBSTRING(schemaTableNameList, 2);
			END IF;
			IF (LENGTH(TRIM(schemaTableNameList)) = 0) THEN
				SET schemaTableNameList = null;
			END IF;
		END FOR;

		-- Get the table &quot;pattern&quot; list associated with the extracted schema as identified by &quot;numSchemas&quot; occurrence
		SET schemaTablePatternList = null;
		FOR l AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(schemaTablePatterns, &apos;]&apos;, numSchemas, 0, 0, 1, 0) DO
			SET schemaTablePatternList = l.object;
			-- Remove the beginning &apos;[&apos; delimiter from the list.  Then end &apos;]&apos; delimiter was removed by the extractDelimitedText
			IF (SUBSTRING(schemaTablePatternList, 1, 1) = &apos;[&apos;) THEN
				SET schemaTablePatternList = SUBSTRING(schemaTablePatternList, 2);
			END IF;
			IF (LENGTH(TRIM(schemaTablePatternList)) = 0) THEN
				SET schemaTablePatternList = null;
			END IF;
		END FOR;

		-- Get the procedure list associated with the extracted schema as identified by &quot;numSchemas&quot; occurrence
		SET schemaProcedureNameList = null;
		FOR l AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(procedureNames, &apos;]&apos;, numSchemas, 0, 0, 1, 0) DO
			SET schemaProcedureNameList = l.object;
			-- Remove the beginning &apos;[&apos; delimiter from the list.  Then end &apos;]&apos; delimiter was removed by the extractDelimitedText
			IF (SUBSTRING(schemaProcedureNameList, 1, 1) = &apos;[&apos;) THEN
				SET schemaProcedureNameList = SUBSTRING(schemaProcedureNameList, 2);
			END IF;
			IF (LENGTH(TRIM(schemaProcedureNameList)) = 0) THEN
				SET schemaProcedureNameList = null;
			END IF;
		END FOR;

		-- Get the procedure &quot;pattern&quot; list associated with the extracted schema as identified by &quot;numSchemas&quot; occurrence
		SET schemaProcedurePatternList = null;
		FOR l AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(schemaProcedurePatterns, &apos;]&apos;, numSchemas, 0, 0, 1, 0) DO
			SET schemaProcedurePatternList = l.object;
			-- Remove the beginning &apos;[&apos; delimiter from the list.  Then end &apos;]&apos; delimiter was removed by the extractDelimitedText
			IF (SUBSTRING(schemaProcedurePatternList, 1, 1) = &apos;[&apos;) THEN
				SET schemaProcedurePatternList = SUBSTRING(schemaProcedurePatternList, 2);
			END IF;
			IF (LENGTH(TRIM(schemaProcedurePatternList)) = 0) THEN
				SET schemaProcedurePatternList = null;
			END IF;
		END FOR;

		IF (debug2 = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : INTROSPECT BUILD SCHEMA:&apos;);
			CALL PRINT(moduleName||&apos; :   numSchemas[&apos;||numSchemas||&apos;]&apos;);
			CALL PRINT(moduleName||&apos; :   schemaName[&apos;||NVL(schemaName,&apos;null&apos;)||&apos;]&apos;);
			CALL PRINT(moduleName||&apos; :   schemaTableNameList[&apos;||NVL(schemaTableNameList,&apos;null&apos;)||&apos;]&apos;);
			CALL PRINT(moduleName||&apos; :   schemaTablePatternList[&apos;||NVL(schemaTablePatternList,&apos;null&apos;)||&apos;]&apos;);
			CALL PRINT(moduleName||&apos; :   schemaProcedureNameList[&apos;||NVL(schemaProcedureNameList,&apos;null&apos;)||&apos;]&apos;);
			CALL PRINT(moduleName||&apos; :   schemaProcedurePatternList[&apos;||NVL(schemaProcedurePatternList,&apos;null&apos;)||&apos;]&apos;);
		END IF;

		-- Construct the schema entry path for each table
		SET schemaEntryPath = &apos;&apos;;
		IF (schemaName &lt;&gt; &apos;*****DUMMY*****&apos;) THEN
			IF (catalogName IS NOT NULL AND LENGTH(catalogName) &gt; 0) THEN
				SET schemaEntryPath = catalogName || &apos;/&apos;;
			END IF;
			SET schemaEntryPath = schemaEntryPath || schemaName || &apos;/&apos;;

			-- Set the schema table patterns
			IF (schemaTablePatternList IS NOT NULL) THEN
				SET vSchemaAttributesXML = vSchemaAttributesXML ||
&apos;          &lt;common:attribute&gt;
            &lt;common:name&gt;tablePatterns&lt;/common:name&gt;
            &lt;common:type&gt;STRING&lt;/common:type&gt;
            &lt;common:value&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaTablePatternList, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/common:value&gt;
          &lt;/common:attribute&gt;&apos;||CHR(10);
			END IF;
			-- Set the schema procedure patterns
			IF (schemaProcedurePatternList IS NOT NULL) THEN
				SET vSchemaAttributesXML = vSchemaAttributesXML ||
&apos;          &lt;common:attribute&gt;
            &lt;common:name&gt;procedurePatterns&lt;/common:name&gt;
            &lt;common:type&gt;STRING&lt;/common:type&gt;
            &lt;common:value&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaProcedurePatternList, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/common:value&gt;
          &lt;/common:attribute&gt;&apos;||CHR(10);
			END IF;

			-- Determine the &quot;action&quot; to take based on whether there are any table names, procedure names or schema attributes present
			IF (schemaTableNameList IS NOT NULL OR schemaProcedureNameList IS NOT NULL) THEN
				SET instrospectEntryXML = instrospectEntryXML ||
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntryPath, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntryType, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntrySubtype, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE&lt;/resource:action&gt;&apos;||CHR(10);
			ELSE
				SET instrospectEntryXML = instrospectEntryXML ||
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntryPath, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntryType, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(schemaEntrySubtype, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE_RECURSIVELY&lt;/resource:action&gt;&apos;||CHR(10);
			END IF;
			-- Add the Schema Attributes into the Table Entity XML
			SET instrospectEntryXML = instrospectEntryXML || vSchemaAttributesXML;

			SET instrospectEntryXML = instrospectEntryXML ||
&apos;     &lt;/resource:entry&gt;&apos;||CHR(10);
		END IF;

		/***** ADD TABLES *****/
		-- Add the list of tables for the extracted schema
		FOR t AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(schemaTableNameList, sep, 0, 0, 0, 0, 0) DO
			SET tableName = t.object;

			-- Set the table entry type
			SET tableEntryType = defaultTableEntryType;
			SET tableEntrySubtype = defaultTableEntrySubtype;
			-- Extract the table name, type and subtype if applicable from the format: table(TYPE:SUBTYPE)
			SET pos1 = INSTR(tableName, &apos;(&apos;);
			IF (pos1 &gt; 0) THEN
				SET pos2 = INSTR(tableName, &apos;:&apos;, pos1);
				SET pos3 = INSTR(tableName, &apos;)&apos;, pos1);
				IF (pos2 &gt; 0 AND pos3 &gt; 0) THEN
					SET tableEntryType = SUBSTRING(tableName, pos1+1, pos2-pos1-1);
					SET tableEntrySubtype = SUBSTRING(tableName, pos2+1, pos3-pos2-1);
					SET tableName = SUBSTRING(tableName, 1, pos1-1);
				END IF;
			END IF;
			-- Construct the table name path
			SET tableEntryPath = schemaEntryPath || tableName;
			-- Set up the table entry XML
			SET instrospectEntryXML = instrospectEntryXML ||
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(tableEntryPath, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(tableEntryType, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(tableEntrySubtype, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE&lt;/resource:action&gt;
     &lt;/resource:entry&gt;&apos;||CHR(10);
		END FOR;

		/***** ADD PROCEDURES *****/
		-- Add the list of procedures for the extracted schema
		FOR o AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(schemaProcedureNameList, sep, 0, 0, 0, 0, 0) DO
			SET procedureName = o.object;

			-- Set the procedure entry type
			SET procEntryType = defaultProcEntryType;
			SET procEntrySubtype = defaultProcEntrySubtype;
			-- Extract the procedure name, type and subtype if applicable from the format: procedure(TYPE:SUBTYPE)
			SET pos1 = INSTR(procedureName, &apos;(&apos;);
			IF (pos1 &gt; 0) THEN
				SET pos2 = INSTR(procedureName, &apos;:&apos;, pos1);
				SET pos3 = INSTR(procedureName, &apos;)&apos;, pos1);
				IF (pos2 &gt; 0 AND pos3 &gt; 0) THEN
					SET procEntryType = SUBSTRING(procedureName, pos1+1, pos2-pos1-1);
					SET procEntrySubtype = SUBSTRING(procedureName, pos2+1, pos3-pos2-1);
					SET procedureName = SUBSTRING(procedureName, 1, pos1-1);
				END IF;
			END IF;
			-- Construct the table name path
			IF (LENGTH(schemaEntryPath) &gt; 0) THEN
				SET procEntryPath = schemaEntryPath || procedureName;
			ELSE
				SET procEntryPath = procedureName;
			END IF;
			SET instrospectEntryXML = instrospectEntryXML ||
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(procEntryPath, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(procEntryType, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(procEntrySubtype, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE&lt;/resource:action&gt;
     &lt;/resource:entry&gt;&apos;||CHR(10);
		END FOR;

		IF (debug2 = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : INTROSPECT BUILD SCHEMA ENTRY:&apos;);
			CALL PRINT(moduleName||&apos; :   instrospectEntryXML:&apos;||CHR(10)||NVL(instrospectEntryXML,&apos;null&apos;));
		END IF;

		-- Add the Introspect Entry into the Introspect Entities XML
		SET vTablesEntitiesXML = vTablesEntitiesXML || instrospectEntryXML;
	END FOR;

	-- If there are no table entries then use the default to introspect the data source with ADD_OR_UPDATE_RECURSIVELY
	IF (vTablesEntitiesXML IS NULL OR LENGTH(vTablesEntitiesXML) = 0) THEN
		SET vTablesEntitiesXML = vTablesEntitiesXML ||
&apos;     &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&lt;/resource:path&gt;
          &lt;resource:type&gt;DATA_SOURCE&lt;/resource:type&gt;
          &lt;resource:subtype&gt;NONE&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;ADD_OR_UPDATE_RECURSIVELY&lt;/resource:action&gt;
     &lt;/resource:entry&gt;&apos;||CHR(10);
	END IF;

	/*****************************************************
	 * STEP 3: Start the introspection task transaction
	 *****************************************************/
    SET requestXML = 
&apos;&lt;resource:introspectResourcesTask xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos; || dsPath || &apos;&lt;/resource:path&gt;
  &lt;resource:plan&gt;&apos;||CHR(10);

    IF (updateAllIntrospectedResources IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:updateAllIntrospectedResources&gt;&apos; || updateAllIntrospectedResources || &apos;&lt;/resource:updateAllIntrospectedResources&gt;&apos;||CHR(10);
    END IF;

    IF (failFast IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:failFast&gt;&apos; || failFast || &apos;&lt;/resource:failFast&gt;&apos;||CHR(10);
    END IF;

    IF (commitOnFailure IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:commitOnFailure&gt;&apos; || commitOnFailure || &apos;&lt;/resource:commitOnFailure&gt;&apos;||CHR(10);
    END IF;

    IF (autoRollback IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:autoRollback&gt;&apos; || autoRollback || &apos;&lt;/resource:autoRollback&gt;&apos;||CHR(10);
    END IF;

    IF (scanForNewResourcesToAutoAdd IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:scanForNewResourcesToAutoAdd&gt;&apos; || scanForNewResourcesToAutoAdd || &apos;&lt;/resource:scanForNewResourcesToAutoAdd&gt;&apos;||CHR(10);
    END IF;

    SET requestXML = requestXML ||
&apos;    &lt;resource:entries&gt;&apos;||CHR(10);

	-- Add the table entries XML
	IF (vTablesEntitiesXML IS NOT NULL AND LENGTH(vTablesEntitiesXML) &gt; 0) THEN
        SET requestXML = requestXML ||
			vTablesEntitiesXML;
	END IF;

    SET requestXML = requestXML ||
&apos;    &lt;/resource:entries&gt;
  &lt;/resource:plan&gt;
  &lt;resource:runInBackgroundTransaction&gt;&apos; || runInBackgroundTransaction || &apos;&lt;/resource:runInBackgroundTransaction&gt;&apos;||CHR(10);

	-- Add the datasource attributes XML
    IF (vDSAttributesXML IS NOT NULL AND LENGTH(vDSAttributesXML) &gt; 0) THEN
        SET requestXML = requestXML ||
&apos;  &lt;resource:attributes&gt;&apos;||CHR(10)||
		vDSAttributesXML ||
&apos;  &lt;/resource:attributes&gt;&apos;||CHR(10);
    END IF;

    SET requestXML = requestXML ||
&apos;&lt;/resource:introspectResourcesTask&gt;&apos;;

	IF (debug IS NOT NULL AND UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : INTROSPECT REQUEST:  requestXML=&apos;);
    	CALL PRINT(SUBSTRING(requestXML, 1, debugSize));
		CALL PRINT(&apos;&apos;);
	END IF;

    SELECT
        taskId,
        totalResults,
        completed
    INTO
        taskId,
        totalResults,
        isCompleted
    FROM
        /shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesTaskXSLT(requestXML); 

	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : INTROSPECT REQUEST: Waiting on introspection report for tables with task ID=&apos; || taskId||
			&apos;  totalResults=&apos;||NVL(CAST(totalResults AS VARCHAR),&apos;null&apos;)||&apos;  isCompleted=&apos;||NVL(CAST(isCompleted AS VARCHAR),&apos;null&apos;));
		CALL PRINT(&apos;---------------------------------------------------------------------------------------------------&apos;);
	END IF;

	/*****************************************************
	 * STEP 4: Complete the introspection task transaction
	 *****************************************************/
	SET introspectionResult = &apos;&apos;;
	SET introspectionEntry = &apos;&apos;;
	SET resultMessage = &apos;&apos;;
	SET numResponses = 0;
	SET dstResourceXML = &apos;&apos;;
	SET privlegePathReady = false;
	SET currContainer = null;
	SET prevContainer = null;
	SET i = 0;
	-- Validation
    IF (taskId IS NULL) THEN
        RAISE System.IllegalArgumentException VALUE moduleName || &apos;: The input &quot;taskId&quot; may not be NULL.&apos;;
    END IF;
    IF (block IS NULL) THEN
        RAISE System.IllegalArgumentException VALUE moduleName || &apos;: The input &quot;block&quot; may not be NULL.&apos;;
    END IF;
    IF (pageSize IS NOT NULL AND pageSize &lt; 1) THEN
        RAISE System.IllegalArgumentException VALUE moduleName || &apos;: The input &quot;pageSize&quot; must be positive.&apos;;
    END IF;
    IF (pageStart IS NOT NULL AND pageStart &lt; 1) THEN
        RAISE System.IllegalArgumentException VALUE moduleName || &apos;: The input &quot;pageStart&quot; must be positive.&apos;;
    END IF;

    SET requestXML = 
&apos;&lt;resource:introspectResourcesResult xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;common:taskId&gt;&apos; || CAST(XMLTEXT(taskId) AS LONGVARCHAR) || &apos;&lt;/common:taskId&gt;
  &lt;common:block&gt;&apos; || CAST(block AS VARCHAR) || &apos;&lt;/common:block&gt;
  &lt;common:page&gt;
    &lt;common:size&gt;&apos; || CAST(pageSize AS VARCHAR) || &apos;&lt;/common:size&gt;
    &lt;common:start&gt;&apos; || CAST(pageStart AS VARCHAR) || &apos;&lt;/common:start&gt;
  &lt;/common:page&gt;
  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
&lt;/resource:introspectResourcesResult&gt;&apos;;
	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : introspectResourcesResult:  requestXML=&apos;||CHR(10)||SUBSTRING(NVL(CAST(requestXML AS LONGVARCHAR),&apos;NULL&apos;),1,debugSize));
	END IF;

	CALL /services/webservices/system/admin/resource/operations/introspectResourcesResult(requestXML, responseXML, faultResponse);
	IF (faultResponse IS NOT NULL) THEN
		RAISE exIntrospectionError VALUE CAST(faultResponse AS LONGVARCHAR);
	END IF;
	IF (debug2 = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : introspectResourcesResult responseXML=&apos;||CHR(10)||SUBSTRING(NVL(CAST(responseXML AS LONGVARCHAR),&apos;NULL&apos;),1,debugSize));
	END IF;

	SET i = 0;
	WHILE (status IS NULL OR LENGTH(TRIM(status)) = 0) DO
		SET i = i + 1;
		call /services/webservices/system/admin/resource/operations/getMostRecentIntrospectionStatus(
         &apos;&lt;resource:getMostRecentIntrospectionStatus xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
           &lt;resource:path&gt;&apos;||dsPath||&apos;&lt;/resource:path&gt;
           &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;
         &lt;/resource:getMostRecentIntrospectionStatus&gt;&apos;, responseXML, faultResponse);
		-- DO NOT CHANGE THIS LINE.  IT FORCES CIS TO COMPLETE THE RESULTS.
		SET response2XML = CAST(responseXML AS LONGVARCHAR);
		CALL /shared/ASAssets/Utilities/&quot;xml&quot;/getValueFromXML(&apos;N&apos;, namespaces, xpath, response2XML, status);
		IF (debug2 = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : status=&apos;||NVL(status,&apos;NULL&apos;)||&apos;  getMostRecentIntrospectionStatus responseXML=&apos;||CHR(10)||SUBSTRING(NVL(response2XML,&apos;NULL&apos;),1,debugSize));
			CALL PRINT(moduleName||&apos; : status=&apos;||NVL(status,&apos;NULL&apos;));
		END IF;
	END WHILE;
	IF (debug2 = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : Number of getMostRecentIntrospectionStatus() loop executions=&apos;||CAST(i AS VARCHAR));
	END IF;

	-- Return a sorted list of results with no null records present
	FOR r AS
        SELECT * FROM /shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesResultXSLT(response2XML)
			WHERE &quot;path&quot; IS NOT NULL OR &quot;type&quot; IS NOT NULL OR subtype IS NOT NULL OR &quot;action&quot; IS NOT NULL
			ORDER BY LOWER(&quot;path&quot;)
	DO
		SET errStatus = NVL(r.status, &apos;SUCCESS&apos;);
		SET currentPath = r.&quot;path&quot;;
		SET currentSubtype = r.subtype;
		-- Capture the current container so that it can be compared with the previous container
		IF (r.&quot;type&quot; = &apos;CONTAINER&apos;) THEN
			SET currContainer = currentPath;
			IF (prevContainer IS NOT NULL AND INSTR(currContainer||&apos;/&apos;, prevContainer||&apos;/&apos;) = 0) THEN
				-- When the container path lineage changes, then reset the privileges path ready so this new path can be registered
				--		as a destination for copying privileges.
				SET privlegePathReady = false;
			END IF;
		END IF;

		IF (r.&quot;type&quot; IS NOT NULL AND r.&quot;type&quot; = &apos;DATA_SOURCE&apos; AND currentSubtype IS NOT NULL AND currentSubtype = &apos;NONE&apos;) THEN 
			SET currentSubtype = dataSourceSubtype;
		END IF;
		IF (debug2 = &apos;Y&apos;) THEN
			call print(&apos;previousPath=&apos;||NVL(previousPath,&apos;null&apos;)||&apos;  current type=&apos;||NVL(r.&quot;type&quot;,&apos;null&apos;)||&apos;  currentPath=&apos;||NVL(currentPath,&apos;null&apos;));
		END IF;

		-- Capture the unique row under these circumstances.
		--		Note: A row as designated by the &quot;path&quot;, &quot;type&quot; and subtype may have multiple rows dues to any number of message records.
		--			  The message records are consolidated into a single message entry delineated by info:[&lt;message&gt;].
		IF ( (currentPath IS NULL AND previousPath IS NOT NULL) OR
			 (currentPath IS NOT NULL AND previousPath IS NULL) OR 
			 (currentPath IS NOT NULL AND currentPath &lt;&gt; previousPath) ) THEN
			-- Check the previous introspection entry and replace the message before initializing the message.
			IF (INSTR(introspectionEntry, &apos;message=&lt;replace message&gt;&apos;) &gt; 0) THEN
				SET introspectionEntry = REPLACE(introspectionEntry, &apos;message=&lt;replace message&gt;&apos;, &apos;message=&apos;||NVL(resultMessage,&apos;null&apos;));
				SET introspectionResult = introspectionResult || introspectionEntry;
			END IF;
			IF (debug = &apos;Y&apos; AND LENGTH(TRIM(introspectionEntry)) &gt; 0) THEN
				CALL PRINT(moduleName||&apos; : resultMessage=&apos;||SUBSTRING(TRIM(NVL(resultMessage,&apos;  &apos;)),1,debugSize));
				CALL PRINT(moduleName||&apos; : &apos;||SUBSTRING(TRIM(NVL(introspectionEntry,&apos;  &apos;)),1,debugSize));
			END IF;
			-- Initialize the result message
			SET resultMessage = &apos;&apos;;
			IF (r.message IS NOT NULL) THEN
				SET resultMessage = &apos;info:[&apos;||r.message||&apos;] &apos;;
			END IF;
			SET i = i + 1;
			SET introspectionEntry =  
                &apos;introspection entry=&apos;||i||&apos;  path=&apos;||NVL(currentPath,&apos;NULL&apos;)||&apos;,
                 status=&apos;||NVL(CAST(r.status AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 introspectorVersion=&apos;||NVL(CAST(r.introspectorVersion AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 startTime=&apos;||NVL(CAST(r.startTime AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 endTime=&apos;||NVL(CAST(r.endTime AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 addedCount=&apos;||NVL(CAST(r.addedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 removedCount=&apos;||NVL(CAST(r.removedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 updatedCount=&apos;||NVL(CAST(r.updatedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 skippedCount=&apos;||NVL(CAST(r.skippedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 totalCompletedCount=&apos;||NVL(CAST(r.totalCompletedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 toBeAddedCount=&apos;||NVL(CAST(r.toBeAddedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 toBeRemovedCount=&apos;||NVL(CAST(r.toBeRemovedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 toBeUpdatedCount=&apos;||NVL(CAST(r.toBeUpdatedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 totalToBeCompletedCount=&apos;||NVL(CAST(r.totalToBeCompletedCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 warningCount=&apos;||NVL(CAST(r.warningCount AS VARCHAR),&apos;NULL&apos;)||&apos;,
                 errorCount=&apos;||NVL(CAST(r.errorCount AS VARCHAR),&apos;NULL&apos;)||&apos;
                 &quot;path&quot;=&apos;||NVL(CAST(r.&quot;path&quot; AS VARCHAR),&apos;NULL&apos;)||&apos;
                 &quot;type&quot;=&apos;||NVL(CAST(r.&quot;type&quot; AS VARCHAR),&apos;NULL&apos;)||&apos;
                 subtype=&apos;||NVL(CAST(currentSubtype AS VARCHAR),&apos;NULL&apos;)||&apos;
                 &quot;action&quot;=&apos;||NVL(CAST(r.&quot;action&quot; AS VARCHAR),&apos;NULL&apos;)||&apos;
                 durationMs=&apos;||NVL(CAST(r.durationMs AS VARCHAR),&apos;NULL&apos;)||&apos;
                 entryStatus=&apos;||NVL(CAST(r.entryStatus AS VARCHAR),&apos;NULL&apos;)||&apos;
                 code=&apos;||NVL(CAST(r.code AS VARCHAR),&apos;NULL&apos;)||&apos;
                 name=&apos;||NVL(CAST(r.name AS VARCHAR),&apos;NULL&apos;)||&apos;
                 message=&lt;replace message&gt;
                 detail=&apos;||NVL(CAST(r.detail AS VARCHAR),&apos;NULL&apos;)||&apos;
                 severity=&apos;||NVL(CAST(r.severity AS VARCHAR),&apos;NULL&apos;)|| CHR(10);

			-- Setup the copy privilege XML destination path
			IF (r.&quot;action&quot; = &apos;ADD&apos; AND NOT privlegePathReady) THEN
				IF (r.&quot;type&quot; = &apos;CONTAINER&apos;) THEN
					-- Since privileges will be applied recursively to children, it is only necessary to capture the container path.
					SET privlegePathReady = true;
				END IF;
				-- Add the resource to the destination XML
				SET numResponses = numResponses + 1;
				SET dstResourceXML = dstResourceXML || 
					&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
					&apos;        &lt;resource:path&gt;&apos; || CAST(XMLTEXT(dsPath || &apos;/&apos; || r.&quot;path&quot;) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
					&apos;        &lt;resource:type&gt;&apos; || CAST(XMLTEXT(r.&quot;type&quot;) AS VARCHAR) || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
					&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10);
			END IF;

			-- Check for an error
			IF (r.entryStatus is not null and r.entryStatus = &apos;ERROR&apos;) THEN
				RAISE exIntrospectionError VALUE &apos;INTROSPECTION ERROR DETECTED.  ERROR=&apos;||TRIM(NVL2(r.message,r.message,&apos; &apos;))||&apos;  DETAIL=&apos;||TRIM(NVL2(r.detail,r.detail,&apos; &apos;));
			END IF;
		ELSE
			IF (r.message IS NOT NULL) THEN
				SET resultMessage = resultMessage || &apos;info:[&apos;||r.message||&apos;] &apos;;
			END IF;
		END IF;

		SET previousPath = currentPath;
		SET prevContainer = currContainer;
	END FOR;

	-- Modify the final introspection entry
	IF (INSTR(introspectionEntry, &apos;message=&lt;replace message&gt;&apos;) &gt; 0) THEN
		SET introspectionEntry = REPLACE(introspectionEntry, &apos;message=&lt;replace message&gt;&apos;, &apos;message=&apos;||NVL(resultMessage,&apos;null&apos;));
		SET introspectionResult = introspectionResult || introspectionEntry;
	END IF;
	IF (debug = &apos;Y&apos; AND LENGTH(TRIM(introspectionEntry)) &gt; 0) THEN
		CALL PRINT(moduleName||&apos; : resultMessage=&apos;||SUBSTRING(TRIM(NVL(resultMessage,&apos;  &apos;)),1,debugSize));
		CALL PRINT(moduleName||&apos; : &apos;||SUBSTRING(TRIM(NVL(introspectionEntry,&apos;  &apos;)),1,debugSize));
		CALL PRINT(&apos;---------------------------------------------------------------------------------------------------&apos;);
	END IF;
	SET introspectionResult = &apos;Total Entries=&apos;||i||CHR(10)||introspectionResult;

	END;

	/*****************************************************
	 * STEP 5: Copy Privileges to the introspected resources
	 *****************************************************/
	BEGIN INDEPENDENT TRANSACTION
		IF (numResponses &gt; 0) THEN
			-- Create the web service input request for copyResourcePrivileges
			SET requestXML = 
			&apos;&lt;resource:copyResourcePrivileges xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&gt;&apos;||CHR(10)||
			&apos;  &lt;resource:updateRecursively&gt;&apos; || CAST(XMLTEXT(updatePrivilegesRecursively) AS VARCHAR) || &apos;&lt;/resource:updateRecursively&gt;&apos;||CHR(10)||
			&apos;  &lt;resource:copyPrivilegeEntries&gt;&apos;||CHR(10)||
			&apos;    &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
			&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
			&apos;        &lt;resource:path&gt;&apos; || CAST(XMLTEXT(dsPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
			&apos;        &lt;resource:type&gt;DATA_SOURCE&lt;/resource:type&gt;&apos;||CHR(10)||
			&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
			 dstResourceXML || 
			&apos;    &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
			&apos;  &lt;/resource:copyPrivilegeEntries&gt;&apos;||CHR(10)||
			&apos;  &lt;resource:mode&gt;&apos; || CAST(XMLTEXT(copyPrivilegeMode) AS VARCHAR) || &apos;&lt;/resource:mode&gt;&apos;||CHR(10)||
			&apos;&lt;/resource:copyResourcePrivileges&gt;&apos;;

			IF (debug = &apos;Y&apos;) THEN
				CALL PRINT(&apos;&apos;);
				CALL PRINT(moduleName||&apos; : Copy Privileges requestXML=&apos;||CHR(10)||SUBSTRING(requestXML,1,debugSize));
				CALL PRINT(&apos;&apos;);
			END IF;

			-- Invoke copyResourcePrivileges
			CALL /services/webservices/system/admin/resource/operations/copyResourcePrivileges(requestXML, createResponse, faultResponse);
			IF (faultResponse IS NOT NULL) THEN
				RAISE exCopyPrivilegeError VALUE CAST(faultResponse as LONGVARCHAR);
			END IF;	
		ELSE
			IF (debug = &apos;Y&apos;) THEN
				CALL PRINT(moduleName||&apos; : No destination privileges to set.&apos;);
			END IF;
		END IF;
	END;

	SET errMessage = NULL;
	IF (debug = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : Successfully completed introspection.&apos;);
		CALL PRINT(&apos;&apos;);
	END IF;

EXCEPTION
	WHEN exResourceNotFound THEN
		SET errMessage = CURRENT_EXCEPTION.MESSAGE;
		IF (debug = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : errMessage=&apos;||SUBSTRING(TRIM(NVL(errMessage,&apos;  &apos;)),1,debugSize));
		END IF;
		SET errStatus = &apos;FAILED&apos;;
	WHEN exNotNullParameter THEN
		SET errMessage = CURRENT_EXCEPTION.MESSAGE;
		IF (debug = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : errMessage=&apos;||SUBSTRING(TRIM(NVL(errMessage,&apos;  &apos;)),1,debugSize));
		END IF;
		SET errStatus = &apos;FAILED&apos;;
	WHEN exIntrospectionError THEN
		SET errMessage = CURRENT_EXCEPTION.MESSAGE;
		IF (debug = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : errMessage=&apos;||SUBSTRING(TRIM(NVL(errMessage,&apos;  &apos;)),1,debugSize));
		END IF;
		SET errStatus = &apos;FAILED&apos;;
	ELSE
		SET errMessage = CURRENT_EXCEPTION.TRACE;
		IF (debug = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : errMessage=&apos;||SUBSTRING(TRIM(NVL(errMessage,&apos;  &apos;)),1,debugSize));
		END IF;
		SET errStatus = &apos;FAILED&apos;;
END</attribute>
  <attribute name="creationDate" type="LONG">1398383331017</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap</attribute>
  <attribute name="creatorUserName" type="STRING">nbklsvb</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1573158258422</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/697</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/929</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/947</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/946</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/927</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/741</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/928</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/899</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/898</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/783</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/939</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/779</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/778</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/616</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/617</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/972</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/809</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/824</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/825</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/897</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/698</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/696</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/291</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/290</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/966</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/294</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/293</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/292</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/483</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/485</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/484</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/487</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/960</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/486</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/489</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/488</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/318</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/317</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/713</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/316</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/755</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/715</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/738</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/288</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/735</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/287</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/286</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/402</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/401</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/732</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/763</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/289</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/954</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>