<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="introspectResourcesResultCursor" path="/shared/ASAssets/Utilities/repository/introspectResourcesResultCursor" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>introspectResourcesResultCursor:

	This script is used to extract the introspection result text into a cursor of results.
	The input to this procedure is the output variable [introspectionResult LONGVARCHAR] 
	from the procedure introspectResources.

	Input:
		IN  introspectionResult 		LONGVARCHAR,	-- The output from the procedure introspectResources
		IN  inDebug						CHAR(1),		-- Y=debug on, N=debug off, null=N

	Output:
		IntrospectResultType CURSOR (
			status                  VARCHAR(32768),
			introspectorVersion     INTEGER,
			startTime               TIMESTAMP,
			endTime                 TIMESTAMP,
			addedCount              INTEGER,
			removedCount            INTEGER,
			updatedCount            INTEGER,
			skippedCount            INTEGER,
			totalCompletedCount     INTEGER,
			toBeAddedCount          INTEGER,
			toBeRemovedCount        INTEGER,
			toBeUpdatedCount        INTEGER,
			totalToBeCompletedCount INTEGER,
			warningCount            INTEGER,
			errorCount              INTEGER,
			&quot;path&quot;                  VARCHAR(4096),
			&quot;type&quot;                  VARCHAR(40),
			subtype                 VARCHAR(40),
			&quot;action&quot;                VARCHAR(32768),
			durationMs              INTEGER,
			entryStatus             VARCHAR(32768),
			code                    VARCHAR(32768),
			name                    VARCHAR(32768),
			message                 LONGVARCHAR	,
			detail                  VARCHAR(32768),
			severity                VARCHAR(32768),
		)

	The value of introspectionResult is extracted from the a line delimited string:
		introspection entry=2  path=tutorial/categories,
                 status=SUCCESS,
                 introspectorVersion=2,
                 startTime=2018-01-13 09:29:56.841,
                 endTime=2018-01-13 09:29:56.966,
                 addedCount=1,
                 removedCount=0,
                 updatedCount=0,
                 skippedCount=2,
                 totalCompletedCount=3,
                 toBeAddedCount=1,
                 toBeRemovedCount=0,
                 toBeUpdatedCount=2,
                 totalToBeCompletedCount=3,
                 warningCount=0,
                 errorCount=0
                 &quot;path&quot;=tutorial/categories
                 &quot;type&quot;=TABLE
                 subtype=DATABASE_TABLE
                 &quot;action&quot;=ADD
                 durationMs=46
                 entryStatus=INFO
                 code=NULL
                 name=NULL
                 message=info:[Created resource.]  info:[=Updated table type from &apos;UNKNOWN to TABLE]  info:[=Added column #0 &apos;categoryid&apos; Type=INTEGER NOT NULL]  info:[=Added column #1 &apos;categoryname&apos; Type=VARCHAR(50) NULLABLE]  info:[=Added index &apos;categories_pkey&apos;: Unique=true Type=PRIMARY_KEY Column=categoryid at position 1 Sort=ASCENDING IndexSchema=tutorial]
                 detail=NULL
                 severity=INFO

 	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2018.100	01/10/2018		Mike Tinius			7.0.5			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="introspectionResult" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="IntrospectResultType" type="TABLE" refId="1">
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="introspectorVersion">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="startTime">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="endTime">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="addedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="removedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="updatedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="skippedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="totalCompletedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="toBeAddedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="toBeRemovedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="toBeUpdatedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="totalToBeCompletedCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="warningCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="errorCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="path">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="type">
          <datatype name="VARCHAR" type="STRING" maxLength="40"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="40"/>
        </element>
        <element name="action">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="durationMs">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="entryStatus">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="code">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="message">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="detail">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="severity">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
	introspectResourcesResultCursor:

	This script is used to extract the introspection result text into a cursor of results.
	The input to this procedure is the output variable [introspectionResult LONGVARCHAR] 
	from the procedure introspectResources.

	Input:
		IN  introspectionResult 		LONGVARCHAR,	-- The output from the procedure introspectResources
		IN  inDebug						CHAR(1),		-- Y=debug on, N=debug off, null=N

	Output:
		IntrospectResultType CURSOR (
			status                  VARCHAR(32768),
			introspectorVersion     INTEGER,
			startTime               TIMESTAMP,
			endTime                 TIMESTAMP,
			addedCount              INTEGER,
			removedCount            INTEGER,
			updatedCount            INTEGER,
			skippedCount            INTEGER,
			totalCompletedCount     INTEGER,
			toBeAddedCount          INTEGER,
			toBeRemovedCount        INTEGER,
			toBeUpdatedCount        INTEGER,
			totalToBeCompletedCount INTEGER,
			warningCount            INTEGER,
			errorCount              INTEGER,
			&quot;path&quot;                  VARCHAR(4096),
			&quot;type&quot;                  VARCHAR(40),
			subtype                 VARCHAR(40),
			&quot;action&quot;                VARCHAR(32768),
			durationMs              INTEGER,
			entryStatus             VARCHAR(32768),
			code                    VARCHAR(32768),
			name                    VARCHAR(32768),
			message                 LONGVARCHAR	,
			detail                  VARCHAR(32768),
			severity                VARCHAR(32768),
		)

	The value of introspectionResult is extracted from the a line delimited string:
		introspection entry=2  path=tutorial/categories,
                 status=SUCCESS,
                 introspectorVersion=2,
                 startTime=2018-01-13 09:29:56.841,
                 endTime=2018-01-13 09:29:56.966,
                 addedCount=1,
                 removedCount=0,
                 updatedCount=0,
                 skippedCount=2,
                 totalCompletedCount=3,
                 toBeAddedCount=1,
                 toBeRemovedCount=0,
                 toBeUpdatedCount=2,
                 totalToBeCompletedCount=3,
                 warningCount=0,
                 errorCount=0
                 &quot;path&quot;=tutorial/categories
                 &quot;type&quot;=TABLE
                 subtype=DATABASE_TABLE
                 &quot;action&quot;=ADD
                 durationMs=46
                 entryStatus=INFO
                 code=NULL
                 name=NULL
                 message=info:[Created resource.]  info:[=Updated table type from &apos;UNKNOWN to TABLE]  info:[=Added column #0 &apos;categoryid&apos; Type=INTEGER NOT NULL]  info:[=Added column #1 &apos;categoryname&apos; Type=VARCHAR(50) NULLABLE]  info:[=Added index &apos;categories_pkey&apos;: Unique=true Type=PRIMARY_KEY Column=categoryid at position 1 Sort=ASCENDING IndexSchema=tutorial]
                 detail=NULL
                 severity=INFO

 	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2018.100	01/10/2018		Mike Tinius			7.0.5			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE introspectResourcesResultCursor(
	IN  introspectionResult 		LONGVARCHAR,
	OUT result						PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.IntrospectResultType
)
BEGIN
	DECLARE moduleName				VARCHAR DEFAULT &apos;introspectResourcesResultCursor&apos;;
	DECLARE sep						VARCHAR DEFAULT CHR(10); -- linefeed separator
	DECLARE pos						INTEGER;
	DECLARE object					LONGVARCHAR;
	DECLARE name					LONGVARCHAR;
	DECLARE val						LONGVARCHAR;
	DECLARE numEntries				INTEGER DEFAULT 0;
	DECLARE rec						/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.IntrospectResultType;

	-- Add table entries if applicable
	IF (introspectionResult IS NOT NULL AND LENGTH(introspectionResult) &gt; 0) THEN
		-- Extract the object from the list of schemas
		FOR o AS SELECT * FROM /shared/ASAssets/Utilities/string/extractDelimitedText(introspectionResult, sep, 0, 0, 0, 1, 0) DO
			SET object = o.object;
			SET name = null;
			-- This marks the beginning of a new entry
			IF (INSTR(object, &apos;introspection entry&apos;) &gt; 0) THEN
				-- Insert a record if the entry is complete
				IF (numEntries &gt; 0) THEN
					INSERT INTO result VALUES (rec);
				END IF;
				-- Initialize the record for the next entry
				SET rec = null;
				SET numEntries = numEntries + 1;
			ELSE
				-- Extract the name/value pairs based on first = sign found
				SET pos = INSTR(object,&apos;=&apos;);
				IF (pos &gt; 0) THEN
					SET name = SUBSTRING(object, 1, pos-1);
					-- Remove the comma on the end of the line if exists
					IF (SUBSTRING(object,LENGTH(object),1) = &apos;,&apos;) THEN
						SET val = SUBSTRING(object,pos+1,LENGTH(object)-pos-1);
					ELSE
						SET val = SUBSTRING(object, pos+1);
					END IF;
					-- Test the object for the value of &quot;NULL&quot; and set to null if true
					IF (UPPER(val) = &apos;NULL&apos;) THEN
						SET val = null;
					END IF;
				END IF;
			END IF;
			-- If the name is not null then assign the value to the corresponding name in the record entry.
			IF (name IS NOT NULL) THEN
				CASE 
					WHEN lower(name) = lower(&apos;status&apos;) THEN SET rec.status = val;
					WHEN lower(name) = lower(&apos;introspectorVersion&apos;) THEN SET rec.introspectorVersion = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;startTime&apos;) THEN SET rec.startTime = CAST(val AS TIMESTAMP);
					WHEN lower(name) = lower(&apos;endTime&apos;) THEN SET rec.endTime = CAST(val AS TIMESTAMP);
					WHEN lower(name) = lower(&apos;addedCount&apos;) THEN SET rec.addedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;removedCount&apos;) THEN SET rec.removedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;updatedCount&apos;) THEN SET rec.updatedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;skippedCount&apos;) THEN SET rec.skippedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;totalCompletedCount&apos;) THEN SET rec.totalCompletedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;toBeAddedCount&apos;) THEN SET rec.toBeAddedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;toBeRemovedCount&apos;) THEN SET rec.toBeRemovedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;toBeUpdatedCount&apos;) THEN SET rec.toBeUpdatedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;totalToBeCompletedCount&apos;) THEN SET rec.totalToBeCompletedCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;warningCount&apos;) THEN SET rec.warningCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;errorCount&apos;) THEN SET rec.errorCount = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;&quot;path&quot;&apos;) THEN SET rec.&quot;path&quot; = val;
					WHEN lower(name) = lower(&apos;&quot;type&quot;&apos;) THEN SET rec.&quot;type&quot; = val;
					WHEN lower(name) = lower(&apos;subtype&apos;) THEN SET rec.subtype = val;
					WHEN lower(name) = lower(&apos;&quot;action&quot;&apos;) THEN SET rec.&quot;action&quot; = val;
					WHEN lower(name) = lower(&apos;durationMs&apos;) THEN SET rec.durationMs = CAST(val AS INTEGER);
					WHEN lower(name) = lower(&apos;entryStatus&apos;) THEN SET rec.entryStatus = val;
					WHEN lower(name) = lower(&apos;code&apos;) THEN SET rec.code = val;
					WHEN lower(name) = lower(&apos;name&apos;) THEN SET rec.name = val;
					WHEN lower(name) = lower(&apos;message&apos;) THEN SET rec.message = val;
					WHEN lower(name) = lower(&apos;detail&apos;) THEN SET rec.detail = val;
					WHEN lower(name) = lower(&apos;severity&apos;) THEN SET rec.severity = val;
					ELSE
				END CASE;
			END IF;
		END FOR;
		-- Insert the final record
		IF (numEntries &gt; 0) THEN
			INSERT INTO result VALUES (rec);
		END IF;
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1515851806885</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564716518453</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1515851806885</attribute>
</metadata>