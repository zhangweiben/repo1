<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="replaceStringInResources" path="/shared/ASAssets/Utilities/repository/replaceStringInResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>replaceStringInAnnotations:

    This procedure is used to replace a target string in the annotations of one or more resources contained under the resource identified by the value startPath
 
    Dependencies:
    =============
    /shared/Utilities/repository/updateResourceAnnotations - Procedure used to update a resource&apos;s annotation with the target text replace


    Input:
        resourcePath - CIS source folder path to assess and fix
            Values: e.g. /shared/tmp/1folder/_folder/XML


    Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		updateResponse - XML response representing what was updated.
			Values: Update Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value


    Exceptions:  /lib/util/System.IllegalArgumentException


	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2018.100	12/19/2017		Mike Tinius			7.0.5			Created new
	2019.301	08/01/2019		Mike Tinius			7.0.8			Modified procedure to escape single quotes for &quot;searchStr&quot; for the adhoc query.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="startPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="searchStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="replaceStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="caseSensitive" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="numResourcesUpdated" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="updateResponse" direction="OUT" nullable="true">
      <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateSqlScript" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="scripttext" direction="INOUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateSqlTable" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="inScripttext" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* replaceStringInResources:

    This procedure is used to replace a target string in the body of one or more resources contained under the resource identified by the value startPath.
	This procedure only looks at views and procedures as they may have a script body whereas other resources do not.  All occurrences of the string are replaced.
	A related procedure, &quot;/Utilities/repository/replaceStringInAnnotations&quot;, is used to replace strings in the annotations of a resource.
 
    Dependencies:
    =============
    /shared/ASAssets/Utilities/repository/updateSqlScript - Procedure used to update a procedure&apos;s sql script body.
	/shared/ASAssets/Utilities/repository/updateSqlTable - Procedure used to update a table&apos;s/view&apos;s sql body.

    Input:
        startPath - CIS source folder path to assess and fix
            Values: e.g. folder exact match: /shared/tmp/1folder/_folder/XML - use this scenario to only search for what is in this exact folder and no sub-folders.
            Values: e.g. wildcard begin: %/1folder/_folder/XML
            Values: e.g. wildcard end: /shared/tmp/1folder/_folder/XML% - use this scenario to iterate through sub-folders
            Values: e.g. wildcard surrounding: %/1folder/_folder/XML%

		searchStr - the string to search for what is to be removed/replaced in the target resource.
			The string may contain multi-line text.
 
		replaceStr - the new string in which to replace with. 
			The string may contain multi-line text.
			The string may not be null but it can be an empty string if the use case is to remove the &quot;searchStr&quot;.

		caseSensitive - 1/null [default]=Search for &quot;searchStr&quot; with case sensitivity. Use actual text as is.  0=Perform search with no case sensitivity.  

    Output:
		numResourcesUpdated - the number of resources that were updated with the string replacement.

		success	- true(1) or false(0)
			Values: 1 or 0

		updateResponse - XML response representing what was updated.
			Values: Update Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value

    Exceptions:  /lib/util/System.IllegalArgumentException

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2018.100	12/19/2017		Mike Tinius			7.0.5			Created new
	2019.301	08/01/2019		Mike Tinius			7.0.8			Modified procedure to escape single quotes for &quot;searchStr&quot; for the adhoc query.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE replaceStringInResources
(
	IN startPath 			/lib/resource/ResourceDefs.ResourcePath, 
	IN searchStr 			LONGVARCHAR, 
	IN replaceStr 			LONGVARCHAR, 
	IN caseSensitive		BIT,	-- 1/null [default]=Search for &quot;searchStr&quot; with case sensitivity. Use actual text as is.  0=Perform search with no case sensitivity.  
	OUT numResourcesUpdated	INTEGER,
	OUT success				BIT,
	OUT updateResponse 		XML,
	OUT faultResponse		XML
)
BEGIN
	DECLARE moduleName		VARCHAR DEFAULT &apos;replaceStringInResources&apos;;
	DECLARE debug			CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;
	DECLARE searchStr_		LONGVARCHAR DEFAULT searchStr;
	DECLARE resCur CURSOR (
		resourcePath 	/lib/resource/ResourceDefs.ResourcePath, 
		resourceType 	/lib/resource/ResourceDefs.ResourceType, 
		resourceSubType /lib/resource/ResourceDefs.ResourceType, 
		definition 		LONGVARCHAR
	);
	DECLARE definition 		LONGVARCHAR DEFAULT NULL;
	DECLARE resQuery 		LONGVARCHAR;
	DECLARE ex				EXCEPTION;

	IF (startPath IS NULL OR LENGTH(TRIM(startPath)) = 0) THEN
		RAISE ex VALUE moduleName||&apos; : EXCEPTION: The input parameter &quot;startPath&quot; may not be null or empty.&apos;;
	END IF;
	IF (searchStr IS NULL OR LENGTH(TRIM(searchStr)) = 0) THEN
		RAISE ex VALUE moduleName||&apos; : EXCEPTION: The input parameter &quot;searchStr&quot; may not be null or empty.&apos;;
	END IF;
	IF (replaceStr IS NULL) THEN
		RAISE ex VALUE moduleName||&apos; : EXCEPTION: The input parameter &quot;replaceStr&quot; may not be null.&apos;;
	END IF;

	-- Escape the single quotes within the search string text
	IF (INSTR(searchStr_, &apos;&apos;&apos;&apos;) &gt; 0) THEN
		SET searchStr_ = REPLACE(searchStr_, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;);
	END IF;

	SET numResourcesUpdated = 0;
	SET success = 1;
	SET resQuery = &apos;
        SELECT 
          PARENT_PATH || &apos;&apos;/&apos;&apos; || RESOURCE_NAME resourcePath,
          CASE RESOURCE_TYPE 
              WHEN &apos;&apos;DATASOURCE&apos;&apos; THEN &apos;&apos;DATA_SOURCE&apos;&apos;
              ELSE RESOURCE_TYPE 
          END resourceType,
          RESOURCE_SUBTYPE subType,
          DEFINITION definition
        FROM /services/databases/system/ALL_RESOURCES&apos;;

	-- Check for wild cards in the startPath
	IF (INSTR(startPath, &apos;%&apos;) = 0) THEN
		SET resQuery = resQuery || &apos;
        WHERE PARENT_PATH = &apos;&apos;&apos; || startPath || &apos;&apos;&apos;&apos;;
	ELSE
		SET resQuery = resQuery || &apos;
        WHERE PARENT_PATH LIKE &apos;&apos;&apos; || startPath || &apos;&apos;&apos;&apos;;
	END IF;

	SET resQuery = resQuery || &apos;
          AND RESOURCE_TYPE IN (&apos;&apos;TABLE&apos;&apos;,&apos;&apos;PROCEDURE&apos;&apos;)&apos;;

	-- Check for case sensitivity
	IF (caseSensitive IS NOT NULL AND caseSensitive = 0) THEN
		SET resQuery = resQuery || &apos;
          AND LOWER(DEFINITION) LIKE &apos;&apos;%&apos; || LOWER(searchStr_) || &apos;%&apos;&apos;&apos;;
	ELSE
		SET resQuery = resQuery || &apos;
          AND DEFINITION LIKE &apos;&apos;%&apos; || searchStr_ || &apos;%&apos;&apos;&apos;;
	END IF;

	SET resQuery = resQuery || &apos;
        ORDER BY PARENT_PATH, RESOURCE_NAME&apos;;

	IF (UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : resQuery=&apos;||resQuery);
	END IF;

	OPEN resCur for resQuery;

	FOR res AS resCur DO
		SET definition = REPLACE(res.definition, searchStr, replaceStr);
		IF (res.resourceType = &apos;TABLE&apos; AND res.resourceSubType = &apos;SQL_TABLE&apos;) THEN
			IF (UPPER(debug) = &apos;Y&apos;) THEN
				CALL PRINT(moduleName||&apos; : Replace SQL text in: resourceType=&apos;||res.resourceType||&apos;  resourcePath=&apos;||res.resourcePath);
			END IF;
			CALL /shared/ASAssets/Utilities/repository/updateSqlTable(res.resourcePath, definition, success, updateResponse, faultResponse);
			IF (faultResponse IS NOT NULL) THEN
				RAISE ex VALUE moduleName||&apos; : EXCEPTION: &apos;||CAST(faultResponse AS LONGVARCHAR);
			END IF;
			SET numResourcesUpdated = numResourcesUpdated + 1;

		ELSEIF (res.resourceType = &apos;PROCEDURE&apos; AND res.resourceSubType = &apos;SQL_SCRIPT_PROCEDURE&apos;) THEN
			IF (UPPER(debug) = &apos;Y&apos;) THEN
				CALL PRINT(moduleName||&apos; : Replace SQL text in: resourceType=&apos;||res.resourceType||&apos;  resourcePath=&apos;||res.resourcePath);
			END IF;
			CALL /shared/ASAssets/Utilities/repository/updateSqlScript(res.resourcePath, definition, success, updateResponse, faultResponse);
			IF (faultResponse IS NOT NULL) THEN
				RAISE ex VALUE moduleName||&apos; : EXCEPTION: &apos;||CAST(faultResponse AS LONGVARCHAR);
			END IF;
			SET numResourcesUpdated = numResourcesUpdated + 1;
		ELSE
		END IF;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1380737206434</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564745810015</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:7:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/150</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/141</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/160</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>