<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="getUserPermissionsRecursive" path="/shared/ASAssets/Utilities/repository/getUserPermissionsRecursive" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getUserPermissionsRecursive:

    This procedure returns a recursive list of resource privileges for a specified user/domain
	from a specified parent resource path.  The privileges returned are the effective or &apos;combined&apos;
	privileges for the user on each resource in the list.  The privileges may have been specified
	explicitly for the user or inherited from groups to which the user has membership.

    Dependencies:
    =============
    /shared/Utilities/repository/getResourceListRecursive- 
		Return a list of resources, resource path, type and subtype for a given folder path.

    Input:
        userName -    CIS user name (e.g. admin)
		domainName -  CIS domain name (e.g. composite)
		beginFolder - path to Resource (e.g. /shared)

    Output (cursor):
        resPath -     path to resource
		privRead -    &apos;Y&apos; if user has READ privs on the resource
        privWrite -   &apos;Y&apos; if user has WRITE privs on the resource
		privExecute - &apos;Y&apos; if user has EXECUTE privs on the resource
		privSelect -  &apos;Y&apos; if user has SELECT privs on the resource
		privUpdate -  &apos;Y&apos; if user has UPDATE privs on the resource
		privInsert -  &apos;Y&apos; if user has INSERT privs on the resource
		privDelete -  &apos;Y&apos; if user has DELETE privs on the resource
		privGrant -   &apos;Y&apos; if user has GRANT privs on the resource


    Exceptions:  getResourceListRecursive will return an exception if beginFolder is not a CONTAINER

 	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2011.4		09/08/2011		Jerry Joplin		5.2.0			Created new.
	2012.4		10/25/2012		Calvin Goodrich		5.2.0			Updated to pass resource type to getResourceListRecursive

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="userName" direction="IN" nullable="true">
      <datatype name="UserName" referenceDefinitionSet="/lib/users/UserDefs" referenceType="UserName" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="domainName" direction="IN" nullable="true">
      <datatype name="DomainName" referenceDefinitionSet="/lib/users/UserDefs" referenceType="DomainName" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="beginFolder" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="ResultType" type="TABLE" refId="1">
        <element name="resPath">
          <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
        </element>
        <element name="privRead">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privWrite">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privExecute">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privSelect">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privUpdate">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privInsert">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privDelete">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="privGrant">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/users/UserDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourcePrivilegesByUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="name">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="domain">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="privs">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="combinedPrivs">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="inheritedPrivs">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getUserPermissionsRecursive:

    This procedure returns a recursive list of resource privileges for a specified user/domain
	from a specified parent resource path.  The privileges returned are the effective or &apos;combined&apos;
	privileges for the user on each resource in the list.  The privileges may have been specified
	explicitly for the user or inherited from groups to which the user has membership.

    Dependencies:
    =============
    /shared/Utilities/repository/getResourceListRecursive- 
		Return a list of resources, resource path, type and subtype for a given folder path.

    Input:
        userName -    CIS user name (e.g. admin)
		domainName -  CIS domain name (e.g. composite)
		beginFolder - path to Resource (e.g. /shared)

    Output (cursor):
        resPath -     path to resource
		privRead -    &apos;Y&apos; if user has READ privs on the resource
        privWrite -   &apos;Y&apos; if user has WRITE privs on the resource
		privExecute - &apos;Y&apos; if user has EXECUTE privs on the resource
		privSelect -  &apos;Y&apos; if user has SELECT privs on the resource
		privUpdate -  &apos;Y&apos; if user has UPDATE privs on the resource
		privInsert -  &apos;Y&apos; if user has INSERT privs on the resource
		privDelete -  &apos;Y&apos; if user has DELETE privs on the resource
		privGrant -   &apos;Y&apos; if user has GRANT privs on the resource


    Exceptions:  getResourceListRecursive will return an exception if beginFolder is not a CONTAINER

 	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2011.4		09/08/2011		Jerry Joplin		5.2.0			Created new.
	2012.4		10/25/2012		Calvin Goodrich		5.2.0			Updated to pass resource type to getResourceListRecursive

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/


PROCEDURE getUserPermissionsRecursive(
    IN  userName /lib/users/UserDefs.UserName,
    IN  domainName /lib/users/UserDefs.DomainName,
    IN  beginFolder /lib/resource/ResourceDefs.ResourcePath,
    OUT result PIPE ResultType
)
BEGIN
    DECLARE PUBLIC TYPE ResultType ROW (
        resPath /lib/resource/ResourceDefs.ResourcePath,
		privRead CHAR(1),
        privWrite CHAR(1),
		privExecute CHAR(1),
		privSelect CHAR(1),
		privUpdate CHAR(1),
		privInsert CHAR(1),
		privDelete CHAR(1),
		privGrant CHAR(1)
    );

	-- Utility procedure to return a recursive list of resources does most
	-- of the heavy lifting for this procedure.
	DECLARE resourceList CURSOR FOR 
  		SELECT * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(beginFolder, &apos;CONTAINER&apos;);

	-- FOR loop to handle all resource entries in the recursive list
	FOR resourceEntry AS resourceList DO

		-- Determine the user&apos;s privileges by parsing all combined privileges returned
		-- and checking for the presence of each individual privilege in the text list
		INSERT INTO result
			(resPath,privRead,privWrite,privExecute,privSelect,privUpdate,privInsert,privDelete,privGrant)
		SELECT
			getAllResourcePermissions.&quot;path&quot; resPath,
			CASE
				WHEN POSITION(&apos;READ&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privRead,
			CASE 
				WHEN POSITION(&apos;WRITE&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privWrite,
			CASE 
				WHEN POSITION(&apos;EXECUTE&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privExecute,
			CASE
				WHEN POSITION(&apos;SELECT&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privSelect,
			CASE
				WHEN POSITION(&apos;UPDATE&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privUpdate,
			CASE 
				WHEN POSITION(&apos;INSERT&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privInsert,
			CASE
				WHEN POSITION(&apos;DELETE&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privDelete,
			CASE
				WHEN POSITION(&apos;GRANT&apos; IN getAllResourcePermissions.combinedPrivs) &gt; 0 THEN &apos;Y&apos;
				ELSE &apos;N&apos;
			END privGrant
		FROM /shared/ASAssets/Utilities/repository/getResourcePrivilegesByUser(resourceEntry.resPath,resourceEntry.resType) getAllResourcePermissions
		WHERE getAllResourcePermissions.&quot;name&quot; = userName AND getAllResourcePermissions.&quot;domain&quot; = domainName;

	END FOR;

END</attribute>
  <attribute name="creationDate" type="LONG">1376679119330</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564716190390</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_types" type="MAP">
    <item>
      <key type="STRING">ResultType</key>
      <value type="BYTE_ARRAY">EB8GAgAKAFIAZQBzAHUAbAB0AFQAeQBwAGUGKQBBAC8AcwBoAGEAcgBlAGQALwBBAFMAQQBzAHMAZQB0AHMALwBVAHQAaQBsAGkAdABpAGUAcwAvAHIAZQBwAG8AcwBpAHQAbwByAHkALwBnAGUAdABVAHMAZQByAFAAZQByAG0AaQBzAHMAaQBvAG4AcwBSAGUAYwB1AHIAcwBpAHYAZQYqAAoAUgBlAHMAdQBsAHQAVAB5AHAAZQMSAAAAAQMSAAAAAQETAQkUAAAACRAhBhUABwByAGUAcwBQAGEAdABoAy8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAACBkQGwYCAAwAUgBlAHMAbwB1AHIAYwBlAFAAYQB0AGgGKQAaAC8AbABpAGIALwByAGUAcwBvAHUAcgBjAGUALwBSAGUAcwBvAHUAcgBjAGUARABlAGYAcwYqAAwAUgBlAHMAbwB1AHIAYwBlAFAAYQB0AGgDEgAAAAIEBAAAAAAAABAAARMB/////xAhBhUACABwAHIAaQB2AFIAZQBhAGQDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAEDIP////8DIgAAAAAIGRAbBgIABABDAEgAQQBSAxIAAAADBAUAAAAAAAAAAQQEAAAAAAAAAAEBEwH/////ECEGFQAJAHAAcgBpAHYAVwByAGkAdABlAy8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAAAxIAAAAD//8QIQYVAAsAcAByAGkAdgBFAHgAZQBjAHUAdABlAy8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAAAxIAAAAD//8QIQYVAAoAcAByAGkAdgBTAGUAbABlAGMAdAMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAMSAAAAA///ECEGFQAKAHAAcgBpAHYAVQBwAGQAYQB0AGUDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAEDIP////8DIgAAAAADEgAAAAP//xAhBhUACgBwAHIAaQB2AEkAbgBzAGUAcgB0Ay8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAAAxIAAAAD//8QIQYVAAoAcAByAGkAdgBEAGUAbABlAHQAZQMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAMSAAAAA///ECEGFQAJAHAAcgBpAHYARwByAGEAbgB0Ay8AAAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAAAxIAAAAD/////w==</value>
    </item>
  </attribute>
  <attribute name="references" type="NULL"/>
</metadata>