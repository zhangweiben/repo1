<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="findVectorInResources" path="/shared/ASAssets/Utilities/repository/findVectorInResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>findVectorInResources:

	This procedure is used to locate any procedures that contain a VECTOR in the IN or OUT parameters or in the DECLARE statements.

    Input:
		startingParentPath	VARCHAR(4096),	-- The starting resource path to begin inspecting resources.

    Output:
		result				PIPE (
			resourcePath	VARCHAR(4096),	-- The resource path where the resource was found
			resourceType	VARCHAR,		-- The resource type
			areaFound		VARCHAR, 		-- IN[#] OUT[#] DECLARE[#].   The # sign indicates how many instances were found in that area.
			definition		LONGVARCHAR		-- The procedure definition
		)

    Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
    2019.200	05/16/2019      Mike Tinius			7.0.8           Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="startingParentPath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="resourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="areaFound">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="definition">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/databases/system/ALL_RESOURCES" type="TABLE">
    <datatype type="TABLE" refId="1">
      <element name="RESOURCE_ID">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="RESOURCE_NAME">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="RESOURCE_TYPE">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ANNOTATION">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="DEFINITION">
        <datatype type="STRING" maxLength="16777215"/>
      </element>
      <element name="OWNER_ID">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="OWNER">
        <datatype type="STRING" maxLength="60"/>
      </element>
      <element name="PARENT_PATH">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="GUID">
        <datatype type="STRING" maxLength="65535"/>
      </element>
      <element name="RESOURCE_SUBTYPE">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/databases/system/DUAL" type="TABLE">
    <datatype type="TABLE" refId="1">
      <element name="DUMMY">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToWord" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inWord" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractTextList" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="separator" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="preserveDoubleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveSingleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveParenthesis" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveQualifier" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="trimResults" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="textExpression">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    findVectorInResources:

	This procedure is used to locate any procedures that contain a VECTOR in the IN or OUT parameters or in the DECLARE statements.

    Input:
		startingParentPath	VARCHAR(4096),	-- The starting resource path to begin inspecting resources.

    Output:
		result				PIPE (
			resourcePath	VARCHAR(4096),	-- The resource path where the resource was found
			resourceType	VARCHAR,		-- The resource type
			areaFound		VARCHAR, 		-- IN[#] OUT[#] DECLARE[#].   The # sign indicates how many instances were found in that area.
			definition		LONGVARCHAR		-- The procedure definition
		)

    Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
    2019.200	05/16/2019      Mike Tinius			7.0.8           Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.
*/
PROCEDURE findVectorInResources(
	IN startingParentPath	VARCHAR(4096),
	OUT result				PIPE (
		resourcePath	VARCHAR(4096),
		resourceType	VARCHAR,
		areaFound		VARCHAR, 	-- IN, OUT, DECLARE
		definition		LONGVARCHAR
	)
)
BEGIN
	DECLARE pos1, pos2		INTEGER;
	DECLARE pos3, pos4		INTEGER;
	DECLARE pos5, pos6		INTEGER;
	DECLARE vectorFound		BOOLEAN;
	DECLARE resourcePath	LONGVARCHAR;
	DECLARE resourceName	VARCHAR;
	DECLARE scriptText		LONGVARCHAR;
	DECLARE numLines		INTEGER;
	DECLARE numIN			INTEGER;
	DECLARE numOUT			INTEGER;
	DECLARE numDECLARE		INTEGER;
	DECLARE areaFound		VARCHAR;

	FOR r AS
		SELECT PARENT_PATH, RESOURCE_TYPE, RESOURCE_NAME, DEFINITION
		FROM /services/databases/system/ALL_RESOURCES
		WHERE PARENT_PATH LIKE startingParentPath||&apos;%&apos;
		  AND DEFINITION IS NOT NULL
		  AND UPPER(DEFINITION) LIKE &apos;%VECTOR%&apos;
		  AND RESOURCE_NAME &lt;&gt; &apos;findVectorInResources&apos;
		ORDER BY UPPER(PARENT_PATH), UPPER(RESOURCE_NAME)
	DO
		SET numLines = 0;
		SET areaFound = &apos;&apos;;
		SET numIN = 0;
		SET numOUT = 0;
		SET numDECLARE = 0;
		SET resourcePath = r.PARENT_PATH || &apos;/&apos; || r.RESOURCE_NAME;
		SET vectorFound = false;
		-- Normalize procedure script to upper case and change tab to a single space
		SET scriptText = REPLACE(UPPER(r.DEFINITION), CHR(9), &apos; &apos;);

		-- Determine the position of the beginning of the &quot;PROCEDURE name&quot; and don&apos;t process any comments found above that line.
		CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToWord(r.RESOURCE_NAME, null, resourceName);
		SET pos1 = INSTR(scriptText, &apos;PROCEDURE &apos;||UPPER(resourceName));
		IF (pos1 &gt; 0) THEN
			SET scriptText = SUBSTRING(scriptText, pos1);
		END IF;
		CALL PRINT(&apos;PROCESS: resourcePath=&apos;||resourcePath||&apos;  begin at pos1=&apos;||pos1);

		-- Begin extracting each line of the procedure
		extractLoop:
		FOR e AS 
			SELECT textExpression line
			FROM /shared/ASAssets/Utilities/string/extractTextList(scriptText, CHR(10), 0, 0, 0, 0, 1)
			WHERE textExpression IS NOT NULL AND LENGTH(TRIM(textExpression)) &gt; 0
			  AND INSTR(TRIM(textExpression), &apos;--&apos;) &lt;&gt; 1 -- ignore lines starting with comments
		DO
			SET numLines = numLines + 1;
			--CALL PRINT(LPAD(CAST(numLines AS VARCHAR), 4, &apos; &apos;)||&apos;. [&apos;||e.line||&apos;]&apos;);
			-- Look for an &apos;IN &apos; parameter.
			SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(e.line, &apos;IN &apos;) INTO pos1 FROM /services/databases/system/DUAL;
			-- Look for an &apos;OUT &apos; parameter.
			SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(e.line, &apos;OUT &apos;) INTO pos2 FROM /services/databases/system/DUAL;
			-- Look for a &apos;DECLARE &apos; statement.
			SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(e.line, &apos;DECLARE &apos;) INTO pos3 FROM /services/databases/system/DUAL;
			-- Look for &apos;VECTOR(&apos; or &apos;VECTOR &apos;
			SET pos4 = INSTR(e.line, &apos; VECTOR(&apos;);
			IF (pos4 = 0) THEN
				SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(e.line, &apos; VECTOR &apos;) INTO pos4 FROM /services/databases/system/DUAL;
			END IF;
			-- If any of the above is true then a VECTOR was found
			IF 		(pos1 &gt; 0 AND pos4 &gt; 0 AND pos4 &gt; pos1) THEN
				SET numIN = numIN + 1;
				SET vectorFound = true;
				CALL PRINT(&apos;FOUND____line=&apos;||e.line);
			ELSEIF 	(pos2 &gt; 0 AND pos4 &gt; 0 AND pos4 &gt; pos2) THEN
				SET numOUT = numOUT + 1;
				SET vectorFound = true;
				CALL PRINT(&apos;FOUND____line=&apos;||e.line);
			ELSEIF 	(pos3 &gt; 0 AND pos4 &gt; 0 AND pos4 &gt; pos3) THEN
				SET numDECLARE = numDECLARE + 1;
				SET vectorFound = true;
				CALL PRINT(&apos;FOUND____line=&apos;||e.line);
				--LEAVE extractLoop; -- leave the loop after the first VECTOR was found
			ELSE
				-- Stop looking for a VECTOR after the DECLARE statements are finished. 
				IF (INSTR(e.line,&apos;SET &apos;)=1 OR INSTR(e.line,&apos;IF &apos;)=1 OR INSTR(e.line,&apos;FOR &apos;)=1 OR INSTR(e.line,&apos;WHILE &apos;)=1) THEN
					CALL PRINT(&apos;STOP_____numLines=&apos;||numLines);
					LEAVE extractLoop;
				END IF;
			END IF;
		END FOR;
		IF (vectorFound) THEN
			IF (numIN &gt; 0) THEN
				SET areaFound = areaFound || &apos;IN[&apos;||numIN||&apos;]  &apos;;
			END IF;
			IF (numOUT &gt; 0) THEN
				SET areaFound = areaFound || &apos;OUT[&apos;||numOUT||&apos;]  &apos;;
			END IF;
			IF (numDECLARE &gt; 0) THEN
				SET areaFound = areaFound || &apos;DECLARE[&apos;||numDECLARE||&apos;]  &apos;;
			END IF;

			INSERT INTO result VALUES(resourcePath, r.RESOURCE_TYPE, TRIM(areaFound), r.DEFINITION);
		END IF;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1557856692433</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564712949388</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/117</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/126</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/113</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/121</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1557856692433</attribute>
</metadata>