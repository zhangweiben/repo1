<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="expireProcCacheEntryByName" path="/shared/ASAssets/Utilities/repository/expireProcCacheEntryByName" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>expireProcCacheEntryByName:
    
    This procedure allows expiration of a specific cache entry for a cached procedure based on the parameter values entered.
       
    Input:
    
      cachedResourcePath - Path to the cached resource.  
        Values: Any valid path to a procedure with a cache defined.

	  cacheStatusPath - Path to the cache status table used to track the status of cache resource&apos;s entries.
		Values: Any valid path to the cache status table used to track the entries for the cached resource.
    
	  params - The set of parameter values for the procedure that correspond to the cache entry to be expired.
		Values: A comma separated list of parameter values corresponding to the cache entry to be expired.
				String values should be enclosed in single quotes
    

    Output:
    
      isSuccessful - A BIT value to indicate if the entry was expired successfully. 
        Values: 1 if the procedure exists and has an entry in the csstatus table that matches the input params
				0 otherwise
    Exceptions:  none
    
	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.1		10/18/2011		Matthew Lee			5.2.0			Created new

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="cachedResourcePath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="cacheStatusPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="params" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="isSuccessful" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/fixQuotes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inMessage" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outMessage" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    expireProcCacheEntryByName:
    
    This procedure allows expiration of a specific cache entry for a cached procedure based on the parameter values entered.
       
    Input:
    
      cachedResourcePath - Path to the cached resource.  
        Values: Any valid path to a procedure with a cache defined.

	  cacheStatusPath - Path to the cache status table used to track the status of cache resource&apos;s entries.
		Values: Any valid path to the cache status table used to track the entries for the cached resource.
    
	  params - The set of parameter values for the procedure that correspond to the cache entry to be expired.
		Values: A comma separated list of parameter values corresponding to the cache entry to be expired.
				String values should be enclosed in single quotes
    

    Output:
    
      isSuccessful - A BIT value to indicate if the entry was expired successfully. 
        Values: 1 if the procedure exists and has an entry in the csstatus table that matches the input params
				0 otherwise
    Exceptions:  none
    
	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.1		10/18/2011		Matthew Lee			5.2.0			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE expireProcCacheEntryByName(
    IN cachedResourcePath /lib/resource/ResourceDefs.ResourcePath, 
    IN cacheStatusPath /lib/resource/ResourceDefs.ResourcePath, 
    IN params VARCHAR, 
    OUT isSuccessful BIT
)
BEGIN
    DECLARE procName /lib/resource/ResourceDefs.ResourceName;
	DECLARE resourceExists BOOLEAN;
    DECLARE cacheCount INTEGER;
	DECLARE fixedParams VARCHAR;

    DECLARE cacheKeyNum INTEGER;
    DECLARE cacheDelSQL VARCHAR;
    --DECLARE cacheDelSuccess BIT;
    DECLARE createResp XML;
    DECLARE faultResp XML;
    --Assume that the proc will fail until proven otherwise	
    SET isSuccessful = &apos;0&apos;;
    --Confirm that the procedure exists
 	call /lib/resource/ResourceExists(cachedResourcePath, &apos;PROCEDURE&apos;, null, resourceExists);
	if (resourceExists) then
		-- If no entry exists for the set of parameter inputs then report a failure.
		--If there is an entry in the csstatus table that matches the inputs then set it to be cleared
		CALL /shared/ASAssets/Utilities/string/fixQuotes(params, fixedParams);

		SET cacheDelSQL = --&apos;PROCEDURE deleteCacheRecord() BEGIN &apos; ||
			&apos;UPDATE &apos; || cacheStatusPath || &apos; SET STATUS = &apos;|| CHR(39) ||&apos;C&apos;|| CHR(39) ||
			&apos; WHERE resourceid = &apos;|| CHR(39) || cachedResourcePath || CHR(39) || &apos; AND parameters = &apos;&apos;&apos; ||
		 	fixedParams || &apos;&apos;&apos;;&apos;;

		EXECUTE IMMEDIATE cacheDelSQL;

		SET isSuccessful = &apos;1&apos;;
    END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1369417729294</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564712892856</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>