<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="validateSharedResourcesRules" path="/shared/ASAssets/Utilities/validate/validateSharedResourcesRules" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>validateSharedResourcesRules

	This procedure is used to evaluate a group of DV source code resources for a given starting path
	 and provide an output of code that fails the source code check rules.

	Evaluation rule list:
		1=impacted resource
		2=select distinct
		3=select *
		4=order by
        5=published path not allowed
        6=shared path(s) not allowed (specified)
        7=users path not allowed
		8=limit number of web service operations
	
	Input:
		inDebug						CHAR(1),		-- N=no debug.  Y=debug on.
		startingContainer			LONGVARCHAR,	-- The folder path to interrogate
		displayViolations			VARCHAR,		-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
		includeList					VARCHAR,		-- Comma separated list of evaluation rules to include.
		excludeList					VARCHAR,		-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList.
		sendEmail					CHAR(1),		-- null/N=do not send an email.  Y=send email for each resource with a violation/warning F or W.
		emailList					LONGVARCHAR,	-- A comma-separated list of valid emails
		-- comma separated list of paths that are not allowed to be directly referenced above the formatting layer.
		--		Example: &apos;/shared/EnterpriseDatabase/Physical/Metadata,/shared/EnterpriseDatabase/Physical/MetadataFiles&apos;;
		pathNotAllowed				LONGVARCHAR,
	 	-- comma separated list of resource paths or partials paths to exclude when traversing a published resources lineage using getResourceLineageDirectRecursive().
		--		Example: &apos;/shared/EnterpriseDatabase/Physical/Formatting,/lib,/services/webservices/system&apos;
		excludePathsList			LONGVARCHAR,	-- Comma separated list of resource paths or partials paths to exclude while processing.
		maxNumberWebServiceOperations INTEGER,		-- maximum number of web service operations allowed per web service
		waiverList					LONGVARCHAR,	-- A formatted list of resources that have been granted a waiver from processing.  These resources were previously in violation. 
													--		The format is as follows: &apos;|&apos; || w.resourceType || &apos;:&apos; || w.ResourcePath || &apos;|&apos;
													-- e.g. |/shared/path1/view1:TABLE|/shared/path2/proc2:PROCEDURE|
	Output:
		OUT result				PIPE (
			groupNum			INTEGER,		-- A numerical sequential value indicating what group number the set of resources belong to.
			violation			CHAR(1),		-- F=Fail, W=Warning, P=pass.
			ruleViolations		VARCHAR(255),	-- A list of rule violations that have occurred for a given resource.
			ruleWarnings		VARCHAR(255),	-- A list of rule warnings that have occurred for a given resource.
			ruleMessage			VARCHAR(500),	-- A message to be relayed to the user.
			parentPath			VARCHAR(4000),	-- The parent path of the resource being evaluated.
			resourcePath 		VARCHAR(4000),	-- The actual path of the resource being evaluated.
			resourceType		VARCHAR(255),	-- The resource type of the resource being evaluated.
			resourceName		VARCHAR(255),	-- The resource name of the resource being evaluated.
			ownerName			VARCHAR(255),	-- The owner name of the resource being modified.
			ownerDomain			VARCHAR(255),	-- The owner domain of the resource being modified.
			modUser				VARCHAR(255),	-- The modified user of the resource being modified.
			modDomain			VARCHAR(255),	-- The modified user domain of the resource being modified.
			modDate				TIMESTAMP,		-- The modified timestamp of the resource being modified.
			impactLevel			VARCHAR(255),	-- The impact level (type) of the resource being modified.
			impactMessage		VARCHAR(32767)	-- The impact message of the resource beaing modified.
		)

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2019.200	01/08/2019		Mike Tinius			7.0.8			Created new
	2019.200	02/04/2019		Mike Tinius			7.0.8			Added waiver list check.  Added rule 8-limit number of web service operations
	2019.200	04/19/2019		Mike Tinius			7.0.8			Added to Utilities

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="inDebug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="startingContainer" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="displayViolations" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="includeList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="excludeList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="sendEmail" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="emailList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="pathNotAllowed" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="maxNumberWebServiceOperations" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="waiverList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="groupNum">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="violation">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="ruleViolations">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ruleWarnings">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ruleMessage">
          <datatype name="VARCHAR" type="STRING" maxLength="500"/>
        </element>
        <element name="parentPath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="resourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resourceName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modUser">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="impactLevel">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="impactMessage">
          <datatype name="VARCHAR" type="STRING" maxLength="32767"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/SendEMail" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="from" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="replyTo" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="to" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="cc" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="bcc" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="subject" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
      <element name="contentType" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="content" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Content" type="STRING" maxLength="65535"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/server/getServerAttribute" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="attributePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="keyValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/validate/helpers/evaluateResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inDebug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="displayViolations" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="includeList" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludeList" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inGroupNum" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="pathNotAllowed" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="maxNumberWebServiceOperations" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="groupNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="violation">
            <datatype type="STRING" minLength="1" maxLength="1"/>
          </element>
          <element name="ruleViolations">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ruleWarnings">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ruleMessage">
            <datatype type="STRING" maxLength="500"/>
          </element>
          <element name="parentPath">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="modUser">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="modDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="modDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32767"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
	validateSharedResourcesRules

	This procedure is used to evaluate a group of DV source code resources for a given starting path
	 and provide an output of code that fails the source code check rules.

	Evaluation rule list:
		1=impacted resource
		2=select distinct
		3=select *
		4=order by
        5=published path not allowed
        6=shared path(s) not allowed (specified)
        7=users path not allowed
		8=limit number of web service operations
	
	Input:
		inDebug						CHAR(1),		-- N=no debug.  Y=debug on.
		startingContainer			LONGVARCHAR,	-- The folder path to interrogate
		displayViolations			VARCHAR,		-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
		includeList					VARCHAR,		-- Comma separated list of evaluation rules to include.
		excludeList					VARCHAR,		-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList.
		sendEmail					CHAR(1),		-- null/N=do not send an email.  Y=send email for each resource with a violation/warning F or W.
		emailList					LONGVARCHAR,	-- A comma-separated list of valid emails
		-- comma separated list of paths that are not allowed to be directly referenced above the formatting layer.
		--		Example: &apos;/shared/EnterpriseDatabase/Physical/Metadata,/shared/EnterpriseDatabase/Physical/MetadataFiles&apos;;
		pathNotAllowed				LONGVARCHAR,
	 	-- comma separated list of resource paths or partials paths to exclude when traversing a published resources lineage using getResourceLineageDirectRecursive().
		--		Example: &apos;/shared/EnterpriseDatabase/Physical/Formatting,/lib,/services/webservices/system&apos;
		excludePathsList			LONGVARCHAR,	-- Comma separated list of resource paths or partials paths to exclude while processing.
		maxNumberWebServiceOperations INTEGER,		-- maximum number of web service operations allowed per web service
		waiverList					LONGVARCHAR,	-- A formatted list of resources that have been granted a waiver from processing.  These resources were previously in violation. 
													--		The format is as follows: &apos;|&apos; || w.resourceType || &apos;:&apos; || w.ResourcePath || &apos;|&apos;
													-- e.g. |/shared/path1/view1:TABLE|/shared/path2/proc2:PROCEDURE|
	Output:
		OUT result				PIPE (
			groupNum			INTEGER,		-- A numerical sequential value indicating what group number the set of resources belong to.
			violation			CHAR(1),		-- F=Fail, W=Warning, P=pass.
			ruleViolations		VARCHAR(255),	-- A list of rule violations that have occurred for a given resource.
			ruleWarnings		VARCHAR(255),	-- A list of rule warnings that have occurred for a given resource.
			ruleMessage			VARCHAR(500),	-- A message to be relayed to the user.
			parentPath			VARCHAR(4000),	-- The parent path of the resource being evaluated.
			resourcePath 		VARCHAR(4000),	-- The actual path of the resource being evaluated.
			resourceType		VARCHAR(255),	-- The resource type of the resource being evaluated.
			resourceName		VARCHAR(255),	-- The resource name of the resource being evaluated.
			ownerName			VARCHAR(255),	-- The owner name of the resource being modified.
			ownerDomain			VARCHAR(255),	-- The owner domain of the resource being modified.
			modUser				VARCHAR(255),	-- The modified user of the resource being modified.
			modDomain			VARCHAR(255),	-- The modified user domain of the resource being modified.
			modDate				TIMESTAMP,		-- The modified timestamp of the resource being modified.
			impactLevel			VARCHAR(255),	-- The impact level (type) of the resource being modified.
			impactMessage		VARCHAR(32767)	-- The impact message of the resource beaing modified.
		)

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2019.200	01/08/2019		Mike Tinius			7.0.8			Created new
	2019.200	02/04/2019		Mike Tinius			7.0.8			Added waiver list check.  Added rule 8-limit number of web service operations
	2019.200	04/19/2019		Mike Tinius			7.0.8			Added to Utilities

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE validateSharedResourcesRules(
	IN inDebug						CHAR(1),		-- N=no debug.  Y=debug on.
	IN startingContainer			LONGVARCHAR,	-- The folder path to interrogate
	IN displayViolations			VARCHAR,		-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
	IN includeList					VARCHAR,		-- Comma separated list of evaluation rules to include. Ex: 2,3,5,7
	IN excludeList					VARCHAR,		-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList. Ex: 1
	IN sendEmail					CHAR(1),		-- null/N=do not send an email.  Y=send email for each resource with a violation/warning F or W.
	IN emailList					LONGVARCHAR,	-- A comma-separated list of valid emails
	-- comma separated list of paths that are not allowed to be directly referenced above the formatting layer.
	--		Example: &apos;/shared/EnterpriseDatabase/Physical/Metadata,/shared/EnterpriseDatabase/Physical/MetadataFiles&apos;;
	IN pathNotAllowed				LONGVARCHAR,
 	-- comma separated list of resource paths or partials paths to exclude when traversing a published resources lineage using getResourceLineageDirectRecursive().
	--		Example: &apos;/shared/EnterpriseDatabase/Physical/Formatting,/lib,/services/webservices/system&apos;
	IN excludePathsList				LONGVARCHAR,	-- Comma separated list of resource paths or partials paths to exclude while processing.
	IN maxNumberWebServiceOperations INTEGER,		-- maximum number of web service operations allowed per web service
	IN waiverList					LONGVARCHAR,	-- A formatted list of resources that have been granted a waiver from processing.  These resources were previously in violation. 
													--		The format is as follows: &apos;|&apos; || w.resourceType || &apos;:&apos; || w.ResourcePath || &apos;|&apos;
													-- e.g. |/shared/path1/view1:TABLE|/shared/path2/proc2:PROCEDURE|
	OUT result				PIPE (
			groupNum			INTEGER,		-- A numerical sequential value indicating what group number the set of resources belong to.
			violation			CHAR(1),		-- F=Fail, W=Warning, P=pass.
			ruleViolations		VARCHAR(255),	-- A list of rule violations that have occurred for a given resource.
			ruleWarnings		VARCHAR(255),	-- A list of rule warnings that have occurred for a given resource.
			ruleMessage			VARCHAR(500),	-- A message to be relayed to the user.
			parentPath			VARCHAR(4000),	-- The parent path of the resource being evaluated.
			resourcePath 		VARCHAR(4000),	-- The actual path of the resource being evaluated.
			resourceType		VARCHAR(255),	-- The resource type of the resource being evaluated.
			resourceName		VARCHAR(255),	-- The resource name of the resource being evaluated.
			ownerName			VARCHAR(255),	-- The owner name of the resource being modified.
			ownerDomain			VARCHAR(255),	-- The owner domain of the resource being modified.
			modUser				VARCHAR(255),	-- The modified user of the resource being modified.
			modDomain			VARCHAR(255),	-- The modified user domain of the resource being modified.
			modDate				TIMESTAMP,		-- The modified timestamp of the resource being modified.
			impactLevel			VARCHAR(255),	-- The impact level (type) of the resource being modified.
			impactMessage		VARCHAR(32767)	-- The impact message of the resource beaing modified.
	)
)
BEGIN
	DECLARE moduleName					VARCHAR DEFAULT &apos;validateSharedResourcesRules&apos;;
	DECLARE debug						CHAR(1) DEFAULT UPPER(NVL(inDebug,&apos;N&apos;));
	DECLARE ruleKey						VARCHAR(500) DEFAULT 
&apos;    Evaluation rule list:
        1=impacted resource
        2=select distinct
        3=select *
        4=order by
        5=published path not allowed
        6=shared path(s) not allowed (&apos;||NVL(pathNotAllowed,&apos;null&apos;)||&apos;)
        7=users path not allowed
        8=limit number of web service operations
&apos;;
	DECLARE resourcePath				VARCHAR(4000) DEFAULT startingContainer;
	DECLARE resourceType				VARCHAR;
	DECLARE parentPath					VARCHAR(4000);
	DECLARE resourceName				VARCHAR DEFAULT null;
	DECLARE len							INTEGER;
	DECLARE message						LONGVARCHAR;
	DECLARE groupNum					INTEGER DEFAULT 1;
	DECLARE incrFlag					BOOLEAN;
	DECLARE email						VARCHAR;
	DECLARE emailFormat					VARCHAR DEFAULT &apos;TEXT_PLAIN&apos;;
	DECLARE displayName					VARCHAR;
	DECLARE subject						VARCHAR(1000);	-- The email subject line
	DECLARE body						LONGVARCHAR;	-- The body of the email
	DECLARE sourceServerDisplayName		VARCHAR;
	DECLARE version						VARCHAR;
	DECLARE pos1						INTEGER;
	DECLARE ex							EXCEPTION;

	-- Get the version of the source server.
	CALL /shared/ASAssets/Utilities/repository/server/getServerAttribute(&apos;/server/config/info/version&apos;, version);
	-- Get the display name of the source server.
	CALL /shared/ASAssets/Utilities/repository/server/getServerAttribute(&apos;/server/config/info/displayName&apos;, sourceServerDisplayName);
	-- Concat the version at the end of the server display
	SET pos1 = INSTR(sourceServerDisplayName, &apos;-&apos;, -1, 1);
	IF (pos1 &gt; 0) THEN
		SET sourceServerDisplayName = SUBSTRING(sourceServerDisplayName, 1, pos1);
	END IF;
	SET sourceServerDisplayName = sourceServerDisplayName || &apos;[&apos;||version||&apos;]&apos;;


	-- Get the resource type
	getType:
	FOR r AS SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(startingContainer, null) DO
		IF (r.&quot;type&quot; = &apos;DATA_SOURCE&apos; OR r.&quot;type&quot; = &apos;CONTAINER&apos;) THEN
			SET resourceType = r.&quot;type&quot;;
		ELSEIF (r.&quot;type&quot; = &apos;LINK&apos; AND INSTR(resourcePath, &apos;/services/&apos;) &gt; 0) THEN
			SET resourceType = r.&quot;type&quot;;
			leave getType;
		ELSEIF ((r.&quot;type&quot; = &apos;TABLE&apos; OR r.&quot;type&quot; = &apos;PROCEDURE&apos;) AND INSTR(resourcePath, &apos;/shared/&apos;) &gt; 0) THEN
			SET resourceType = r.&quot;type&quot;;
			leave getType;
		END IF;
	END FOR;
	IF (UPPER(debug) = &apos;Y&apos;) THEN
		SET message = moduleName||&apos; : resourceType=&apos;||NVL(resourceType,&apos;null&apos;) || &apos;   resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;);  
		CALL PRINT(message);
	END IF;

	IF (resourceType &lt;&gt; &apos;CONTAINER&apos; AND resourceType &lt;&gt; &apos;DATA_SOURCE&apos; AND (INSTR(resourcePath,&apos;/shared/&apos;) &gt; 0 AND resourceType = &apos;DATA_SOURCE&apos;)) THEN
		RAISE ex VALUE &apos;The starting path must be a CONTAINER/FOLDER or a published DATA_SOURCE.&apos;;
	END IF;

	IF (resourceType IN (&apos;LINK&apos;, &apos;TABLE&apos;, &apos;PROCEDURE&apos;)) THEN
		CALL /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(resourcePath, &apos;R&apos;, resourceName, parentPath);
		IF (UPPER(debug) = &apos;Y&apos;) THEN
			SET message = moduleName||&apos; : parentPath=&apos;||NVL(parentPath,&apos;null&apos;) || &apos;   resourceName=&apos;||NVL(resourceName,&apos;null&apos;);  
			CALL PRINT(message);
		END IF;
		SET resourcePath = parentPath;
		SET resourceType = &apos;CONTAINER&apos;;
	END IF;

	IF (UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : waiverList=&apos;||NVL(waiverList,&apos;null&apos;));
	END IF;

	-- Logic for /services/databases folders
	IF (INSTR(resourcePath, &apos;/services/databases&apos;) &gt; 0) THEN
		-- Iterate over the resource container list
		FOR r AS 
			SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) 
			WHERE resType &lt;&gt; &apos;CONTAINER&apos;
		DO
			IF (resourceName IS NULL OR (resourceName IS NOT NULL AND resourceName = r.name)) THEN
				SET incrFlag = true;

				-- Check the resourceType and resourcePath for the waiver list.  
				--   Evaluate the resource if it is not in the waiver list.
				IF (waiverList IS NULL OR LENGTH(TRIM(waiverList)) = 0 OR INSTR(waiverList, &apos;|&apos;||r.resType||&apos;:&apos;||r.resPath||&apos;|&apos;) = 0) THEN
					IF (UPPER(debug) = &apos;Y&apos;) THEN
						SET message = moduleName||&apos; : PROCESSING: resourceType=&apos;||r.resType||&apos;  resourcePath=&apos;||r.resPath;
						SET len = LENGTH(message);
						CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
						CALL PRINT(message);
						CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
					END IF;
					-- Evaluate the resources
					FOR e AS SELECT * FROM /shared/ASAssets/Utilities/validate/helpers/evaluateResource(
						debug, r.resPath, r.resType, displayViolations, includeList, excludeList, groupNum, pathNotAllowed, excludePathsList, maxNumberWebServiceOperations) 
					DO
						INSERT INTO result VALUES(e);

						IF (sendEmail IS NOT NULL AND UPPER(sendEmail) = &apos;Y&apos; AND( e.violation = &apos;F&apos; OR e.violation = &apos;W&apos;)) THEN
							SET email = emailList;
							SET displayName = &apos;To Whom It May Concern&apos;;
							-- Potentially could integrate with LDAP to get user email
							IF (email IS NOT NULL) THEN
								-- Set the subject and body for the email
								IF (e.violation = &apos;W&apos;) THEN
									SET subject = &apos;DV VALIDATION WARNING: &apos;;
								END IF;
								IF (e.violation = &apos;F&apos;) THEN
									SET subject = &apos;DV VALIDATION EXCEPTION: &apos;;
								END IF;
								SET body = &apos;To: &apos;|| displayName || CHR(10);
								SET body = body  || &apos;  &apos; || subject || CHR(10);
								IF (e.ruleViolations IS NOT NULL AND LENGTH(TRIM(e.ruleViolations)) &gt; 0) THEN
									SET body = body  || &apos;   The following resource has been flagged due to the following rule violations: &apos;||e.ruleViolations || CHR(10);
								END IF;
								IF (e.ruleMessage IS NOT NULL AND LENGTH(TRIM(e.ruleMessage)) &gt; 0) THEN
									SET body = body  || &apos;      Violation message: &apos;||e.ruleMessage || CHR(10);
								END IF;
								IF (e.ruleWarnings IS NOT NULL AND LENGTH(TRIM(e.ruleWarnings)) &gt; 0) THEN
									SET body = body  || &apos;   The following resource has been flagged due to the following rule warnings: &apos;||e.ruleWarnings || CHR(10);
								END IF;
								SET body = body  || &apos;      Resource Path=&apos; || NVL(e.resourcePath,&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Modified User=&apos; || NVL(e.modUser,&apos;null&apos;) || &apos;@&apos; || NVL(e.modDomain,&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Modified Date=&apos; || NVL(CAST(e.modDate AS VARCHAR),&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Original User=&apos; || NVL(e.ownerName,&apos;null&apos;) || &apos;@&apos; || NVL(e.ownerDomain,&apos;null&apos;) || CHR(10);
								SET body = body  || CHR(10) || ruleKey;
								SET subject = subject || &apos;Resource=&apos;||NVL(e.resourceName,&apos;null&apos;)||&apos;  Server=&apos;||sourceServerDisplayName;
								-- Print out email debug
								IF (UPPER(debug) = &apos;Y&apos;) THEN
									SET message = moduleName||&apos; : Send Email:&apos;||CHR(10)||
															&apos;  email=&apos;||NVL(email,&apos;null recipient list&apos;)||CHR(10)||
															&apos;  subject=&apos;||NVL(subject,&apos;null subject&apos;)||CHR(10)||
															&apos;  body=&apos;||NVL(body,&apos;null message body&apos;);
									CALL PRINT(message);
								END IF;
								-- Send the email
								CALL /lib/util/SendEMail(null, null, email, null, null, subject, emailFormat, NVL(body,&apos;null message body&apos;));
							END IF;
						END IF;

						-- Only increment the groupNum once in the loop and only when rows are returned.
						IF (incrFlag) THEN
							SET groupNum = groupNum + 1;
							SET incrFlag = false;
						END IF;
					END FOR;
				ELSE
					IF (UPPER(debug) = &apos;Y&apos;) THEN
						SET message = moduleName||&apos; : WAIVER LIST: resourceType=&apos;||r.resType||&apos;  resourcePath=&apos;||r.resPath;
						SET len = LENGTH(message);
						CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
						CALL PRINT(message);
						CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
					END IF;
				END IF;
			END IF;
		END FOR;

	-- Logic for /services/webservices folders
	ELSEIF (INSTR(resourcePath, &apos;/services/webservices&apos;) &gt; 0 AND (resourceType = &apos;CONTAINER&apos; OR resourceType = &apos;DATA_SOURCE&apos;)) THEN

		SET resourceName = null;
		IF (resourceType = &apos;DATA_SOURCE&apos;) THEN
			CALL /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(resourcePath, &apos;R&apos;, resourceName, parentPath);
			IF (UPPER(debug) = &apos;Y&apos;) THEN
				SET message = moduleName||&apos; : parentPath=&apos;||NVL(parentPath,&apos;null&apos;) || &apos;   resourceName=&apos;||NVL(resourceName,&apos;null&apos;);  
				CALL PRINT(message);
			END IF;
			SET resourcePath = parentPath;
			SET resourceType = &apos;CONTAINER&apos;;
		END IF;

		FOR r AS 
			SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) 
				WHERE resType = &apos;DATA_SOURCE&apos;
				  AND resPath &lt;&gt; &apos;/services/webservices/system/admin&apos;
				  AND resPath &lt;&gt; &apos;/services/webservices/system/util&apos;
		DO
			IF (resourceName IS NULL OR (resourceName IS NOT NULL AND resourceName = r.name)) THEN
				IF (UPPER(debug) = &apos;Y&apos;) THEN
					SET message = moduleName||&apos; : resourceType=&apos;||r.resType||&apos;  resourcePath=&apos;||r.resPath;
					SET len = LENGTH(message);
					CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
					CALL PRINT(message);
					CALL PRINT(RPAD(&apos;-&apos;, len, &apos;-&apos;));
				END IF;

				SET incrFlag = true;

				-- Check the resourceType and resourcePath for the waiver list.  
				--   Evaluate the resource if it is not in the waiver list.
				IF (waiverList IS NULL OR LENGTH(TRIM(waiverList)) = 0 OR INSTR(waiverList, &apos;|&apos;||r.resType||&apos;:&apos;||r.resPath||&apos;|&apos;) = 0) THEN
					-- Evaluate the resources
					FOR e AS SELECT * FROM /shared/ASAssets/Utilities/validate/helpers/evaluateResource(
						debug, r.resPath, r.resType, displayViolations, includeList, excludeList, groupNum, pathNotAllowed, excludePathsList, maxNumberWebServiceOperations) 
					DO
						INSERT INTO result VALUES(e);

						IF (sendEmail IS NOT NULL AND UPPER(sendEmail) = &apos;Y&apos; AND( e.violation = &apos;F&apos; OR e.violation = &apos;W&apos;)) THEN
							SET email = null;
							SET displayName = &apos;To Whom It May Concern&apos;;
							-- Potentially could integrate with LDAP to get user email
							IF (email IS NOT NULL) THEN
								-- Set the subject and body for the email
								IF (e.violation = &apos;W&apos;) THEN
									SET subject = &apos;DV VALIDATION WARNING: &apos;;
								END IF;
								IF (e.violation = &apos;F&apos;) THEN
									SET subject = &apos;DV VALIDATION EXCEPTION: &apos;;
								END IF;
								SET body = &apos;To: &apos;|| displayName || CHR(10);
								SET body = body  || &apos;  &apos; || subject || CHR(10);
								IF (e.ruleViolations IS NOT NULL AND LENGTH(TRIM(e.ruleViolations)) &gt; 0) THEN
									SET body = body  || &apos;   The following resource has been flagged due to the following rule violations: &apos;||e.ruleViolations || CHR(10);
								END IF;
								IF (e.ruleMessage IS NOT NULL AND LENGTH(TRIM(e.ruleMessage)) &gt; 0) THEN
									SET body = body  || &apos;      Violation message: &apos;||e.ruleMessage || CHR(10);
								END IF;
								IF (e.ruleWarnings IS NOT NULL AND LENGTH(TRIM(e.ruleWarnings)) &gt; 0) THEN
									SET body = body  || &apos;   The following resource has been flagged due to the following rule warnings: &apos;||e.ruleWarnings || CHR(10);
								END IF;
								SET body = body  || &apos;      Resource Path=&apos; || NVL(e.resourcePath,&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Modified User=&apos; || NVL(e.modUser,&apos;null&apos;) || &apos;@&apos; || NVL(e.modDomain,&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Modified Date=&apos; || NVL(CAST(e.modDate AS VARCHAR),&apos;null&apos;) || CHR(10);
								SET body = body  || &apos;      Resource Original User=&apos; || NVL(e.ownerName,&apos;null&apos;) || &apos;@&apos; || NVL(e.ownerDomain,&apos;null&apos;) || CHR(10);
								SET body = body  || CHR(10) || ruleKey;
								SET subject = subject || &apos;Resource=&apos;||NVL(e.resourceName,&apos;null&apos;)||&apos;  Server=&apos;||sourceServerDisplayName;
								-- Print out email debug
								IF (UPPER(debug) = &apos;Y&apos;) THEN
									SET message = moduleName||&apos; : Send Email:&apos;||CHR(10)||
															&apos;  email=&apos;||NVL(email,&apos;null recipient list&apos;)||CHR(10)||
															&apos;  subject=&apos;||NVL(subject,&apos;null subject&apos;)||CHR(10)||
															&apos;  body=&apos;||NVL(body,&apos;null message body&apos;);
									CALL PRINT(message);
								END IF;
								-- Send the email
								CALL /lib/util/SendEMail(null, null, email, null, null, subject, emailFormat, NVL(body,&apos;null message body&apos;));
							END IF;
						END IF;

						-- Only increment the groupNum once in the loop and only when rows are returned.
						IF (incrFlag) THEN
							SET groupNum = groupNum + 1;
							SET incrFlag = false;
						END IF;
					END FOR;
				ELSE
					IF (UPPER(debug) = &apos;Y&apos;) THEN
						SET message = moduleName||&apos; : The resource was found in the waiver list and was not evaluated.&apos;;  
						CALL PRINT(message);
					END IF;
				END IF;
			END IF;
		END FOR;
	ELSE
		IF (UPPER(debug) = &apos;Y&apos;) THEN
			SET message = moduleName||&apos; : The resource is not valid for applying rules.  resourceType=&apos;||NVL(resourceType,&apos;null&apos;) || &apos;   resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;);  
			CALL PRINT(message);
		END IF;
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1546981287194</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564694086875</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/379</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/272</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/371</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/306</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/184</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/304</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/305</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/211</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/212</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/273</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/274</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/288</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/355</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/210</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/191</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/255</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/173</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1546981287194</attribute>
</metadata>