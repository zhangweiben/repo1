<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="compareResourcesTargetServer" path="/shared/ASAssets/Utilities/validate/compareResourcesTargetServer" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>compareResourcesTargetServer:

	This procedure is used to compare resources on the current &quot;source&quot; DV server with the same resource path on a &quot;target&quot; DV server.

	Pre-Requisites:
		A DV &quot;Composite Datasource&quot; must be created somewhere in the &quot;source&quot; DV server that introspects the script
			&quot;/shared/ASAssets/Utilities/repository/getScriptText&quot; on the target DV server.
		A DV dynamic path to a &quot;Composite Datasource&quot; with getScriptText must be provided as input.
		Do not applyReservedListToPath as that will be done within this procedure.
			--	  Example:  /shared/Common/ComparisonTools/TDV_Server/Utilities/repository/getScriptText
 
	Input:
		inDebug						CHAR(1),		-- N=no debug.  Y=debug on.
		startingResource			LONGVARCHAR, 	-- starting container or resource path
		targetDVSchemaPath			LONGVARCHAR, 	-- DV Path to a &quot;Composite Datasource&quot; schema where the following resources are published:
													--			getScriptText
													--	  Example:  /shared/Common/ComparisonTools/DV_Server/Utilities/repository
		statusFilterList			VARCHAR,	 	-- If null, then display all STATUS, otherwise display the status that are listed separated by spaces or commas.
												 	--   Status List:  EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
			EQUAL 				= The two resources are exactly the same (equivalent).
			DIFFERENT 			= The two resources are different.
			TARGET_NOT_EXIST	= The target resource does not exist for the same path as the source resource.
			BOTH_UNREADABLE		= The getScriptText procedure could not read the resource type requested on both DV server.
			SOURCE_UNREADABLE	= The getScriptText procedure could not read the resource type requested on the source DV server.
			TARGET_UNREADABLE	= The getScriptText procedure could not read the resource type requested on the target DV server.
			UNKNOWN				= The status could not be determined
	Output:
		result					PIPE (
			resPath				VARCHAR(4096),
			resType				VARCHAR,
			subtype				VARCHAR,
			status				VARCHAR, -- EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
			sourceNumChars		INTEGER,
			targetNumChars		INTEGER,
			sourceScript		LONGVARCHAR,
			targetScript		LONGVARCHAR,
			message				LONGVARCHAR
		)
	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2019.200	04/18/2019		Mike Tinius			7.0.8			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="inDebug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="startingResource" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="targetDVSchemaPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="statusFilterList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="resPath">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="resType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="sourceNumChars">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="targetNumChars">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="sourceScript">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="targetScript">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="message">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getScriptText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inSubType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="scriptText" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* compareResourcesTargetServer:

	This procedure is used to compare resources on the current &quot;source&quot; DV server with the same resource path on a &quot;target&quot; DV server.

	Pre-Requisites:
		A DV &quot;Composite Datasource&quot; must be created somewhere in the &quot;source&quot; DV server that introspects the script
			&quot;/shared/ASAssets/Utilities/repository/getScriptText&quot; on the target DV server.
		A DV dynamic path to a &quot;Composite Datasource&quot; with getScriptText must be provided as input.
		Do not applyReservedListToPath as that will be done within this procedure.
			--	  Example:  /shared/Common/ComparisonTools/TDV_Server/Utilities/repository/getScriptText
 
	Input:
		inDebug						CHAR(1),		-- N=no debug.  Y=debug on.
		startingResource			LONGVARCHAR, 	-- starting container or resource path
		targetDVSchemaPath			LONGVARCHAR, 	-- DV Path to a &quot;Composite Datasource&quot; schema where the following resources are published:
													--			getScriptText
													--	  Example:  /shared/Common/ComparisonTools/DV_Server/Utilities/repository
		statusFilterList			VARCHAR,	 	-- If null, then display all STATUS, otherwise display the status that are listed separated by spaces or commas.
												 	--   Status List:  EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
			EQUAL 				= The two resources are exactly the same (equivalent).
			DIFFERENT 			= The two resources are different.
			TARGET_NOT_EXIST	= The target resource does not exist for the same path as the source resource.
			BOTH_UNREADABLE		= The getScriptText procedure could not read the resource type requested on both DV server.
			SOURCE_UNREADABLE	= The getScriptText procedure could not read the resource type requested on the source DV server.
			TARGET_UNREADABLE	= The getScriptText procedure could not read the resource type requested on the target DV server.
			UNKNOWN				= The status could not be determined
	Output:
		result					PIPE (
			resPath				VARCHAR(4096),
			resType				VARCHAR,
			subtype				VARCHAR,
			status				VARCHAR, -- EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
			sourceNumChars		INTEGER,
			targetNumChars		INTEGER,
			sourceScript		LONGVARCHAR,
			targetScript		LONGVARCHAR,
			message				LONGVARCHAR
		)
	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2019.200	04/18/2019		Mike Tinius			7.0.8			Created new

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE compareResourcesTargetServer(
	IN inDebug					CHAR(1),		-- N=no debug.  Y=debug on.
	IN startingResource			LONGVARCHAR, 	-- starting container or resource path
	IN targetDVSchemaPath		LONGVARCHAR, 	-- DV Path to a &quot;Composite Datasource&quot; schema where the following resources are published:
												--			getScriptText
												--	  Example:  /shared/Common/ComparisonTools/DV_Server/Utilities/repository
	IN statusFilterList			VARCHAR,	 	-- If null, then display all STATUS, otherwise display the status that are listed separated by spaces or commas.
											 	--   Status List:  EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
	OUT result					PIPE (
		resPath				VARCHAR(4096),
		resType				VARCHAR,
		subtype				VARCHAR,
		status				VARCHAR, -- EQUAL, DIFFERENT, TARGET_NOT_EXIST, BOTH_UNREADABLE, SOURCE_UNREADABLE, TARGET_UNREADABLE, UNKNOWN
		sourceNumChars		INTEGER,
		targetNumChars		INTEGER,
		sourceScript		LONGVARCHAR,
		targetScript		LONGVARCHAR,
		message				LONGVARCHAR
	)
)
BEGIN
	DECLARE moduleName		VARCHAR DEFAULT &apos;compareResourcesTargetServer&apos;;
	DECLARE debug			CHAR(1) DEFAULT UPPER(NVL(inDebug,&apos;N&apos;));
	DECLARE parentPath		VARCHAR(4096);
	DECLARE parentType		VARCHAR;
	DECLARE resPath			VARCHAR(4096);
	DECLARE resType			VARCHAR;
	DECLARE resName			VARCHAR;
	DECLARE message			LONGVARCHAR;
	DECLARE sqlResourcePath	VARCHAR(4000);
	DECLARE sqlStatement	LONGVARCHAR;
	DECLARE resExists		BOOLEAN;
	DECLARE TYPE recType	ROW (
		resPath				VARCHAR(4096),
		resType				VARCHAR,
		subtype				VARCHAR,
		status				VARCHAR,
		sourceNumChars		INTEGER,
		targetNumChars		INTEGER,
		sourceScript		LONGVARCHAR,
		targetScript		LONGVARCHAR,
		message				LONGVARCHAR
	);
	DECLARE rec				recType;
	DECLARE curs			CURSOR(scriptText LONGVARCHAR);
	DECLARE ex				EXCEPTION;

	-- Validate the paths
	IF (targetDVSchemaPath IS NULL OR LENGTH(TRIM(targetDVSchemaPath)) = 0) THEN
		RAISE ex VALUE &apos;The input variable &quot;targetDVSchemaPath&quot; may not be null or empty.&apos;;
	END IF;
	CALL /lib/resource/ResourceExists(targetDVSchemaPath, &apos;CONTAINER&apos;, null, resExists);
	IF (NOT resExists) THEN
		RAISE ex VALUE &apos;The input variable &quot;targetDVSchemaPath&quot; path does not exist.&apos;;
	END IF;
	-- Set the path to getScriptText and validate it.
	SET sqlResourcePath = targetDVSchemaPath || &apos;/getScriptText&apos;;
	CALL /lib/resource/ResourceExists(sqlResourcePath, &apos;PROCEDURE&apos;, null, resExists);
	IF (not resExists) THEN
		RAISE ex VALUE &apos;The path does not exist.  path=&apos;||sqlResourcePath;
	END IF;
	CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(sqlResourcePath, null, sqlResourcePath);

	FOR r AS SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(startingResource, null) DO
		SET resPath = r.&quot;path&quot;;
		SET resType = r.&quot;type&quot;;
	END FOR;
	IF (UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(moduleName||&apos; : startingResource=&apos;||NVL(startingResource,&apos;null&apos;));
		CALL PRINT(moduleName||&apos; : resPath=&apos;||NVL(resPath,&apos;null&apos;));
		CALL PRINT(moduleName||&apos; : resType=&apos;||NVL(resType,&apos;null&apos;));
	END IF;


	IF (resPath IS NOT NULL AND resType IS NOT NULL) THEN
		IF (resType &lt;&gt; &apos;CONTAINER&apos; AND resType &lt;&gt; &apos;DATA_SOURCE&apos;) THEN
			CALL /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(resPath, &apos;E&apos;, resName, parentPath);
			FOR r AS SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(parentPath, null) DO
				SET parentType = r.&quot;type&quot;;
			END FOR;
		ELSE
			SET parentPath = resPath;
			SET parentType = resType;
		END IF;

		IF (UPPER(debug) = &apos;Y&apos;) THEN
			CALL PRINT(moduleName||&apos; : parentPath=&apos;||NVL(parentPath,&apos;null&apos;));
			CALL PRINT(moduleName||&apos; : parentType=&apos;||NVL(parentType,&apos;null&apos;));
			CALL PRINT(moduleName||&apos; : resPath=&apos;||NVL(resPath,&apos;null&apos;));
			CALL PRINT(moduleName||&apos; : resName=&apos;||NVL(resName,&apos;null&apos;));
			CALL PRINT(moduleName||&apos; : resType=&apos;||NVL(resType,&apos;null&apos;));
		END IF;

		-- Loop through the folder
		FOR r AS 
			SELECT resPath, resType, subtype, name FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(parentPath, parentType)
			WHERE resType &lt;&gt; &apos;CONTAINER&apos;
		DO
			IF (resName IS NULL or (resName IS NOT NULL AND resName = r.name)) THEN
				IF (UPPER(debug) = &apos;Y&apos;) THEN
					CALL PRINT(moduleName||&apos; : Processing:  resType=[&apos;||NVL(r.resType,&apos;null&apos;)||&apos;]  resPath=[&apos;||NVL(r.resPath,&apos;null&apos;)||&apos;]&apos;);
				END IF;
				SET rec = null;
				SET rec.resPath = r.resPath;
				SET rec.resType = r.resType;
				SET rec.subtype = r.subtype;
				SET rec.status = &apos;PROCESSING&apos;;
				CALL /shared/ASAssets/Utilities/repository/getScriptText(r.resPath, r.resType, r.subtype, rec.sourceScript);
				BEGIN
					SET sqlStatement = &apos;SELECT scriptText FROM &apos;||sqlResourcePath||&apos;(r.resPath, r.resType, r.subtype)&apos;;
					OPEN curs FOR sqlStatement;
					FOR script AS curs DO
						SET rec.targetScript = script.ScriptText;
					END FOR;
				EXCEPTION
					ELSE
						SET rec.message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
						IF (INSTR(rec.message, &apos;does not exist&apos;) &gt; 0) THEN
							SET rec.status = &apos;TARGET_NOT_EXIST&apos;;
						END IF;
				END;
				-- Determine the status
				IF (rec.status = &apos;PROCESSING&apos; AND rec.sourceScript IS NULL AND rec.targetScript IS NULL) THEN
					SET rec.status = &apos;BOTH_UNREADABLE&apos;;
				ELSEIF (rec.status = &apos;PROCESSING&apos; AND rec.sourceScript IS NOT NULL AND rec.targetScript IS NULL) THEN
					SET rec.status = &apos;TARGET_UNREADABLE&apos;;
					SET rec.sourceNumChars = LENGTH(rec.sourceScript||&apos;|&apos;)-1;
				ELSEIF (rec.status = &apos;PROCESSING&apos; AND rec.sourceScript IS NULL AND rec.targetScript IS NOT NULL) THEN
					SET rec.status = &apos;SOURCE_UNREADABLE&apos;;
					SET rec.targetNumChars = LENGTH(rec.targetScript||&apos;|&apos;)-1;
				ELSEIF (rec.status = &apos;PROCESSING&apos; AND rec.sourceScript = rec.targetScript) THEN
					SET rec.status = &apos;EQUAL&apos;;
					SET rec.sourceNumChars = LENGTH(rec.sourceScript||&apos;|&apos;)-1;
					SET rec.targetNumChars = LENGTH(rec.targetScript||&apos;|&apos;)-1;
				ELSEIF (rec.status = &apos;PROCESSING&apos; AND rec.sourceScript &lt;&gt; rec.targetScript) THEN
					SET rec.status = &apos;DIFFERENT&apos;;
					SET rec.sourceNumChars = LENGTH(rec.sourceScript||&apos;|&apos;)-1;
					SET rec.targetNumChars = LENGTH(rec.targetScript||&apos;|&apos;)-1;
				ELSEIF (rec.status = &apos;PROCESSING&apos;) THEN
					SET rec.status = &apos;UNKNOWN&apos;;
				END IF;

				-- Insert into the pipe
				IF (statusFilterList IS NULL OR LENGTH(TRIM(statusFilterList)) = 0 OR INSTR(UPPER(statusFilterList), rec.status) &gt; 0) THEN
					INSERT INTO result VALUES(rec);
				END IF;
			END IF;
		END FOR;
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1555617744469</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564694106547</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/131</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/148</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/147</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/149</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/129</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/161</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/130</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/151</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/150</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1555617744469</attribute>
</metadata>