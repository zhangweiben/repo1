<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="getDocPreambleImpl1" path="/shared/ASAssets/Utilities/documentation/implementations/getDocPreambleImpl1" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getDocPreambleImpl1:

	This procedure provides an implementation 1 for retrieving the preamble to the documentation.

	This procedure is invoked by the getAllDocumentationAPI in a loop.  
	The output of this procedure provides the formatting for the preample of the documentation.  
	A user may wish to customize the preamble text for their specific project.
	The idea behind this procedure is that it provides a template for an implementation.  
	A user of the documentation utilities may choose to copy and create a new implementation and then customize it for their project.  
	Any new implementation “must” follow the input and output interface definitions as shown below.

	Input:
		fullResourcePath - (optional) Full resource path which includes the path and the resource name  
			Values: e.g. /shared/examples
		resourceType - (optional) Type of CIS resource to be created
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. CONTAINER
	Output: 
		formattedText - formatted text is out output complete with a separator at the beginning of the resource.

	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.3		07/25/2012		Mike Tinius			5.2.0			Created new
	2019.4		04/04/2019		Mike Tinius			7.0.8			Changed custom functions to explicit paths.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.



	TYPES / SUBTYPES:
	=================
	The following resource types/subtypes are supported by this operation.  Resources
	cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
	within a physical data source. 

	(Basic CIS folder)
	* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
	* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
	(Database)
	* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
	* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
	(Web Services)
	* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
	* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
	* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
	(Connectors)
	* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

	* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
	* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

	* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
	* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
	* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
	* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
	* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
	* DATA_SOURCE / NONE - A custom java procedure data source.

	* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
	* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
	* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
	* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
	* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

	* LINK / unknown at this time

	(CIS procedures)
	* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
	(Custom procedures)
	* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
	(Database procedures)
	* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
	* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
	(XML procedures)
	* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
	(Misc procedures)
	* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

	* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
	* TABLE / DATABASE_TABLE - A Composite database table.
	* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
	* TABLE / SYSTEM_TABLE - A Composite system table view.

	* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

	* TRIGGER / NONE - A Composite trigger.   Created disabled.</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="constantPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="formattedText">
          <datatype name="Text" referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getDocPreambleImpl1:

	This procedure provides an implementation 1 for retrieving the preamble to the documentation.

	This procedure is invoked by the getAllDocumentationAPI in a loop.  
	The output of this procedure provides the formatting for the preample of the documentation.  
	A user may wish to customize the preamble text for their specific project.
	The idea behind this procedure is that it provides a template for an implementation.  
	A user of the documentation utilities may choose to copy and create a new implementation and then customize it for their project.  
	Any new implementation “must” follow the input and output interface definitions as shown below.

	Input:
		resourcePath - (optional) The starting folder path from which to start formatting the documentation.  It is always of type CONTAINER.
							Values: e.g. /shared/examples
		resourceType - 	The resource type of the resource path.
							Values: e.g. CONTAINER
		constantPath - 	This is the path to the constants file
							Values: e.g. /shared/Utilities/documentation/constants()
	Output: 
		formattedText - formatted text is out output complete with a separator at the beginning of the resource.

	Exceptions:  none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2012.3		07/25/2012		Mike Tinius			5.2.0			Created new
	2019.4		04/04/2019		Mike Tinius			7.0.8			Changed custom functions to explicit paths.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE getDocPreambleImpl1(
	IN resourcePath			LONGVARCHAR, 
	IN resourceType			VARCHAR,
	IN constantPath			LONGVARCHAR,
	OUT result				PIPE (formattedText	/lib/util/System.Text)
)
BEGIN
	DECLARE moduleName 		VARCHAR DEFAULT &apos;geDocPreambleImpl1&apos;;
	DECLARE formattedText	/lib/util/System.Text DEFAULT &apos;&apos;;
	DECLARE eol				VARCHAR;
--	Uncomment any of the following if required for your implementation:
--	DECLARE debug 			VARCHAR(1);
--	DECLARE beginSeparator	VARCHAR;
--	DECLARE endSeparator	VARCHAR;
--	DECLARE minorSeparator 	VARCHAR;

--	CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;debug&apos;, 1, debug);
--	CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;beginSeparator&apos;, 1, beginSeparator);
--	CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;endSeparator&apos;, 1, endSeparator);
--	CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;minorSeparator&apos;, 1, minorSeparator);

	CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;eol&apos;, 1, eol);

	-- Create a preamble for the documentation
	set formattedText = formattedText || eol || &apos;Documentation Generated on &apos;||CURRENT_TIMESTAMP || eol;
	set formattedText = formattedText ||        &apos;Documentation Generated for: &apos;|| eol;
	set formattedText = formattedText ||        &apos;       resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;) || eol;
	set formattedText = formattedText ||        &apos;       resourceType=&apos;||NVL(resourceType,&apos;null&apos;) || eol;

	insert into result values(formattedText);
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564681667732</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>