<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="convertTemperatureUnit" path="/shared/ASAssets/Utilities/conversions/convertTemperatureUnit" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>convertTemperatureUnit
    
    This procedure is used to convert passed in temperatures from one unit of 
    measurement to another. Temperatures can be converted from / to degrees in 
    Fahrenheit, Celsius and Kelvin.


    Input:
		inputTemperature	 - The input temperature value to be converted.

		inputUnits 			 - The current temperature of the input temperature. Valid values are C, K and F

		targetUnits 		 - The target temperature unit to convert to. Valid values are C, K and F


    Output:
        convertedTemperature - A float containing the converted temperature value.
            

    Exceptions:  
		/lib/util/System.IllegalArgumentException - Exception raised if the values of either inputUnits or targetUnits are not one of K, C or F


	Release:	Modified Date:	Modified By:		DV Version:		Reason:
    2013.3		07/24/2013      Matthew Lee         6.2.0          	Created new
    2015.3		08/10/2015      Calvin Goodrich     6.2.0           Fixed an issue with precision in converting Fahrenheit to Celsius.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="inputTemperature" direction="IN" nullable="true">
      <datatype name="FLOAT" type="FLOAT" minValue="1.1754943508222875E-38" maxValue="3.4028234663852886E38"/>
    </parameter>
    <parameter name="inputUnits" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1"/>
    </parameter>
    <parameter name="targetUnits" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1"/>
    </parameter>
    <parameter name="convertedTemperature" direction="OUT" nullable="true">
      <datatype name="FLOAT" type="FLOAT" minValue="1.1754943508222875E-38" maxValue="3.4028234663852886E38"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* convertTemperatureUnit

    This procedure is used to convert passed in temperatures from one unit of 
    measurement to another. Temperatures can be converted from / to degrees in 
    Fahrenheit, Celsius and Kelvin.


    Input:
		inputTemperature	 - The input temperature value to be converted.

		inputUnits 			 - The current temperature of the input temperature. Valid values are C, K and F

		targetUnits 		 - The target temperature unit to convert to. Valid values are C, K and F


    Output:
        convertedTemperature - A float containing the converted temperature value.
            

    Exceptions:  
		/lib/util/System.IllegalArgumentException - Exception raised if the values of either inputUnits or targetUnits are not one of K, C or F


	Release:	Modified Date:	Modified By:		DV Version:		Reason:
    2013.3		07/24/2013      Matthew Lee         6.2.0          	Created new
    2015.3		08/10/2015      Calvin Goodrich     6.2.0           Fixed an issue with precision in converting Fahrenheit to Celsius.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
    PROCEDURE convertTemperatureUnit(IN inputTemperature FLOAT, IN inputUnits VARCHAR(1), IN targetUnits VARCHAR(1), OUT convertedTemperature FLOAT)
    BEGIN

		DECLARE inputUnitsUpper VARCHAR(1) DEFAULT UPPER(inputUnits);
		DECLARE targetUnitsUpper VARCHAR(1) DEFAULT UPPER(targetUnits);

		--Check to make sure that the input and target unit values are one of the accepted values. If not then throw an exception
		IF NOT inputUnitsUpper IN (&apos;F&apos;, &apos;C&apos;, &apos;K&apos;) THEN
			RAISE /lib/util/System.IllegalArgumentException VALUE &apos;Error: Input parameter inputUnits has an invalid value of &apos; || inputUnits;
		END IF;

		IF NOT targetUnitsUpper IN (&apos;F&apos;,&apos;C&apos;, &apos;K&apos;) THEN
			RAISE /lib/util/System.IllegalArgumentException VALUE &apos;Error: Input parameter targetUnits has an invalid value of &apos; || targetUnits;
		END IF;

        --If the input and target units match then just return the input value
        IF targetUnitsUpper = inputUnitsUpper THEN
            SET convertedTemperature = inputTemperature;
        ELSE 
            IF targetUnitsUpper = &apos;C&apos; THEN
                IF inputUnitsUpper = &apos;F&apos; THEN
                    SET convertedTemperature = 5 * (inputTemperature - 32) / 9;
                ELSE 
                    SET convertedTemperature = inputTemperature - 273.15;
                END IF;
            --Convert the temperature to Fahrenheit
            ELSEIF targetUnitsUpper = &apos;F&apos; THEN
                --If the input temperature is in Kelvins then convert to Celcius and first and then spill into the calculation from Celcius to Fahrenheit
                IF inputUnitsUpper = &apos;K&apos; THEN
                    SET convertedTemperature = inputTemperature - 273.15;
                END IF;
                SET convertedTemperature = (1.8 * inputTemperature) + 32;
            --Convert the temperature to Kelvins
            ELSEIF UPPER(targetUnits) = &apos;K&apos; THEN
                --If the input temperature is in degrees Farhrenheit then convert to Celcius first and then spill into the calculation from Celcius to Kelvins
                IF inputUnitsUpper = &apos;F&apos; THEN
                    SET convertedTemperature = 5 * (inputTemperature - 32) / 9;
                END IF;
                SET convertedTemperature = inputTemperature + 273.15;
            END IF;
        END IF;
    END</attribute>
  <attribute name="creationDate" type="LONG">1361208322913</attribute>
  <attribute name="creatorUserDomain" type="STRING">monsanto</attribute>
  <attribute name="creatorUserName" type="STRING">mjlee3</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564682784078</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>