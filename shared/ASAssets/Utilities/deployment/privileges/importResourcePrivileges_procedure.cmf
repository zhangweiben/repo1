<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="importResourcePrivileges" path="/shared/ASAssets/Utilities/deployment/privileges/importResourcePrivileges" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>importResourcePrivileges:

	This procedure is typically invoked by the deployment script via the published datasource ASAssets to apply privileges 
		from the previously saved privileges.xml file that lives on the TDV server.
		A deployment shell script may execute the following
			$DIRNAME/JdbcSample.sh $DATABASE $HOST $DBPORT $USER $PASSWORD $DOMAIN &quot;SELECT * FROM importResourcePrivileges(1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;

	Input:
        recurseChildResources - A bit flag indicating whether the privileges of the resources in the
                                resourcePrivsList should be recursively applied to any child resources 
                                (assumes the resource is a container.)  
            Values: 1=recurse children or 0=do not recurse

        recurseDependencies - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                              resourcePrivsList should be applied to any resources that they use.
            Values: 1=recurse dependencies or 0=do not recurse

        recurseDependents - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                            resourcePrivsList should be applied to any resources that are used by them.
            Values: 1=recurse dependents or 0=do not recurse

		fileName 						LONGVARCHAR,-- The TDV server file path to the privileges.xml file.
		mode 							VARCHAR,	-- OVERWRITE_APPEND (default),  SET_EXACTLY

	Output:
		createResponse 					XML, 		-- the create response has no relevance.
		faultResponse 					XML			-- if not null then there was an exception and appropriate action should be taken by the invoking program or procedure.

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2014.4		10/16/2014      Jeremy Akers        6.2.6           Created new
	2019.200	05/30/2019		Mike Tinius			7.0.8			Modified

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="recurseChildResources" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependencies" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependents" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="privilegeFileName" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="mode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="invalidPathList" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Log" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToLog" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/Pause" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="timeInMilliSeconds" direction="IN">
        <datatype type="INTEGER"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/getFileContentsAscii" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="fileContent" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourcePrivilegesV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="setExactly" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="recurseChildResources" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="recurseDependencies" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="recurseDependents" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="inPrivilegeEntriesXML" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="invalidPathList" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	importResourcePrivileges:

	This procedure is typically invoked by the deployment script via the published datasource ASAssets to apply privileges 
		from the previously saved privileges.xml file that lives on the TDV server.
		A deployment shell script may execute the following
			$DIRNAME/JdbcSample.[sh|bat] $DATABASE $HOST $DBPORT $USER $PASSWORD $DOMAIN &quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(&apos;N&apos;, 1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;

	Input:
		debug 					- Y=debug on,  N=debug off.  Debug writes to CONSOLE and LOG.
        recurseChildResources 	- A bit flag indicating whether the privileges of the resources in the
									resourcePrivsList should be recursively applied to any child resources 
									(assumes the resource is a container.)  
									Values: 1=recurse children or 0=do not recurse

        recurseDependencies 	- A bit flag indicating whether the privileges of the resources in the resourcePrivsList
									resourcePrivsList should be applied to any resources that they use.
									Values: 1=recurse dependencies or 0=do not recurse

        recurseDependents 		- A bit flag indicating whether the privileges of the resources in the resourcePrivsList
									resourcePrivsList should be applied to any resources that are used by them.
									Values: 1=recurse dependents or 0=do not recurse

		privilegeFileName		- The TDV server file path to the privileges.xml file.
		mode 					- OVERWRITE_APPEND (default),  SET_EXACTLY

	Output:
		result					- SUCCESS if no invalid paths, WARNING if invalid path list otherwise an exception is thrown.
		invalidPathList			- If not null, then a comma-separated list of paths [path:type] that are invalid as they do not exist and no privileges were applied.

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2014.4		10/16/2014      Jeremy Akers        6.2.6           Created new
	2019.200	05/30/2019		Mike Tinius			7.0.8			Modified

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE importResourcePrivileges(
	IN debug							CHAR(1),		-- Y=debug on,  N=debug off.  Debug writes to CONSOLE and LOG.
	IN recurseChildResources			BIT,			-- 1=recurse children or 0=do not recurse
	IN recurseDependencies			 	BIT,			-- 1=recurse dependencies or 0=do not recurse
	IN recurseDependents		 		BIT,			-- 1=recurse dependents or 0=do not recurse
	IN privilegeFileName				LONGVARCHAR, 	-- The full TDV server file path to the privileges.xml file.
	IN mode 							VARCHAR,		-- OVERWRITE_APPEND (default),  SET_EXACTLY
	OUT result							VARCHAR,		-- SUCCESS if no invalid paths, WARNING if invalid path list otherwise an exception is thrown.
	OUT invalidPathList					LONGVARCHAR		-- If not null, then a comma-separated list of paths [path:type] that are invalid as they do not exist and no privileges were applied.
)
BEGIN
	DECLARE moduleName					VARCHAR DEFAULT &apos;importResourcePrivileges&apos;;
	DECLARE privEntries 				LONGVARCHAR;
	DECLARE setExactly					BIT DEFAULT 0;	-- 0=OVERWRITE_APPEND, 1=SET_EXACTLY
	DECLARE success						BIT;
    DECLARE createResponse 				XML;
    DECLARE faultResponse 				LONGVARCHAR;	-- If not null then throw an exception and appropriate action should be taken by the invoking program or procedure.
	DECLARE message						LONGVARCHAR;
	DECLARE ex							EXCEPTION;

	IF (mode = &apos;SET_EXACTLY&apos;) then
		set setExactly = 1;
	END IF;

	CALL /shared/ASAssets/Utilities/file/FileProcessingCJP/getFileContentsAscii(privilegeFileName, privEntries);
	IF (UPPER(debug) = &apos;Y&apos;) THEN
		SET message = moduleName||	&apos; :: BEGIN execute.&apos;||CHR(10)||
									&apos;    INPUT: &apos;||CHR(10)||
									&apos;      recurseChildResources=&apos;||NVL(CAST(recurseChildResources AS VARCHAR),&apos;null&apos;)||CHR(10)||
									&apos;      recurseDependencies=&apos;||NVL(CAST(recurseDependencies AS VARCHAR),&apos;null&apos;)||CHR(10)||
									&apos;      recurseDependents=&apos;||NVL(CAST(recurseDependents AS VARCHAR),&apos;null&apos;)||CHR(10)||
									&apos;      mode=&apos;||NVL(mode,&apos;null&apos;)||CHR(10)||
									&apos;      privilegeFileName=&apos;||NVL(privilegeFileName,&apos;null&apos;)||CHR(10)||
									&apos;      privEntries:&apos;||CHR(10)||NVL(privEntries,&apos;null&apos;)||CHR(10);
		CALL PRINT(message);
		CALL LOG(message);
		CALL PAUSE(500);
	END IF;

	CALL /shared/ASAssets/Utilities/repository/updateResourcePrivilegesV2(
		setExactly,
		recurseChildResources,
		recurseDependencies,
		recurseDependents,
		privEntries,
		success,
		faultResponse,
		invalidPathList
		);
	IF (faultResponse IS NOT NULL) THEN
		RAISE ex VALUE faultResponse;
	END IF;

	IF (invalidPathList IS NOT NULL) THEN
		SET message = moduleName||	&apos; :: END WARNING: invalid path list=&apos;||invalidPathList;
		SET result = &apos;WARNING&apos;;
	ELSE
		SET message = moduleName||	&apos; :: END sucessfully executed.&apos;;
		SET result = &apos;SUCCESS&apos;;
	END IF;

	IF (UPPER(debug) = &apos;Y&apos;) THEN
		CALL PRINT(message);
		CALL LOG(message);
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1381455664206</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564683346245</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/115</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/114</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/87</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/88</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>Pause</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>