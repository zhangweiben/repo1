<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:44831da2-fa57-48b1-b3e8-4297d727cb06 -->
<metadata name="getDistinctDeployableResourceListByLineage" path="/shared/ASAssets/Utilities/pdtool/helpers/getDistinctDeployableResourceListByLineage" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getDistinctDeployableResourceListByLineage:
	-- CIS Repository Helper Procedure --

		This procedure provides the logic for retrieving a distinct list of paths.  A resource may be shared with other resources but it 
		only needs to be deployed once.  This retrieves deployable resources based on lineage of the resource paths. If include triggers is 
		set then any triggers associated associated with a resource are also returned.  Any resource paths found in the exclude paths list 
		&quot;excludePathsList&quot; will be excluded from the result.   Any resources that are not inclusive of the include base paths &quot;includeBasePath&quot; 
		will be excluded from the result.

		PDTool (Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Professional Services engagement.

	Input:
		resourcePathList			LONGVARCHAR		- A comma separated list of resource paths to generate a plan for based on the lineage of all resources found.
		includeDependentTriggers	INTEGER 	 	- 0=do not include, 1=include 1st level dependents
													- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
		includeBasePath				LONGVARCHAR, 	- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											 		   It is intended to allow the user to specify a base path for published resources and 
											 		   /shared project folder resources that are related project level resources but exclude
											 		   any other resources not associated with those base paths.
		excludePathsList			LONGVARCHAR		- A comma separated list of resource paths or partials paths to exclude
										 				all paths or partial paths should end with a / to insure uniqueness of the path string.
		debug						CHAR(1),	 	- Y or N
	Output:
		resourceTreeList 							- A list of resources
			PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.resourceTreeType
				DECLARE PUBLIC TYPE resourceTreeType ROW (
					name			VARCHAR(255),
					resPath			TypeDefinitions.pathType,
					resType			VARCHAR(255),
					subType			VARCHAR(255)
				);

	Exceptions: none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2013.301	07/30/2013		Mike Tinius			6.0.0			Created new
	2013.4		10/28/2013		Mike Tinius			6.2.0			Added parameter inIgnoreResourceDoesNotExist
	2019.200	04/04/2019		Mike Tinius			7.0.8			Changed custom functions to explicit paths.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.</annotation>
  <parameters>
    <parameter name="resourcePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="includeDependentTriggers" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="includeBasePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="inIgnoreResourceDoesNotExist" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="resourceTreeList" direction="OUT" nullable="true">
      <datatype name="resourceTreeType" type="TABLE" refId="1">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resPath">
          <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
        </element>
        <element name="resType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/helpers/getDeployableResourceListByLineage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includeDependentTriggers" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="includeBasePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="seqNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resourceID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="parentID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resDepth">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="treeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dsResName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="dsResType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResSubType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsEnabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsChildCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*	getDistinctDeployableResourceListByLineage:
	-- CIS Repository Helper Procedure --

		This procedure provides the logic for retrieving a distinct list of paths.  A resource may be shared with other resources but it 
		only needs to be deployed once.  This retrieves deployable resources based on lineage of the resource paths. If include triggers is 
		set then any triggers associated associated with a resource are also returned.  Any resource paths found in the exclude paths list 
		&quot;excludePathsList&quot; will be excluded from the result.   Any resources that are not inclusive of the include base paths &quot;includeBasePath&quot; 
		will be excluded from the result.

		PDTool (Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Professional Services engagement.

	Input:
		resourcePathList			LONGVARCHAR		- A comma separated list of resource paths to generate a plan for based on the lineage of all resources found.
		includeDependentTriggers	INTEGER 	 	- 0=do not include, 1=include 1st level dependents
													- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
		includeBasePath				LONGVARCHAR, 	- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											 		   It is intended to allow the user to specify a base path for published resources and 
											 		   /shared project folder resources that are related project level resources but exclude
											 		   any other resources not associated with those base paths.
		excludePathsList			LONGVARCHAR		- A comma separated list of resource paths or partials paths to exclude
										 				all paths or partial paths should end with a / to insure uniqueness of the path string.
		inIgnoreResourceDoesNotExist INTEGER,		-- Ignore any resources that do not exist
													-- 1 = Bypass the processing of that resource.
													-- 0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
		debug						CHAR(1),	 	- Y or N
	Output:
		resourceTreeList 							- A list of resources
			PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.resourceTreeType
				DECLARE PUBLIC TYPE resourceTreeType ROW (
					name			VARCHAR(255),
					resPath			TypeDefinitions.pathType,
					resType			VARCHAR(255),
					subType			VARCHAR(255)
				);

	Exceptions: none

	Release:	Modified Date:	Modified By:		DV Version:		Reason:
	2013.301	07/30/2013		Mike Tinius			6.0.0			Created new
	2013.4		10/28/2013		Mike Tinius			6.2.0			Added parameter inIgnoreResourceDoesNotExist
	2019.200	04/04/2019		Mike Tinius			7.0.8			Changed custom functions to explicit paths.

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE getDistinctDeployableResourceListByLineage(
	IN resourcePathList			LONGVARCHAR,-- a comma separated list of resource paths
	IN includeDependentTriggers	INTEGER, 	-- 0=do not include, 1=include 1st level dependents
											-- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
	IN includeBasePath			LONGVARCHAR,-- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											--   It is intended to allow the user to specify a base path for published resources and 
											--   /shared project folder resources that are related project level resources but exclude
											--   any other resources not associated with those base paths.
	IN excludePathsList			LONGVARCHAR,-- a comma separated list of resource paths or partials paths to exclude
										 	-- all paths or partial paths should end with a / to insure uniqueness of the path string.
	IN inIgnoreResourceDoesNotExist	INTEGER,-- Ignore any resources that do not exist
											-- 1 = Bypass the processing of that resource.
											-- 0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
	IN debug					CHAR(1),	-- Y or N
	OUT resourceTreeList 		PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.resourceTreeType
)
BEGIN
	DECLARE moduleName				VARCHAR DEFAULT &apos;getDistinctDeployableResourceListByLineage&apos;;
	for r as 
		select DISTINCT resName, resPath, resType, subtype
			from /shared/ASAssets/Utilities/pdtool/helpers/getDeployableResourceListByLineage(resourcePathList, includeDependentTriggers, includeBasePath, excludePathsList, inIgnoreResourceDoesNotExist, debug)
	do
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;    DISTINCT  resource path=[&apos;||NVL(r.resPath,&apos;null&apos;)||&apos;]&apos;);
		INSERT INTO resourceTreeList values(r);
	end for;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564685197273</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>